{
  "_id": "fh74hqW59nbsQkT6N",
  "owner": {
    "_id": "yumJxCTi3otBwEFh4",
    "createdAt": {
      "$date": {
        "$numberLong": "1618264688331"
      }
    },
    "username": "chriscamplin",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/5798c9f697b3fea48de32ade2ba3e54c?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1619828955405"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1619828955405"
    }
  },
  "origId": null,
  "name": "Montara",
  "notes": "Music by 7T2Names",
  "rank": {
    "$numberDouble": "1.274834618054684"
  },
  "private": false,
  "unlisted": false,
  "username": "chriscamplin",
  "avatarUrl": "https://secure.gravatar.com/avatar/5798c9f697b3fea48de32ade2ba3e54c?default=retro&size=200",
  "settings": {
    "num": 100000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/7t2names/the-power-tareq-remix",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define NUM_SEGMENTS 428.0\n#define NUM_POINTS (NUM_SEGMENTS * 4.0)\n#define PI 3.14159265359\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nmat2 rotate2D(float _a) {\n\treturn mat2(cos(_a), sin(_a), -sin(_a), cos(_a));\n}\n\nvoid main() {\n  float numLinesDown = floor(vertexCount / NUM_POINTS);\n  // produces 0,1, 1,2, 2,3, ...\n  float point = floor(mod(vertexId, NUM_POINTS) / 2.0) + mod(vertexId, 2.0);\n  // line count\n  float count = floor(vertexId / NUM_POINTS);\n\n  float u = point / NUM_SEGMENTS;  // 0 <-> 1 across line\n  float v = count / numLinesDown;  // 0 <-> 1 by line\n  float invV = 1.0 - v;\n\n  // Only use the left most 1/4th of the sound texture\n  // because there's no action on the right\n  float historyX = u * 0.25;\n  // Match each line to a specific row in the sound texture\n  float historyV = (v * numLinesDown + 0.5) / soundRes.y;\n  float snd = texture2D(sound, vec2(historyX, historyV)).a;\n  float x = u * fract(time / PI) - 1.0;\n  float y = v * 2.0 - 1.0;\n  float xOff = sin(PI * count + x * 0.35) * 2.0;\n  float yOff = cos(PI * count + y * 0.005) * 6.0;\n  vec2 xy = vec2(\n      x * mix(yOff, 1.0, invV),\n      y + mod(snd * 2.0, 5.0 * xOff) * 1.0) / (v + xOff);\n  gl_PointSize = snd * 3. - xOff - yOff; \n  //gl_PointSize po*= 20.0 / cols; \n  gl_PointSize *= resolution.x / 1800.; \n  xy -= vec2(0.5);\n  xy *= rotate2D(snd * PI * 2.0);\n  xy += vec2(0.5);\n  gl_Position = vec4(xy, xOff , 1);\n  xy -= vec2(0.5);\n  xy *= rotate2D(-snd * -PI * -2.0);\n  xy += vec2(0.5);\n  float hue = snd  * xOff;\n  float sat = invV;\n  float val = invV;\n  v_color = mix(vec4(hsv2rgb(vec3(hue, sat, val)), 1), background, v * v);\n}"
  },
  "screenshotURL": "data/images/images-mbsypi50i68ym2i64-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "239"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "FxFfXYaJTWqPR3hbc"
}