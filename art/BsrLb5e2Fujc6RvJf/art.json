{
  "_id": "BsrLb5e2Fujc6RvJf",
  "owner": {
    "_id": "HzeqnW8R7voj7FLgT",
    "createdAt": {
      "$date": "1505942443270"
    },
    "profile": {
      "name": null,
      "avatarUrl": "https://avatars.githubusercontent.com/trip-les-ix?s=200"
    },
    "username": "trip-les-ix"
  },
  "createdAt": {
    "$date": "1568768683451"
  },
  "modifiedAt": {
    "$date": "1568768683451"
  },
  "origId": "vixRSiPMAiZ6AmgNA",
  "name": "Simple Fractal wip",
  "notes": "",
  "rank": "1.248029839768716",
  "private": false,
  "unlisted": false,
  "username": "trip-les-ix",
  "avatarUrl": "https://avatars.githubusercontent.com/trip-les-ix?s=200",
  "settings": {
    "num": 65536,
    "mode": "LINE_STRIP",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "// Simple Fractal - @P_Malin\n                        \nvoid main() \n{ \n  \tfloat fRotation = time * 0.5;\n  \tvec2 vTranslation = vec2( 0.2, 0.2 );\n  \tfloat fScale = 0.6;\n\n  \tfloat fSinRot = sin(fRotation);\n  \tfloat fCosRot = cos(fRotation);\n\n  \tmat3 m = mat3( fCosRot * fScale, fSinRot * fScale, vTranslation.x, -fSinRot * fScale, fCosRot * fScale, vTranslation.y, 0.0, 0.0, 1.0 );\n  \n  \tvec2 vPos = vec2( 0.0 );\n  \tvec2 vMin = vec2( 100.0 );  \t\n \tfloat fPassId = vertexId;\n  \n  \tfor ( int i=0; i<8; i++ )\n    {            \n    \tvPos = (vec3(vPos, 1.0) * m).xy;\n\n      \tfPassId = fPassId / 4.0;\n      \n      \tif ( fract( fPassId * 2.0 ) < 0.5 ) vPos.x = -vPos.x;\n      \tif ( fract( fPassId ) < 0.5 ) vPos.y = -vPos.y;\n      \tfPassId = floor( fPassId );\n      \n      \tvMin = min( vMin, abs( vPos ) );\n    }\n  \n  \tgl_PointSize = 6.0;\n  \tgl_Position = vec4(vPos * vec2( 1.0, resolution.x / resolution.y) , 1.0/vertexId, 1);\n\n  \tvec3 vColor;\n  \tvColor.x = sin( vMin.x * 10.0 + time * 1.234 ) * 0.5 + 0.5;\n  \tvColor.y = sin( vMin.y * 10.0 + time * 2.345 ) * 0.5 + 0.5;\n  \tvColor.z = sin( (vMin.x + vMin.y) * 5.0 + time * 3.456 ) * 0.5 + 0.5;\n  \n  \tvColor = normalize(vColor);\n  \n  \tvColor = 1.0 - exp2( vColor * -length( vMin ) * 2.0 );\n  \tv_color = vec4( vColor, 0.0 );\n}"
  },
  "screenshotURL": "data/images/images-n0zaf10qbmxx47g7g-thumbnail.jpg",
  "hasSound": "",
  "views": "158",
  "likes": "0",
  "revisionId": "YzTWcFfqge2BoJ9ok"
}