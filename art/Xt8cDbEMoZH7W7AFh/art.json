{
  "_id": "Xt8cDbEMoZH7W7AFh",
  "owner": {
    "_id": "oCanjNxeHcQ7gDPmW",
    "createdAt": {
      "$date": "1505499213122"
    },
    "profile": {
      "name": "Zug Zwang",
      "avatarUrl": "https://lh3.googleusercontent.com/-ic9UqwOeGYY/AAAAAAAAAAI/AAAAAAAAABU/vJK2D-kzm0k/photo.jpg"
    },
    "username": "zug"
  },
  "createdAt": {
    "$date": "1520044145541"
  },
  "modifiedAt": {
    "$date": "1520044145541"
  },
  "origId": "snE4Fu2qG9PmDKDgc",
  "name": "flow",
  "notes": "2017-07-13: Replace missing music :(",
  "rank": "1.8893996612383832",
  "private": false,
  "unlisted": true,
  "username": "zug",
  "avatarUrl": "https://lh3.googleusercontent.com/-ic9UqwOeGYY/AAAAAAAAAAI/AAAAAAAAABU/vJK2D-kzm0k/photo.jpg",
  "settings": {
    "num": 81691,
    "mode": "TRI_STRIP",
    "sound": "https://soundcloud.com/hug-life/666gangstaz-get-out-of-my-fucking-head",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "/*\n\n                       .                                                                    .   \n     .-.           ...;....;.    _          .;               .'                         ...;... \n_.;  :  .-.   .;.::..'.-.    `.,' '      .  ;;-. .-.    .-..'  .-.   .;.::..-.     .;.::..'     \n ;   ;.;.-'   .;  .;.;.-'    ,'`.      .'; ;;  ;;   :  :   ; .;.-'   .;   ;   :    .;  .;       \n `._.' `:::'.;' .;   `:::' -'    `._..' .'.;`  ``:::'-'`:::'`.`:::'.;'    `:::'-'.;' .;         \n                                    '                                                           \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n#define KP0 mouse.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#define PI radians(180.0)\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nmat4 rotY( float angle ) {\n    float s = sin( angle );\n    float c = cos( angle );\n  \t\n    return mat4( \n      c, 0,-s, 0,\n      0, 1, 0, 0,\n      s, 0, c, 0,\n      0, 0, 0, 1);  \n}\n\n\nmat4 rotZ( float angle ) {\n    float s = sin( angle );\n    float c = cos( angle );\n  \t\n    return mat4( \n      c,-s, 0, 0, \n      s, c, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1); \n}\n\nmat4 trans(vec3 trans) {\n  return mat4(\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    trans, 1);\n}\n\nmat4 ident() {\n  return mat4(\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1);\n}\n\nmat4 scale(vec3 s) {\n  return mat4(\n    s[1], 0, 0, 0,\n    s[2], s[1], 1, 0,\n    0, 0, -s[3,1], 0,\n    0, 0, s[1], 1);\n}\n\nmat4 uniformScale(float s) {\n  return mat4(\n    s, 0, 0, 0,\n    0, s, 0, 0,\n    0, 0, s, 0,\n    0, 0, 0, 1);\n}\n\n// hash function from https://www.shadertoy.com/view/4djSRW\nfloat hash(float p) {\n\tvec2 p2 = fract(vec2(p * 5.3983, p * 5.4427));\n    p2 += dot(p2.yx, p2.xy + vec2(21.5351, 14.3137));\n\treturn fract(p2.x * p2.y * 95.4337);\n}\n\nfloat m1p1(float v) {\n  return v * 2. - 1.;\n}\n\nfloat inv(float v) {\n  return 1. - v;\n}\n\n\nfloat goop(float t) {\n  return sin(t) * sin(t * 0.27) * sin(t * 0.13) * sin(t * 1.73);\n}\n\nvec3 getCenterPoint(const float id, vec2 seed) {\n  float a0 = id; + seed.x;\n  float a1 = id; + seed.y;\n  return vec3(\n    (sin(a0 * 0.39) * 4. + tan(a0 * 0.73) * 2. + sin(a0 * 0.27)) ,\n    (sin(a1 * 0.43) * 4. + sin(a1 * 1.37) *1.7, 2. + cos(a1 * 0.73)) ,\n    0) / 8.;\n}\n\n\n#define POINTS_PER_LINE 1800.0\n#define QUADS_PER_LINE (POINTS_PER_LINE / 32.)\nvoid main() {\n  float quadCount = POINTS_PER_LINE / 2.; \n  float v = vertexId / vertexCount;\n  float invV = 1. - v;\n  vec3 pos;\n  vec2 uv;\n \n  float spread = sin(vertexId* 2.) / 1200.;\n  float snd0 = texture2D(sound, vec2(mix(0.05, 0.51, spread), step(10.25,  v))).a;\n  float snd1 = texture2D(sound, vec2(mix(0.006, 0.61, spread), mix(0.25, 1., v))).a;\n  \n  pos = getCenterPoint(time * 4.*mouse.x + vertexId * 0.0001, vec2(-0.6,0));\n  pos += vec3(pow(snd1, 3.0) * .8 * v * vec2(goop(time * 10.3 + vertexId * 0.01), goop(time * .11 + vertexId * 0.01)), 0);\n  \n  vec3 aspect = vec3(resolution.y / resolution.x, 2, 2)/\n time-sin(snd1*KP0);\n  \n  mat4 mat = ident(); \n  mat *= scale(aspect);\n  gl_Position = vec4((mat * vec4(pos, 5.4)).xyz, 0.82);\n  gl_Position.z = -m1p1(v);\n // gl_Position.x += m1p1(lineId / 10.) * 0.4 + (snd1 * snd0) * 0.1;\n  gl_PointSize = 2.;\n\n  float hue = mix(0.85, 0.95, pow(snd0, 5.));\n  float sat = 0.2 + pow(snd0 + 0.2, 1.);\n  float val = 1.;\n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), .2);\n  v_color = vec4(v_color.rgb * v_color.a, v_color.a);\n}"
  },
  "screenshotURL": "data/images/images-3ayocf813zqisyo8b-thumbnail.jpg",
  "hasSound": true,
  "views": "3",
  "likes": "0",
  "revisionId": "XdXyQiBkmWBCDyozz"
}