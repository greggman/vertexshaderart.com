{
  "_id": "NTihgba8cFq4fMyQF",
  "owner": {
    "_id": "aQGBaB28tNPpoJahx",
    "createdAt": {
      "$date": {
        "$numberLong": "1523273254098"
      }
    },
    "profile": {
      "first_name": "Brendon",
      "last_name": "Conradie",
      "avatarUrl": "https://lh6.googleusercontent.com/-gsD8A6mNaf8/AAAAAAAAAAI/AAAAAAAAA8Q/XILS5Uddduw/photo.jpg",
      "info": "Wannabe graphics programmer working in the mobile gaming industry"
    },
    "username": "brendon"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1524510084980"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1524510955521"
    }
  },
  "origId": null,
  "name": "Vertex Shader Art: Lesson 3",
  "notes": "Working with colors",
  "rank": {
    "$numberDouble": "1.835236287042329"
  },
  "private": false,
  "unlisted": true,
  "username": "brendon",
  "avatarUrl": "https://lh6.googleusercontent.com/-gsD8A6mNaf8/AAAAAAAAAAI/AAAAAAAAA8Q/XILS5Uddduw/photo.jpg",
  "settings": "{\"num\":1000,\"mode\":\"POINTS\",\"sound\":\"\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"vec3 hsv2rgb(vec3 c) {\\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nvoid main() {\\n  float down = floor(sqrt(vertexCount)); // gets the count of rows\\n  float across = floor(vertexCount / down); // gets the count of columns\\n  \\n  // vertexId is the \\n  float x = mod(vertexId, across); // always use floats\\n  float y = floor(vertexId / across); // rounds numbers down 0.1 = 0, 10 = 1\\n  \\n  float u = x / (across - 1.0);\\n  float v = y / (across - 1.0);\\n  \\n  float xOffset = sin(time * 1.7 + y * 0.2) * 0.1; \\n  float yOffset = sin(time * 0.5 + x * 0.3) * 0.2;\\n  \\n  float ux = u * 2.0 - 1.0 + xOffset;  // gets value from -1 to 1\\n  float uy = v * 2.0 - 1.0 + yOffset;  // gets value from -1 to 1\\n  \\n  vec2 xy = vec2(ux, uy) * 1.3;\\n  \\n  float sizeOffset = sin(time * 3.5 + x * y * 0.02) * 5.0;\\n  \\n  gl_Position = vec4(xy, 0.0, 1.0);\\n  gl_PointSize = 200.0 / across; // set point size\\n  gl_PointSize *= resolution.x / 600.0 + sizeOffset;\\n  \\n  float hue = u * 0.1 + sin(time * 1.25 + v * 20.0) * 0.05;\\n  float sat = 1.;\\n  float value = sin(time * 2.0 + v * u * 20.0) * 0.5 + 0.5;\\n  \\n  v_color = vec4(hsv2rgb(vec3(hue, sat, value)), 1); // this is unique to vertex shader art\\n}\"}",
  "screenshotURL": "data/images/images-mu0lxdtj34c33s0fn-thumbnail.jpg",
  "hasSound": "",
  "views": {
    "$numberInt": "1"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "grAEWbKsxSRSygZrC"
}