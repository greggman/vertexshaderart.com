{
  "_id": "bbx93AtnjNRLNs4hC",
  "owner": {
    "_id": "Pexi77zfde4iNKmrT",
    "createdAt": {
      "$date": {
        "$numberLong": "1493741221077"
      }
    },
    "profile": {
      "name": "Kolargon Generative",
      "avatarUrl": "https://lh3.googleusercontent.com/-tiKYx1U71-Q/AAAAAAAAAAI/AAAAAAAAAGg/b-eEUsFpspc/photo.jpg"
    },
    "username": "kolargon"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1503984262985"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1503985042900"
    }
  },
  "origId": "S4DRdLKsky7bn3aHH",
  "name": "floK",
  "notes": "",
  "rank": {
    "$numberDouble": "1.8339472969209543"
  },
  "private": true,
  "unlisted": false,
  "username": "kolargon",
  "avatarUrl": "https://lh3.googleusercontent.com/-tiKYx1U71-Q/AAAAAAAAAAI/AAAAAAAAAGg/b-eEUsFpspc/photo.jpg",
  "settings": "{\"num\":100000,\"mode\":\"POINTS\",\"sound\":\"https://soundcloud.com/ellen-allien/ellen-allien-butterfly\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"/*\\n\\n                       .                                                                    .   \\n     .-.           ...;....;.    _          .;               .'                         ...;... \\n_.;  :  .-.   .;.::..'.-.    `.,' '      .  ;;-. .-.    .-..'  .-.   .;.::..-.     .;.::..'     \\n ;   ;.;.-'   .;  .;.;.-'    ,'`.      .'; ;;  ;;   :  :   ; .;.-'   .;   ;   :    .;  .;       \\n `._.' `:::'.;' .;   `:::' -'    `._..' .'.;`  ``:::'-'`:::'`.`:::'.;'    `:::'-'.;' .;         \\n                                    '                                                           \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n*/\\n\\n//KDrawmode=GL_POINTS\\n//KVerticesNumber=100000\\n//KBackGroundColor=vec3(0.,0.,0.);\\n\\n//for the K Machine\\n#define parameter0 1000.//KParameter0 10.>>10000.\\n#define parameter1 1.//KParameter1 1.>>5.\\n#define parameter2 0.8//KParameter2 0.8>>10.\\n#define parameter3 10.//KParameter3 1.>>40.\\n#define parameter4 0.85//KParameter4 0.>>1.\\n#define parameter5 0.95//KParameter5 0.>>1.\\n\\n\\n#define PI radians(180.0)\\n\\nvec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nmat4 rotY( float angle ) {\\n    float s = sin( angle );\\n    float c = cos( angle );\\n  \\t\\n    return mat4( \\n      c, 0,-s, 0,\\n      0, 1, 0, 0,\\n      s, 0, c, 0,\\n      0, 0, 0, 1);  \\n}\\n\\n\\nmat4 rotZ( float angle ) {\\n    float s = sin( angle );\\n    float c = cos( angle );\\n  \\t\\n    return mat4( \\n      c,-s, 0, 0, \\n      s, c, 0, 0,\\n      0, 0, 1, 0,\\n      0, 0, 0, 1); \\n}\\n\\nmat4 trans(vec3 trans) {\\n  return mat4(\\n    1, 0, 0, 0,\\n    0, 1, 0, 0,\\n    0, 0, 1, 0,\\n    trans, 1);\\n}\\n\\nmat4 ident() {\\n  return mat4(\\n    1, 0, 0, 0,\\n    0, 1, 0, 0,\\n    0, 0, 1, 0,\\n    0, 0, 0, 1);\\n}\\n\\nmat4 scale(vec3 s) {\\n  return mat4(\\n    s[0], 0, 0, 0,\\n    0, s[1], 0, 0,\\n    0, 0, s[2], 0,\\n    0, 0, 0, 1);\\n}\\n\\nmat4 uniformScale(float s) {\\n  return mat4(\\n    s, 0, 0, 0,\\n    0, s, 0, 0,\\n    0, 0, s, 0,\\n    0, 0, 0, 1);\\n}\\n\\n// hash function from https://www.shadertoy.com/view/4djSRW\\nfloat hash(float p) {\\n\\tvec2 p2 = fract(vec2(p * 5.3983, p * 5.4427));\\n    p2 += dot(p2.yx, p2.xy + vec2(21.5351, 14.3137));\\n\\treturn fract(p2.x * p2.y * 95.4337);\\n}\\n\\nfloat m1p1(float v) {\\n  return v * 2. - 1.;\\n}\\n\\nfloat inv(float v) {\\n  return 1. - v;\\n}\\n\\n\\nfloat goop(float t) {\\n  return sin(t) * sin(t * 0.27) * sin(t * 0.13) * sin(t * 0.73);\\n}\\n\\nvec3 getCenterPoint(const float id, vec2 seed) {\\n  float a0 = id; + seed.x;\\n  float a1 = id; + seed.y;\\n  return vec3(\\n    (sin(a0 * 0.39) * 4. + sin(a0 * 0.73) * 2. + sin(a0 * 0.27)) ,\\n    (sin(a1 * 0.43) * 4. + sin(a1 * 0.37) * 2. + cos(a1 * 0.73)) ,\\n    0) / 8.;\\n}\\n\\n\\n#define POINTS_PER_LINE 1800.0\\n#define QUADS_PER_LINE (POINTS_PER_LINE / 6.)\\nvoid main() {\\n  float quadCount = POINTS_PER_LINE / 6.;\\n  \\n  float fVertexId = mod(vertexId,vertexCount/2.);\\n  \\n  float v = fVertexId / vertexCount;\\n  float invV = 1. - v;\\n  vec3 pos;\\n  vec2 uv;\\n  \\n  float spread = mod(fVertexId, 100.) / 100.;\\n  float snd0 = texture2D(sound, vec2(mix(0.05, 0.051, spread), mix(0.25, 0., v))).a;\\n  float snd1 = texture2D(sound, vec2(mix(0.06, 0.061, spread), mix(0.25, 0., v))).a;\\n  \\n  pos = getCenterPoint(time * parameter3 + fVertexId * 1./parameter0, vec2(0,0));\\n  pos += vec3(pow(snd1, parameter1) * parameter2 * v * vec2(goop(time * 10.3 + fVertexId * 0.01), goop(time * 5.11 + fVertexId * 0.01)), 0);\\n  \\n  vec3 aspect = vec3(resolution.y / resolution.x, 1, 1);\\n  \\n  mat4 mat = ident(); \\n  mat *= scale(aspect);\\n  gl_Position = vec4((mat * vec4(pos, 1)).xyz, 1);\\n  gl_Position.z = -m1p1(v);\\n  \\n  if(vertexId>vertexCount/2.)\\n  {\\n   gl_Position.x = 0.5 - gl_Position.x;\\n    //gl_Position.y = 0.5;\\n \\n  }\\n  \\n  gl_Position.x -= 0.25;\\n  //gl_Position.x += m1p1(lineId / 10.) * 0.4 + (snd1 * snd0) * 0.1;\\n  gl_PointSize = 4.;\\n\\n  float hue = mix(parameter4, parameter5, pow(snd0, 5.));\\n  float sat = 0.2 + pow(snd0 + 0.2, 10.);\\n  float val = 1.;\\n  //v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1.);\\n  //v_color = vec4(1.,1.,1., v_color.a);\\n  v_color = vec4(1.,1.,1., 1.);\\n}\"}",
  "screenshotURL": "data/images/images-xaqakd9wc18czqugw-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "7"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "q6hcEMchwBDWvYJv7"
}