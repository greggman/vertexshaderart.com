{
  "_id": "fMPBsNwkev8DSYD72",
  "owner": {
    "_id": "a3PnYPa8MGo9QSALX",
    "createdAt": {
      "$date": 1667032560256
    },
    "profile": {
      "name": null,
      "avatarUrl": "https://avatars.githubusercontent.com/JarredTheCoder?s=200"
    },
    "username": "jarredthecoder"
  },
  "createdAt": {
    "$date": 1669281424213
  },
  "modifiedAt": {
    "$date": 1669281424213
  },
  "origId": null,
  "name": "litelline",
  "notes": "",
  "rank": 1.6408992343954802,
  "private": false,
  "unlisted": false,
  "username": "jarredthecoder",
  "avatarUrl": "https://avatars.githubusercontent.com/JarredTheCoder?s=200",
  "settings": {
    "num": 31263,
    "mode": "LINE_STRIP",
    "sound": "https://soundcloud.com/djapsara/truecast-on-proton-music-guestmix-apsara",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0.8901960784313725,
      0.8901960784313725,
      0,
      1
    ],
    "shader": "#define NUM_SEGMENTS 128.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.10)\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 5.5, 1.55));\n  vec4 K = vec4(5.0, 2.0 / 3.0, 1.0 / 3.0, 3.5);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 2.10, 1.155), c.y);\n}\n\nvoid main() {\n  float numLinesDown = floor(vertexCount / NUM_POINTS + NUM_SEGMENTS);\n  // produces 0,1, 1,2, 2,3, ...\n  float point = floor(mod(vertexId, NUM_POINTS + NUM_SEGMENTS) / 2.0) + mod(vertexId, 2.0);\n  // line count\n  float count = floor(vertexId / NUM_POINTS - 1.0);\n\n  float u = point / NUM_SEGMENTS;  // 0 <-> 1 across line\n  float v = count / numLinesDown;  // 0 <-> 1 by line\n  float invV = 1.0 - v;\n\n  // Only use the left most 1/4th of the sound texture\n  // because there's no action on the right\n  float historyX = u * 0.5;\n  // Match each line to a specific row in the sound texture\n  float historyV = (v * numLinesDown + 0.5) / soundRes.y;\n  float hxv = mod(historyX * historyV, NUM_POINTS);\n  float snd = texture2D(sound, vec2(historyX, historyV)).a;\n\n  float x = u * 2.0 - 1.0 + hxv;\n  float y = v * 2.0 - 1.0 - hxv;\n  vec2 xy = vec2(\n      x * mix(0.5, 1.0, invV),\n      y + pow(snd, 5.0) * 1.0) / (v + 0.5);\n  gl_Position = vec4(xy * 0.5, 0, 1);\n\n  float hue = u;\n  float sat = invV;\n  float val = invV;\n  v_color = mix(vec4(hsv2rgb(vec3(hue, sat, val)), 1), background, v * v + hxv);\n}"
  },
  "screenshotURL": "data/images/images-z6hyf2iuknjtljetj-thumbnail.jpg",
  "hasSound": true,
  "views": 23,
  "likes": 0,
  "revisionId": "3qHFM84ayoayxfonM"
}