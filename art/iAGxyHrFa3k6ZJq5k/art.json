{
  "_id": "iAGxyHrFa3k6ZJq5k",
  "owner": {
    "_id": "e3XLwKm4hhhk62Zxo",
    "createdAt": {
      "$date": {
        "$numberLong": "1558975720096"
      }
    },
    "username": "jonnynewo",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/2ee3fa32fc5fe43ece0455f4e45b5c3b?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1558986367229"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1558986367229"
    }
  },
  "origId": "QukF3gwmKw5pDHhaD",
  "name": "Tutorial 3 - Color",
  "notes": "",
  "rank": {
    "$numberDouble": "1.6593508873524572"
  },
  "private": true,
  "unlisted": false,
  "username": "jonnynewo",
  "avatarUrl": "https://secure.gravatar.com/avatar/2ee3fa32fc5fe43ece0455f4e45b5c3b?default=retro&size=200",
  "settings": "{\"num\":1000,\"mode\":\"POINTS\",\"sound\":\"https://soundcloud.com/caseandpoint/case-point-upgrade-free-download\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"vec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n\\nvoid main() {\\n  \\tfloat down = floor(sqrt(vertexCount)); // est grid\\n  \\tfloat across = floor(vertexCount / down); // more grid\\n    \\n  \\tfloat x = mod(vertexId, across); // red dot boi\\n  \\tfloat y = floor(vertexId / across); // twin\\n\\n  \\n  \\tfloat u = x / (across -1.); \\n  \\tfloat v = y / (across -1.);\\n \\n  \\tfloat xoff = sin(time + y * 0.2) * 0.1; //(motion)\\n  \\tfloat yoff = sin(time * 1.1 + x * 0.3) * 0.1; //(motion)\\n  \\n  \\tfloat ux = u * 2. - 1. + xoff;\\n  \\tfloat vy = v * 2. - 1. + yoff;\\n  \\n  \\tvec2 xy = vec2(ux, vy) * 1.0;\\n  \\n  \\tgl_Position = vec4(xy, 0, 1);\\n  \\n  \\tfloat soff = sin(time * 1.2 + x * y * 0.02) * 5.; // (motion)\\n  \\n  \\tgl_PointSize = 15.0 + soff;  \\n  \\tgl_PointSize *= 20. / across; \\n  \\tgl_PointSize *= resolution.x / 600.;\\n  \\n  \\tfloat hue = u * .1 + sin(time + v * 20.) * 0.05;\\n  \\tfloat sat = 1.;\\n  \\tfloat val = sin(time * 1.4 + v * u * 20.0) * .5 + .5;\\n  \\n  \\tv_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);   // refers to R, G, B, alpha\\n  \\n}\\n\"}",
  "screenshotURL": "data/images/images-ri4l3og5qb4hwwvd8-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "1"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "xrz6FoPiruDJJhe44"
}