{
  "_id": "mLtQNvFM6AJhHKbYq",
  "owner": {
    "_id": "CmDKfuGqb3n4wc5um",
    "createdAt": {
      "$date": 1589106352417
    },
    "username": "abjeni",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/91501fff291d7e034ce6fecaebc60854?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": 1600598115185
  },
  "modifiedAt": {
    "$date": 1600598115185
  },
  "origId": null,
  "name": "marching tetrahedra",
  "notes": "",
  "rank": 1.5384646396846882,
  "private": false,
  "unlisted": false,
  "username": "abjeni",
  "avatarUrl": "https://secure.gravatar.com/avatar/91501fff291d7e034ce6fecaebc60854?default=retro&size=200",
  "settings": {
    "num": 100000,
    "mode": "TRIANGLES",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define PI radians(180.)\n#define NUM_SEGMENTS 21.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n\n#define NUM_CUBES (SIZE*SIZE*SIZE)\n#define NUM_TRIANGLES (NUM_CUBES*18)\n#define NUM_VERTICES (NUM_TRIANGLES*6)\n\n#define STEP 5.0\n\n#define ipol(corners,values,id1, id2) mix(corners[id1].xyz,corners[id2].xyz,values[id1]/(values[id1]-values[id2]))\n\n\n//https://www.shadertoy.com/view/4ttGDH\nvec3 camPath(float t){\n  \n    //return vec3(0, 0, t); // Straight path.\n    //return vec3(-sin(t/2.), sin(t/2.)*.5 + 1.57, t); // Windy path.\n    \n    //float s = sin(t/24.)*cos(t/12.);\n    //return vec3(s*12., 0., t);\n    \n    float a = sin(t * 0.11);\n    float b = cos(t * 0.14);\n    return vec3(a*4. -b*1.5, b*1.7 + a*1.5, t);\n    \n}\n\n//https://www.shadertoy.com/view/4ttGDH\nfloat map(vec3 p){\n \n    p.xy -= camPath(p.z).xy; // Perturb the object around the camera path.\n    \n    p *= 0.4;\n     \n\tp = cos(p*.315*1.25 + sin(p.zxy*.875*1.25)); // 3D sinusoidal mutation.\n    \n    \n    float n = length(p); // Spherize. The result is some mutated, spherical blob-like shapes.\n  \n    return n-1.0;\n    \n}\n\nvoid main() {\n  \n  float speed = 10.0;\n  \n  vec3 wpos = vec3(0);\n  \n  vec3 pos = camPath(time*speed);\n  \n  vec3 lookat = camPath(time*speed+2.0);\n  vec3 forward = normalize(lookat-pos);\n  vec3 left = normalize(cross(vec3(camPath(time*speed+1.0).xy,0),forward));\n  vec3 up = cross(forward,left);\n  \n  float cid = floor(vertexId/30.0);\n  int tid = int(floor(vertexId/6.0)-cid*5.0);\n  int vid = int(mod(vertexId,6.0));\n  \n  \n  \n  float size = floor(pow(vertexCount/30.0,1.0/3.0));\n  \n  vec3 cpos = vec3(\n    mod(floor(cid),size),\n    mod(floor(cid/size),size),\n        floor(cid/size/size))\n    -vec2(floor(size*0.5),0).xxy+floor(pos);\n  \n  \n\n  mat4 corners = mat4(\n    0,0,0,0,\n    0,1,1,0,\n    1,0,1,0,\n    1,1,0,0\n  );\n\n  bool flip = tid == 4;\n  if (!flip) {\n    if (tid == 0) corners[0].xyz = 1.0-corners[0].xyz;\n    if (tid == 1) corners[1].xyz = 1.0-corners[1].xyz;\n    if (tid == 2) corners[2].xyz = 1.0-corners[2].xyz;\n    if (tid == 3) corners[3].xyz = 1.0-corners[3].xyz;\n  }\n\n  if (mod(dot(cpos,vec3(1)),2.0) < 0.5) {\n    flip = !flip;\n    corners = 1.0-corners;\n  }\n\n  corners[0].xyz += cpos;\n  corners[1].xyz += cpos;\n  corners[2].xyz += cpos;\n  corners[3].xyz += cpos;\n\n  vec4 values = vec4(\n    map(corners[0].xyz),\n    map(corners[1].xyz),\n    map(corners[2].xyz),\n    map(corners[3].xyz)\n  );\n\n  int id = 0;\n  if (values[0] > 0.0) id+=1;\n  if (values[1] > 0.0) id+=2;\n  if (values[2] > 0.0) id+=4;\n  if (values[3] > 0.0) id+=8;\n\n  gl_Position = vec4(0);\n  vec3 vpos = vec3(0);\n\n  if (id == 15 || id == 0) {\n    return;\n  }\n\n  if (id < 8) {\n    flip = !flip;\n  }\n\n  if (flip) {\n         if (vid == 0) vid = 1;\n    else if (vid == 1) vid = 0;\n    else if (vid == 3) vid = 4;\n    else if (vid == 4) vid = 3;\n  }\n\n  if (id == 1 || id == 14) {\n         if (vid == 0) vpos = ipol(corners,values,0,1);\n    else if (vid == 1) vpos = ipol(corners,values,0,2);\n    else if (vid == 2) vpos = ipol(corners,values,0,3);\n    else return;\n  }\n\n  if (id == 2 || id == 13) {\n         if (vid == 0) vpos = ipol(corners,values,1,0);\n    else if (vid == 1) vpos = ipol(corners,values,1,3);\n    else if (vid == 2) vpos = ipol(corners,values,1,2);\n    else return;\n  }\n\n  else if (id == 4 || id == 11) {\n         if (vid == 0) vpos = ipol(corners,values,2,0);\n    else if (vid == 1) vpos = ipol(corners,values,2,1);\n    else if (vid == 2) vpos = ipol(corners,values,2,3);\n    else return;\n  }\n\n  else if (id == 8 || id == 7) {\n         if (vid == 0) vpos = ipol(corners,values,3,0);\n    else if (vid == 1) vpos = ipol(corners,values,3,1);\n    else if (vid == 2) vpos = ipol(corners,values,3,2);\n    else return;\n  }\n\n  else if (id == 3 || id == 12) {\n         if (vid == 0) vpos = ipol(corners,values,0,2);\n    else if (vid == 1) vpos = ipol(corners,values,0,3);\n    else if (vid == 2) vpos = ipol(corners,values,1,2);\n    else if (vid == 3) vpos = ipol(corners,values,1,3);\n    else if (vid == 4) vpos = ipol(corners,values,1,2);\n    else if (vid == 5) vpos = ipol(corners,values,0,3);\n  }\n\n  else if (id == 5 || id == 10) {\n         if (vid == 0) vpos = ipol(corners,values,0,3);\n    else if (vid == 1) vpos = ipol(corners,values,0,1);\n    else if (vid == 2) vpos = ipol(corners,values,2,1);\n    else if (vid == 3) vpos = ipol(corners,values,2,1);\n    else if (vid == 4) vpos = ipol(corners,values,2,3);\n    else if (vid == 5) vpos = ipol(corners,values,0,3);\n  }\n\n  else if (id == 6 || id == 9) {\n         if (vid == 0) vpos = ipol(corners,values,1,0);\n    else if (vid == 1) vpos = ipol(corners,values,1,3);\n    else if (vid == 2) vpos = ipol(corners,values,2,0);\n    else if (vid == 3) vpos = ipol(corners,values,2,3);\n    else if (vid == 4) vpos = ipol(corners,values,2,0);\n    else if (vid == 5) vpos = ipol(corners,values,1,3);\n  }\n\n  vec3 p = vpos-pos;\n\n  p = vec3(-dot(p,left),dot(p,up),dot(p,forward));\n\n  p.x *= resolution.y/resolution.x;\n\n  gl_Position = vec4(p.xy, p.z*p.z*0.01, p.z);\n  \n  v_color = vec4(fract(vpos*0.3),1);\n}"
  },
  "screenshotURL": "data/images/images-eq5uuag7aifi06hhw-thumbnail.jpg",
  "hasSound": "",
  "views": 237,
  "likes": 1,
  "revisionId": "EkjMg4ZmmxPiJYADc"
}