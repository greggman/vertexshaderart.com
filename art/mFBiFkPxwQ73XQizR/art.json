{
  "_id": "mFBiFkPxwQ73XQizR",
  "owner": {
    "_id": "zhcyc448mbXBSX3RY",
    "createdAt": {
      "$date": 1652867755974
    },
    "username": "donga.choi",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/edffcb435255bbb6bef5ad8a6333dda8?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": 1653480094486
  },
  "modifiedAt": {
    "$date": 1653481852164
  },
  "origId": null,
  "name": "Audio Reactive Art",
  "notes": "",
  "rank": 1.586425476211448,
  "private": false,
  "unlisted": true,
  "username": "donga.choi",
  "avatarUrl": "https://secure.gravatar.com/avatar/edffcb435255bbb6bef5ad8a6333dda8?default=retro&size=200",
  "settings": {
    "num": 2027,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/graham-panter/fly-by-light",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0.2784313725490196,
      0.24313725490196078,
      0.24313725490196078,
      1
    ],
    "shader": "//Dong-A Choi\n//CS250\n//Audio Reactive Art exercise\n//2022 spring\n\nvec3 hsv2rgb(vec3 c)\n{\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n#define PI radians(180.0);\n\nvoid main() {\n  float down = floor(sqrt(vertexCount));\n  float across = floor(vertexCount / down);\n  \n  float x = mod(vertexId, across);\n  float y = floor(vertexId / across);\n  \n  float u = x / (across-1.);\n  float v = y / (across-1.);\n  \n  float xoff = 0.;//sin(time + y * 0.2) * 0.1;\n  float yoff = 0.;//sin(time * 1.1+ x * 0.3) * 0.2; //may can remove last one\n  \n  float ux = u * 2. - 1. + xoff;\n  float vy = v * 2. - 1. + yoff;\n  \n  vec2 xy = vec2(ux, vy) * 1.3;\n  \n  float su = abs(u - 0.5) * 2.;\n  float sv = abs(v - 0.5) * 2.;\n  float au = abs(atan(su,sv)) / PI;\n  float av = length(vec2(su,sv));\n  float snd = texture2D(sound, vec2(au * .05,av * .25)).a;\n  \n  gl_Position = vec4(xy,0,1);\n  \n  float soff = 0.;//sin(time * 1.2 + x * y * 0.02) * 5.;\n  \n  gl_PointSize = pow(snd + 0.2, 5.) * 30.0 + soff;\n  gl_PointSize *= 20. / across;\n  gl_PointSize *= resolution.x / 600.;\n  \n  float pump =step(0.8,snd);\n  float hue = u * .1 +snd * 0.2 + time * .1;//+ sin(time + v * 20.) * 0.05;\n  float sat = mix(0.,1., pump);//mix(1., -10., av);\n  float val = mix(.1, pow(snd + 0.2,5.),pump);//sin(time * 1.4 + v * u * 20.0) * .5 + .5;\n  \n  v_color = vec4(hsv2rgb(vec3(hue,sat,val)),1);\n    \n  \n}"
  },
  "screenshotURL": "data/images/images-t9in9drpzdqjo8iuz-thumbnail.jpg",
  "hasSound": true,
  "views": 6,
  "likes": 0,
  "revisionId": "SZ8vvGLPk28St77uq"
}