{
  "_id": "W9WTPxA9AXtFxZRqq",
  "owner": {
    "_id": "bNheeAS24MHH5bfHh",
    "createdAt": {
      "$date": 1446789740056
    },
    "profile": {
      "first_name": "Jason",
      "last_name": "Holt",
      "avatarUrl": "https://lh4.googleusercontent.com/-wE4hYuyWNI8/AAAAAAAAAAI/AAAAAAAAm8k/TUzOeIuTvlY/photo.jpg"
    },
    "username": "jason"
  },
  "createdAt": {
    "$date": 1446789744240
  },
  "modifiedAt": {
    "$date": 1446789744240
  },
  "origId": null,
  "name": "sines",
  "private": false,
  "username": "jason",
  "settings": {
    "num": 49533,
    "mode": "POINTS",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define PI 3.14159\n#define NUM_SEGMENTS 21.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n#define STEP 5.0\n//#define FIT_VERTICAL\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  /*\n  float localTime = time + 20.0;\n  float point = mod(floor(vertexId / 2.0) + mod(vertexId, 2.0) * STEP, NUM_SEGMENTS);\n  float count = floor(vertexId / NUM_POINTS);\n  float offset = count * 0.02;\n  float angle = point * PI * 2.0 / NUM_SEGMENTS + offset;\n  float radius = 0.2;\n  float c = cos(angle + localTime) * radius;\n  float s = sin(angle + localTime) * radius;\n  float orbitAngle = count * 0.01;\n  float oC = cos(orbitAngle + localTime * count * 0.01) * sin(orbitAngle);\n  float oS = sin(orbitAngle + localTime * count * 0.01) * sin(orbitAngle);\n\n  #ifdef FIT_VERTICAL\n    vec2 aspect = vec2(resolution.y / resolution.x, 1);\n  #else\n    vec2 aspect = vec2(1, resolution.x / resolution.y);\n  #endif\n\n  vec2 xy = vec2(\n      oC + c,\n      oS + s);\n  gl_Position = vec4(xy * aspect + mouse * 0.1, 0, 1);\n\n  float hue = (localTime * 0.01 + count * 1.001);\n  v_color = vec4(hsv2rgb(vec3(hue, 1, 1)), 1);\n  */\n  \n  float traces = 5.0;\n  float trace = mod(vertexId, traces);\n  float x = -1.0 + 2.0 * vertexId / vertexCount;\n  \n  float speed = 1.0 * time;\n  float amp = sin(time) * (1.0 + trace) / traces;\n  float y = amp * sin(speed + PI * x);\n  \n  gl_Position = vec4(x, y, 0, 1);\n  float c = trace / traces;\n  v_color = vec4(hsv2rgb(vec3(x, 0.5, 1)), 1);\n  //v_color = vec4(c, c, 1, 0);\n}"
  },
  "screenshotURL": "data/images/images-mq97m9nxjsgg7i0pe-thumbnail.jpg",
  "views": 169,
  "likes": 0,
  "revisionId": "k8NtKdtuXp6B7mtZk",
  "rank": 1.479706025654675,
  "avatarUrl": "https://lh4.googleusercontent.com/-wE4hYuyWNI8/AAAAAAAAAAI/AAAAAAAAm8k/TUzOeIuTvlY/photo.jpg"
}