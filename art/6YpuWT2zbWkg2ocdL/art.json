{
  "_id": "6YpuWT2zbWkg2ocdL",
  "owner": {
    "_id": "duxi6M5TiGWZ5CeBh",
    "createdAt": {
      "$date": {
        "$numberLong": "1445820506349"
      }
    },
    "profile": {
      "name": "Visa-Valtteri Pimi√§",
      "avatarUrl": "https://avatars.githubusercontent.com/visy?s=200",
      "info": "```sh\nDemo maker and coder from Helsinki, Finland.\nWorking on any interesting platforms.\nThis is where we make vertex shader stuff.\n```"
    },
    "username": "visy"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1447706679557"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1447706679557"
    }
  },
  "origId": null,
  "name": "collage",
  "rank": {
    "$numberDouble": "1.7792497132464828"
  },
  "private": false,
  "username": "visy",
  "settings": "{\"num\":14786,\"mode\":\"TRIANGLES\",\"sound\":\"\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"#define PI 3.14159\\n#define NUM_SEGMENTS 21.0\\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\\n#define STEP 5.0\\n//#define FIT_VERTICAL\\n\\nvec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nconst int max_iterations = 255;\\n\\nvec2 complex_square( vec2 v ) {\\n\\treturn vec2(\\n\\t\\tv.x * v.x - v.y * v.y,\\n\\t\\tv.x * v.y * 2.0\\n\\t);\\n}\\n\\n\\nvoid main() {\\n  float localTime = time*0.02 + 20.0;\\n  float point = mod(floor(vertexId / 2.0) + mod(vertexId, 2.0) * STEP, NUM_SEGMENTS);\\n  float count = floor(vertexId / NUM_POINTS);\\n\\n    float offset = count * 0.02;\\n\\n  \\tvec2 cc = vec2(point*0.001+sin(count*0.01+localTime*0.05)*1.,cos(point*0.001+localTime*0.5)*1.1);\\n\\tvec2 v = vec2( 0.0 );\\n\\tfloat scale = 0.06;\\n\\t\\n\\tint count2 = max_iterations;\\n\\t\\n\\tfor ( int i = 0 ; i < max_iterations; i++ ) {\\n\\t\\tv = cc + complex_square( v );\\n\\t\\tif ( dot( v, v ) > 4.0 ) {\\n\\t\\t\\tcount2 = i;\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n  \\n  float c3 = float(count2);\\n  float angle = point * c3 * 1.0 / NUM_SEGMENTS + offset-c3;\\n  \\n  float radius = 0.2-(c3*0.0002);\\n  float c = cos(angle + localTime) * radius-c3*0.005;\\n  float s = sin(angle + localTime) * radius-c3*0.005;\\n  float orbitAngle = count * 0.1*cos(c3);\\n  float oC = cos(c3*orbitAngle)*cos(orbitAngle + localTime * count * 0.01-c3) * sin(orbitAngle+c3);\\n  float oS = sin(orbitAngle + localTime * count * 0.01-c3) * sin(orbitAngle+c3);\\n\\t\\n  \\n  #ifdef FIT_VERTICAL\\n    vec2 aspect = vec2(resolution.y / resolution.x, 1);\\n  #else\\n    vec2 aspect = vec2(1, resolution.x / resolution.y);\\n  #endif\\n  \\n  vec2 xy = vec2(\\n      oC + c,\\n      oS + s);\\n  gl_Position = vec4(xy * aspect, 0, 1);\\n\\n  float hue = (localTime * 0.01 + count * 1.001);\\n  v_color = vec4(hsv2rgb(vec3(0.4, hue*0.0003, hue*0.003)), 1);\\n}\"}",
  "screenshotURL": "data/images/images-0zn8qm26g2pg9xn5r-thumbnail.jpg",
  "hasSound": "",
  "views": {
    "$numberInt": "143"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "dJ6fTw3fzbXwLf6hq",
  "avatarUrl": "https://avatars.githubusercontent.com/visy?s=200"
}