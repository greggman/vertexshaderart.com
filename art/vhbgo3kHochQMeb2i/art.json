{
  "_id": "vhbgo3kHochQMeb2i",
  "owner": {
    "_id": "qKPpzdr6wbcudsddm",
    "createdAt": {
      "$date": "1552696746395"
    },
    "profile": {
      "name": "Alejandro CÃ¡mara",
      "avatarUrl": "https://avatars.githubusercontent.com/AlejandroCamara?s=200"
    },
    "username": "alejandrocamara"
  },
  "createdAt": {
    "$date": "1552970081941"
  },
  "modifiedAt": {
    "$date": "1553020918789"
  },
  "origId": null,
  "name": "P04-Ej01",
  "notes": "",
  "rank": "1.3557863458134083",
  "private": false,
  "unlisted": true,
  "username": "alejandrocamara",
  "avatarUrl": "https://avatars.githubusercontent.com/AlejandroCamara?s=200",
  "settings": {
    "num": 4200,
    "mode": "TRI_STRIP",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      1,
      1,
      1,
      1
    ],
    "shader": "#define CIRCLE_SEGMENTS 20.0\n#define PRIMITIVE_COUNT 42.0\n#define TWO_PI radians(360.0)\n\nvoid main() {\n  \n  \tfloat normalized_id = mod(vertexId, PRIMITIVE_COUNT);\n  \n  \tfloat circle_x = floor(normalized_id / 2.0);\n    float circle_y = mod(normalized_id + 1.0, 2.0);\n\n    float angle = circle_x / CIRCLE_SEGMENTS * radians(360.0);\n    float radius = 2.0 - circle_y;\n\n    float circle_u = radius * cos(angle);\n    float circle_v = radius * sin(angle);\n\n    vec2 circle_xy = vec2(circle_u, circle_v) * 0.05;\n  \n  \t// Distancia entre los puntos\n  \t// y numero de puntos por fila\n  \tfloat width = 10.0;\n  \n  \t\n  \t// Ubicacion de los circulos\n  \tfloat x = mod(floor(vertexId / PRIMITIVE_COUNT), width);\t// Columna\n  \tfloat y = floor(((vertexId / (PRIMITIVE_COUNT) )/ width));\t// Fila\n  \n  \t// Escala de los puntos para que quepan en la pantalla\n  \tfloat u = x / (width - .50);\n  \tfloat v = y / (width - .50);\n  \n  \n  \t// Movimiento en onda\n  \tfloat xOffset = sin(time + y * 0.2) * 0.1;\n  \tfloat yOffset = cos(time + x * 0.3) * 0.2;\n  \n  \t//float xOffset = 0.0;\n  \t//float yOffset = 0.0;\n  \n  \t// Coordenadas finales\n  \tfloat ux = u * 2.0 - 1.0 + xOffset;\n  \tfloat vy = v * 2.0 - 1.0 + yOffset;\n  \t\n  \tvec2 xy = vec2(ux, vy) * 1.2;\n  \n  \t// xy = vec2(x, y) / 5.0;\n  \n\tgl_Position = vec4(circle_xy + xy, 0.0, 1.0);\n  \tv_color = vec4(1.0, 0.0, 0.0, 1.0);\n  \tgl_PointSize = 5.0;\n}"
  },
  "screenshotURL": "data/images/images-s1qm4gmzq09mt4tvt-thumbnail.jpg",
  "hasSound": "",
  "views": "7",
  "likes": "0",
  "revisionId": "FfsLt9dZD6AfHqvPZ"
}