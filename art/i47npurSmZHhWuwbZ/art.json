{
  "_id": "i47npurSmZHhWuwbZ",
  "owner": {
    "_id": "xCuwquaiWuAhdYnmN",
    "createdAt": {
      "$date": {
        "$numberLong": "1572072811433"
      }
    },
    "username": "mikipom",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/fb938bdfd01f14cf89f8e00712fde243?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1579051054867"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1579101497116"
    }
  },
  "origId": null,
  "name": "wipv",
  "notes": "",
  "rank": {
    "$numberDouble": "1.5352832764637163"
  },
  "private": true,
  "unlisted": false,
  "username": "mikipom",
  "avatarUrl": "https://secure.gravatar.com/avatar/fb938bdfd01f14cf89f8e00712fde243?default=retro&size=200",
  "settings": {
    "num": 20000,
    "mode": "POINTS",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      1,
      1,
      1,
      1
    ],
    "shader": "#define PI radians(180.)\n#define NUM_SEGMENTS 2.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n#define STEP 1.0\n\nfloat squareid(float vid, float snum)\n{\n\tfloat sid = floor(vid / snum);\n \treturn sid;\n}\n\nfloat squareVertexid(float vid, float sid, float snum)\n{\n\tfloat svid = vid - sid * snum;\n  \treturn svid;\n}\n\nfloat groupid(float svid, float segment)\n{\n  float gid = floor(svid / segment);\n  return gid;\n}\n\nfloat groupVertexid(float svid, float gid, float segment)\n{\n  float gvid = svid - gid * segment;\n  return gvid;\n}\n\nvec3 sPos(float sid, float svid, float gid, float gvid, float segmentLength, float segment)\n{\n  float sl = segmentLength;\n  float sidl = sid + 1.;\n  sl *= sidl;//slはsidごとに固有\n  \n  vec3 pos;\n  \n  if(gid == 0.){\n    pos.x = 0. + gid + gvid * sl;\n    pos.y = 0.;\n  }else if(gid == 1.){\n    pos.x = 0. + gid * segment * sl;\n    pos.y = 0. - gvid * sl;\n  }else if(gid == 2.){\n    pos.x = gid * segment * sl - gvid * sl;\n    pos.y = 0. - (gid - 1.) * segment * sl;\n  }else{\n    pos.x = 0.;\n    pos.y = - (gid - 2.) * segment * sl + gvid * sl;\n  }\n  \n  //sidごとにoffset\n  float centerX = (0. + 1. * segment * sl) / 2.;\n  float centerY = (0. - (2. - 1.) * segment * sl ) / 2.;\n  \n  pos.x -= centerX;\n  pos.y -= centerY;\n  pos.z = sid;\n  \n  return pos;\n}\n\n\nvoid main()\n{\n  \n  float x = vertexId / 20.0;\n  \n  float _vid = vertexId;\n  float _snum = 8.;\n  float _segment = 3.;\n  float _segmentLength = 1.;\n  \n  float _sid = squareid(_vid, _snum);\n  float _svid = squareVertexid(_vid, _sid, _snum);\n  float _gid = groupid(_svid, _segment);\n  float _gvid = groupVertexid(_svid, _gid, _segment);\n  \n  vec3 _pos = sPos(_sid, _svid, _gid, _gvid, _segmentLength, _segment);\n  \n  gl_Position = vec4(_pos, 1.);\n  gl_PointSize = 3.;\n  \n\tv_color = vec4(vec3(0.),1.);\n}\n"
  },
  "screenshotURL": "data/images/images-k33hsz73eulug2jrv-thumbnail.jpg",
  "hasSound": "",
  "views": {
    "$numberInt": "3"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "o4qM9fcoXpwGrfRDL"
}