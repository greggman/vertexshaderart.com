{
  "_id": "GckHF7hRiWi7gJjys",
  "owner": {
    "_id": "we8EQkA9drPxGjXJe",
    "createdAt": {
      "$date": "1634527131008"
    },
    "profile": {
      "first_name": "dumpster",
      "last_name": "synth",
      "avatarUrl": "https://lh3.googleusercontent.com/a/AATXAJySGGmgPbDAoycXt3iXyhYrzMSM8CvuNCRqg0ay=s96-c"
    },
    "username": "dumpster"
  },
  "createdAt": {
    "$date": "1634527299153"
  },
  "modifiedAt": {
    "$date": "1634530853227"
  },
  "origId": null,
  "name": "tutorial - sound",
  "notes": "",
  "rank": "1.9109469107918593",
  "private": false,
  "unlisted": true,
  "username": "dumpster",
  "avatarUrl": "https://lh3.googleusercontent.com/a/AATXAJySGGmgPbDAoycXt3iXyhYrzMSM8CvuNCRqg0ay=s96-c",
  "settings": {
    "num": 1000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/auvicmusic/tell-the-world-feat-samantha-montenero",
    "lineSize": "NATIVE",
    "backgroundColor": [
      1,
      1,
      1,
      1
    ],
    "shader": "  \n  vec3 hsv2rgb(vec3 c) {\n    c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n  }\n\n#define PI radians(180.0)\n\n  void main() {\n  \n  float down = floor(sqrt(vertexCount));\n  float across = floor(vertexCount / down);\n  \n  // float pointSize = 5.;\n  \n  float x = mod(vertexId, across);\n  float y = floor(vertexId /across);\n  \n  float u = x/(across-1.);\n  float v = y/(across-1.);\n  \n  float xoff = 0.; // sin(time + y * 0.2) * .1;\n  float yoff = 0.; // sin(time + x * 0.3) * .2;\n\n  float ux = u * 2. - 1. + xoff;\n  float vy = v * 2. - 1. + yoff;\n   \n  vec2 xy = vec2(ux, vy) * 1.3;\n  \n  float su = abs(u-0.5) * 2.; \n  float sv = abs(v-0.5) * 2.; \n  float au = abs(atan(su,sv)) / PI;\n  float av = length(vec2(su, sv));\n  float snd = texture2D(sound, vec2(au * 0.05, av * 0.25)).a;\n   \n  gl_Position = vec4(xy,0,1);\n   \n  float soff = .0; // sin(time + x * y * 0.02) * 5.;\n   \n  gl_PointSize = pow(snd + .2, 5.) * 30.0 + soff;\n  gl_PointSize *= 20. / across;\n  gl_PointSize *= resolution.x / 600.;\n  \n  float pump = step(0.8, snd);\n  float hue = u * .1 + snd *.2 + time * 0.1;\n  float sat = mix(0., 1., pump); // mix(28., -8., av);\n  float val = mix(1., pow(snd + .2, 5.), pump); //sin(time + v * u * 20.0) * .5 + .5;\n\n  v_color = vec4(hsv2rgb(vec3(hue,sat,val)),1);\n \n}"
  },
  "screenshotURL": "data/images/images-r4w389ju48loensrg-thumbnail.jpg",
  "hasSound": true,
  "views": "14",
  "likes": "0",
  "revisionId": "N8wtkZG2g53owDzq2"
}