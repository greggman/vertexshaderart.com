{
  "_id": "TtKHBfMCFHuz5PKm7",
  "owner": {
    "_id": "Pexi77zfde4iNKmrT",
    "createdAt": {
      "$date": {
        "$numberLong": "1493741221077"
      }
    },
    "profile": {
      "name": "Kolargon Generative",
      "avatarUrl": "https://lh3.googleusercontent.com/-tiKYx1U71-Q/AAAAAAAAAAI/AAAAAAAAAGg/b-eEUsFpspc/photo.jpg"
    },
    "username": "kolargon"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1515714659161"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1515715579804"
    }
  },
  "origId": "WBgJQrq6H2sZ2gzyb",
  "name": "grid",
  "notes": "",
  "rank": {
    "$numberDouble": "1.1056631012555613"
  },
  "private": true,
  "unlisted": false,
  "username": "kolargon",
  "avatarUrl": "https://lh3.googleusercontent.com/-tiKYx1U71-Q/AAAAAAAAAAI/AAAAAAAAAGg/b-eEUsFpspc/photo.jpg",
  "settings": {
    "num": 100000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/billx/tandava-billx-remix",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0.1450980392156863,
      0.30980392156862746,
      1
    ],
    "shader": "#define ITERS 30\n#define M_PI 3.1415926535897932384626433832795\n\nvoid main ()\n{\n  float ratio = resolution.x/resolution.y;\n  float numAcrossDown = floor(sqrt(vertexCount));\n  \n  float maxVertexCount =   numAcrossDown* numAcrossDown;\n  \n  float finalVertexId = mod(vertexId, maxVertexCount);\n  \n  float x = mod(finalVertexId,  numAcrossDown);\n  float y = floor(finalVertexId /  numAcrossDown);\n  \n  float u = x / numAcrossDown;\n  float v = (y / numAcrossDown)*ratio;\n  \n  float ux = u  * 2.0 - 1.0;\n  float vy = v * 2.0 - 1.0;\n  \n  gl_Position = vec4(ux, vy, 0, 1);\n  \n  gl_PointSize = ((resolution.y/numAcrossDown)*2.-1.) * 0.97;\n  \n  \n  //logistic\n  \n\n  //float snd = texture2D(sound, vec2(0.1,  0.)).a;\n  //float snd2 = texture2D(sound, vec2(0.1,  0.3)).a;\n  //float snd3 = texture2D(sound, vec2(0.1,  0.5)).a;\n  vec2 p = vec2(ux ,  vy);\n  float z = fract(0.02*time);\n\n  int acc = 0;\n  float trig = (cos(2. * M_PI * z) + 1.) / 2.;\n  \n\n  if(p.x>0.)p.x = -p.x;\n  \n  if(p.y<0.)p.y = -p.y;\n  \n  float a = mix(1., 3.75, trig) + p.x * mix(3., 0.25, trig);\n  \n  \n  for (int i = 0; i < ITERS; i++) {\n    acc += (z > p.y && z <= p.y + 1. / resolution.y) ? 1 : 0;\n    z = a * z * (1.-z);\n  };\n    \n  float iters = float(ITERS);\n  \n  float g = 25. * float(acc) / iters;\n\n \n  gl_Position = vec4(ux, vy, 0, 1);\n  \n  gl_PointSize = 4.;\n\n  v_color = vec4(g /8., g, g / 3.,1.);\n  \n  \n  \n\n  //v_color = vec4(1, 0, 0, 1);\n}"
  },
  "screenshotURL": "data/images/images-uteeu8t96stuzj9zu-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "10"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "uFkpbdXRxfFsCn8yi"
}