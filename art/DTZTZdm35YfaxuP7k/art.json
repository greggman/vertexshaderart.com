{
  "_id": "DTZTZdm35YfaxuP7k",
  "owner": {
    "_id": "GsGemnD2x9QaMRX9g",
    "createdAt": {
      "$date": {
        "$numberLong": "1619196586677"
      }
    },
    "profile": {
      "name": null,
      "avatarUrl": "https://avatars.githubusercontent.com/Hugo-W?s=200"
    },
    "username": "hugo-w"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1619787225568"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1619787225568"
    }
  },
  "origId": null,
  "name": "Fibo3D_fromScratch",
  "notes": "",
  "rank": {
    "$numberDouble": "1.3352353562255794"
  },
  "private": false,
  "unlisted": true,
  "username": "hugo-w",
  "avatarUrl": "https://avatars.githubusercontent.com/Hugo-W?s=200",
  "settings": {
    "num": 6535,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/chibi-tech/lolitazia-season",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define PI 3.14159265359\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 rotZ(vec3 v, float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  mat3 R = mat3(c, s, 0.,\n               -s, c, 0.,\n                0., 0., 1.);\n  return R * v;\n}\n\nvec3 rotY(vec3 v, float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  mat3 R = mat3(c, 0, s,\n                0, 1, 0,\n               -s, 0, c);\n  return R * v;\n}\n\nvec3 rotX(vec3 v, float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  mat3 R = mat3(1, 0, 0,\n                0, c, s,\n               0, -s, c);\n  return R * v;\n}\n\n#define PNTS_PER_SPHERE 24.\nvoid drawSphere(const float id, out vec3 pos) {\n  float ux = floor(id / 6.) + mod(id, 2.);\n  float vy = mod(floor(id /2.) + floor(id / 3.), 2.);\n  float u = ux / PNTS_PER_SPHERE;\n  float v = vy;\n  float a = u * PI *2.;\n  pos = vec3(cos(a) * v, sin(a) * v, 0.);\n}\n\nvoid getCirclePoint(const float numEdgePointsPerCircle, const float id,\n                    const float inner, const float start, const float end, out vec3 pos) {\n  float outId = id - floor(id / 3.) * 2. - 1.;   // 0 1 2 3 4 5 6 7 8 .. 0 1 2, 1 2 3, 2 3 4\n  float ux = floor(id / 6.) + mod(id, 2.);\n  float vy = mod(floor(id / 2.) + floor(id / 3.), 2.); // change that 3. for cool fx\n  float u = ux / numEdgePointsPerCircle;\n  float v = mix(inner, 1., vy);\n  float a = mix(start, end, u) * PI * 2. + PI * 0.0;\n  float s = sin(a);\n  float c = cos(a);\n  float x = c * v;\n  float y = s * v;\n  float z = 0.;\n  pos = vec3(x, y, z);  \n}\n\nvoid main() {\n  float pointId = vertexId;\n  float u = vertexId/vertexCount;\n  float v = fract(vertexId / vertexCount);\n  gl_PointSize = 10.;\n  \n  vec3 pos_disk;\n  drawSphere(pointId, pos_disk);\n  \n  vec3 pos = vec3(u, v, 0.);\n  pos = rotZ(pos, -time/0.5 + v * u);\n  pos = rotY(pos, -time/0.4 + v * u);\n  //gl_Position = vec4(pos.xyz,1);\n  gl_Position = vec4(pos_disk,1);\n  v_color = vec4(1,0,0,1);\n}"
  },
  "screenshotURL": "data/images/images-ucx9alc5wguf425qc-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "2"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "y6JCKSE4FgHFuby6B"
}