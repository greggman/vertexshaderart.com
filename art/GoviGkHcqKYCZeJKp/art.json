{
  "_id": "GoviGkHcqKYCZeJKp",
  "owner": {
    "_id": "pNRhszAEASfy6B3Xs",
    "createdAt": {
      "$date": {
        "$numberLong": "1453130559425"
      }
    },
    "username": "gaz",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/1383190fac8e70cb725c3d76dbc811ba?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1458876798643"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1459396513860"
    }
  },
  "origId": "K5xqhTGgRRGkJzitm",
  "name": "dacning disco blob",
  "notes": "",
  "rank": {
    "$numberDouble": "1.7314229673490678"
  },
  "private": true,
  "unlisted": false,
  "username": "gaz",
  "avatarUrl": "https://secure.gravatar.com/avatar/1383190fac8e70cb725c3d76dbc811ba?default=retro&size=200",
  "settings": {
    "num": 23287,
    "mode": "LINES",
    "sound": "https://soundcloud.com/naturaviva/dantiez-saunderson-john-norman-get-back-original-mix",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "vec3 hsv(in float h, in float s, in float v) {\n    return mix(vec3(1.0), clamp((abs(fract(\n        h + vec3(3.0, 2.0, 1.0) / 3.0) * 6.0 - 3.0) - 1.0), 0.0, 1.0), s) * v;\n}\n\n\nmat2 rotate(float a) {\n    float s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat hash(in float n) {\n    return fract(sin(n)*753.5453123);\n}\n\n\nvec3 test(in float id)\n{\n  \n  \n  int stp = 0;\n  for(int i=0; i<10; i++){\n    float cnt = pow(2.0, float(i));\n    if (id < cnt) break;\n    id -= cnt;\n    stp++;\n    if(stp>6)break;\n  }\n  //stp=int(min(4.0,float(stp)));\n  float s = 1.0;\n  vec2 p = vec2(0);\n  float r = time*0.3;\n  \n  //return vec3(rotate(r) * vec2(1.0, 0.0),1.0);\n  //if (id >0.0){\n  //id =63.0;\n  //}else{id=0.0;}\n  \n  float t = time*0.3;\n  for(int i=0; i<10; i++){\n    if (stp==i) break;\n    float s0 = s;\n    if (mod(id,2.0) < 0.5){\n      s *= 0.87;\n      r += 1.0*t;\n      p += rotate(-r) * vec2(s0 - s, 0.0);     \n    } else {\n      s *= 0.83;\n      r += 2.0*t;\n      p += rotate(-r) * vec2(s0 + s, 0.0);   \n    } \n    id = floor(id/2.0);\n  }\n  \n  return vec3(p,s);\n}\n\n\nvoid main() {\n  \n  float aspect = resolution.x / resolution.y;\n  float instanceID = floor(vertexId / 6.0);\n  float pointID = abs(3.0 - mod(vertexId, 6.0));\n  vec2 uv = vec2(mod(pointID, 2.0), floor(pointID / 2.0));\n  vec2 p = uv*2.0-1.0;\n  \n  vec3 t = test(instanceID);\n  p *= t.z;\n  p += t.xy;\n  p *= 0.2;\n  \n  p.x /= aspect;\n  gl_Position = vec4(p, 0.0,1.0);\n\n  vec3 col = hsv(fract(sin(instanceID * 0.123)), 0.5, 0.3);\n  \n  v_color = vec4(col, 1);\n}"
  },
  "screenshotURL": "data/images/images-g0alrpn0gxqyq6q3x-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "69"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "8gHmF26YEs7fqx8yE"
}