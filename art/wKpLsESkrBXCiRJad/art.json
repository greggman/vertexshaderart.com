{
  "_id": "wKpLsESkrBXCiRJad",
  "owner": {
    "_id": "Yppm9G5kCnn4TX6MS",
    "createdAt": {
      "$date": "1605217631309"
    },
    "profile": {
      "first_name": "Eugene",
      "last_name": "Chen",
      "avatarUrl": "https://lh4.googleusercontent.com/-1W0Zx2V2YBo/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuck7HOEHYTKOuOYfO3JNASLLHC1T0A/s96-c/photo.jpg"
    },
    "username": "eugene"
  },
  "createdAt": {
    "$date": "1605224727685"
  },
  "modifiedAt": {
    "$date": "1605224727685"
  },
  "origId": "Ajiknj6GiHKrmZT3Z",
  "name": "tutorial-4-1 audio reactive",
  "notes": "",
  "rank": "1.3787256741583809",
  "private": false,
  "unlisted": true,
  "username": "eugene",
  "avatarUrl": "https://lh4.googleusercontent.com/-1W0Zx2V2YBo/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuck7HOEHYTKOuOYfO3JNASLLHC1T0A/s96-c/photo.jpg",
  "settings": {
    "num": 1000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/futureisnow/fine-china",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0.06666666666666667,
      0.25882352941176473,
      1
    ],
    "shader": "vec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvoid main() {\n\n  float down = floor(sqrt(vertexCount));\n  float across = floor(vertexCount / down);\n  \n  \n  float x = mod(vertexId, across);\n  float y = floor(vertexId / across);\n  \n  float u = x / (across - 1.);\n  float v = y / (across - 1.);\n  \n  float xoff = 0.; // sin(time + y * 0.2) * 0.1;\n  float yoff = 0.; // sin(time + x * 0.2) * 0.1;\n  \n  float ux = u * 2. - 1. + xoff;\n  float vy = v * 2. - 1. + yoff;\n  \n  vec2 xy = vec2(ux, vy) * 1.3;\n  \n  float su = abs(u - 0.5) * 2.;\n  float sv = abs(v - 0.5) * 2.;\n  \n  float snd = texture2D(sound, vec2(su * 0.05, sv * .25)).a;\n  \n  gl_Position = vec4(xy, 0, 1);\n  \n  float soff = 0.; // sin(time + x * y * 0.02) * 5.;\n  \n  gl_PointSize = pow(snd + 0.2, 5.) * 30.0 + soff;\n  gl_PointSize *= 20. / across;\n  gl_PointSize *= resolution.x / 600.;\n  \n  float hue = 1.; // u * .1 + sin(time + v * 20.) * 0.05;\n  float sat = 1.;\n  float val = pow(snd + 0.2, 5.); // sin(time + v * u * 20.0) * .5 + .5;\n  \n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\n\n}"
  },
  "screenshotURL": "data/images/images-twe8dd70x1hxu4dra-thumbnail.jpg",
  "hasSound": true,
  "views": "1",
  "likes": "0",
  "revisionId": "4m8hFm6hxLmsWuCmY"
}