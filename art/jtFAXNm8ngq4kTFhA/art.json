{
  "_id": "jtFAXNm8ngq4kTFhA",
  "owner": {
    "_id": "aGApaqB439oYBvo86",
    "createdAt": {
      "$date": {
        "$numberLong": "1499871404427"
      }
    },
    "profile": {
      "name": "Ryota Takemoto",
      "avatarUrl": "https://avatars.githubusercontent.com/r21nomi?s=200"
    },
    "username": "r21nomi"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1529368660996"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1529584556229"
    }
  },
  "origId": null,
  "name": "Circle",
  "notes": "",
  "rank": {
    "$numberDouble": "10.054058526655435"
  },
  "private": false,
  "unlisted": false,
  "username": "r21nomi",
  "avatarUrl": "https://avatars.githubusercontent.com/r21nomi?s=200",
  "settings": {
    "num": 17703,
    "mode": "TRIANGLES",
    "sound": "https://soundcloud.com/meiden/zedd-find-youmeiden-remix",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define NUM_SEGMENTS 128.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n#define PI radians(180.0)\n\nvec3  saturate(vec3 x)  {\n\treturn clamp(x, 0.0, 1.0);\n}\n\nvec3 hue2rgb(float h) {\n    h = fract(h) * 6.0 - 2.0;\n    return saturate(vec3(abs(h - 1.0) - 1.0, 2.0 - abs(h), 2.0 - abs(h - 2.0)));\n}\n\nvec2 getCirclePoint(float id, float numCircles, float radiusOffset) {\n  \tfloat ux = floor(id / 6.0) + mod(id, 2.0);\n  \tfloat uy = mod(floor(id / 2.0) + floor(id / 3.0), 2.0);\n  \t\n  \tfloat angle = ux / numCircles * PI * 2.0;\n  \tfloat c = cos(angle);\n  \tfloat s = sin(angle);\n  \n  \tfloat radius = uy + radiusOffset;\n  \n  \tfloat x = c * radius;\n  \tfloat y = s * radius;\n  \n  \treturn vec2(x, y);\n}\n\nvoid main() {\n  \t// Point num for simple circle with line.\n  \tfloat pointNumOfCircle = 20.0;\n  \n  \t// Point num consist of circle.\n  \tfloat totalPointNumPerCircle = pointNumOfCircle * 6.0;\n  \n  \tfloat circleId = floor(vertexId / totalPointNumPerCircle);\n  \tfloat numCircles = floor(vertexCount / totalPointNumPerCircle);\n  \n  \tfloat down = floor(sqrt(numCircles));\n  \tfloat across = floor(numCircles / down);\n  \n  \tfloat x = mod(circleId, across);\n  \tfloat y = floor(circleId / across);\n  \n  \tfloat u = x / (across - 1.0);\n  \tfloat v = y / (across - 1.0);\n  \n  \tfloat ux = u * 2.0 - 1.0;\n  \tfloat vy = v * 2.0 - 1.0;\n  \n  \tfloat radiusOffset = abs(sin(time * 3.0 + circleId));\n  \tvec2 circleXY= getCirclePoint(vertexId, pointNumOfCircle, radiusOffset);\n  \n  \tfloat su = abs(u - 0.5) * 1.0;\n  \tfloat sv = abs(v - 0.5) * 1.0;\n  \tfloat au = abs(atan(su, sv)) / PI;\n  \tfloat av = length(vec2(su, sv));\n  \tfloat snd = texture2D(sound, vec2(au * 0.05, av * 0.05)).a;\n   \n  \tfloat scale = snd * 2.5;\n  \tvec2 xy = circleXY * 0.1 + vec2(ux, vy) * scale;\n  \tvec3 pos = vec3(xy * 0.5, 0.0);\n  \n  \tgl_Position = vec4(pos, 1.0);\n  \tfloat pump = step(0.5, snd);\n  \tvec3 hue = hue2rgb(snd);\n  \tvec3 color = vec3(pump, pump, 0.5) * hue;\n  \n  \tv_color = vec4(color, 1.0);\n}"
  },
  "screenshotURL": "data/images/images-ri2grzcx1zd0v5qmy-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "179"
  },
  "likes": {
    "$numberInt": "2"
  },
  "revisionId": "QhGCAzXSjfNbyD9oW"
}