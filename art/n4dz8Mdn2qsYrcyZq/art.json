{
  "_id": "n4dz8Mdn2qsYrcyZq",
  "owner": {
    "_id": "Q5T8njsEaGYsK34dZ",
    "createdAt": {
      "$date": 1448898157107
    },
    "profile": {
      "name": null,
      "avatarUrl": "https://avatars.githubusercontent.com/8BitRick?s=200"
    },
    "username": "8bitrick"
  },
  "createdAt": {
    "$date": 1449501232810
  },
  "modifiedAt": {
    "$date": 1449501232810
  },
  "origId": "jqRhLrTMA3GFEk2m5",
  "name": "pointsprite plasma 3D - dynamic",
  "rank": 1.3530744949870384,
  "private": false,
  "unlisted": true,
  "username": "8bitrick",
  "settings": {
    "num": 10000,
    "mode": "POINTS",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "//time vertexId gl_Position v_color resolution vertexCount\n\n// -- Just added the dynamic width and height to allow different # of vertices --\n//\n\n// 3d plasma\n// maybe I will polygonize this in my next code\n\n#define temp sqrt(vertexCount / 0.24)\n#define width temp*0.6\n#define height temp*0.4\n\nfloat plasma(vec2 pos)\n{\n  float c = 0.0;\n  c = sin(sin(pos.x) + sin(3.4 * pos.y) + sin(3.0 * pos.x + pos.y + 3.0 * time) + sin(pos.x + sin(pos.y + 2.0 * time))) + (sin(pos.x * pos.y - 3.0 * time) * 0.5 + 0.25);\n  return c;\n}\n\nvoid main() {\n  float ratio = resolution.x / resolution.y;\n  float w = width;\n  float h = height / ratio;\n\n  float vId = float(vertexId);\n  float px = (mod(vId, w) - w / 2.0) / (w / 2.0);\n  float py = (floor(vId / w) - h / 2.0) / (h / 0.5) + 0.5;\n  \n  //gl_Position = vec4(px, py, 0, 1);\n  float y = -0.75 + py;\n  float c = sin(plasma(vec2(px+0.5, py) * 4.0)) * 0.5 + 0.25;\n  gl_Position = vec4(px / py, (y + c * 0.15) / py, 0.0, 1);\n  gl_PointSize = 1.0;\n\n  \n  v_color = vec4(0.5 + c, 0.5 + c, 1.5 + c, 1) * 0.75;\n}"
  },
  "screenshotURL": "data/images/images-dyga3hqff4olb05j3-thumbnail.jpg",
  "hasSound": "",
  "views": 2,
  "likes": 0,
  "revisionId": "E3FCzgPHFrFFbDiqz",
  "avatarUrl": "https://avatars.githubusercontent.com/8BitRick?s=200"
}