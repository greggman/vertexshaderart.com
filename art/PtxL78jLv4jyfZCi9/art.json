{
  "_id": "PtxL78jLv4jyfZCi9",
  "owner": {
    "_id": "C2utQTT3TWar9FrqK",
    "createdAt": {
      "$date": {
        "$numberLong": "1655222020443"
      }
    },
    "username": "watermeloon",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/e0a1c061d10e360fcf5646229dd6e29a?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1655555400663"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1655573719649"
    }
  },
  "origId": null,
  "name": "tam",
  "notes": "",
  "rank": {
    "$numberDouble": "1.3129008620465719"
  },
  "private": true,
  "unlisted": false,
  "username": "watermeloon",
  "avatarUrl": "https://secure.gravatar.com/avatar/e0a1c061d10e360fcf5646229dd6e29a?default=retro&size=200",
  "settings": {
    "num": 100000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/waveshaper-2/you-are-the-end-furi-ost",
    "lineSize": "NATIVE",
    "backgroundColor": [
      1,
      1,
      1,
      1
    ],
    "shader": "#define PI radians(180.)\n\n//returns the evenly distributed points\n//https://stackoverflow.com/questions/9600801/evenly\n//-distributing-n-points-on-a-sphere\nvec3 FIBO(float rad, float id, float sum){\n\n  \t//golden angle in radians\n  float phi = PI * (3. - sqrt(5.));\n\n  \t// y goes from 1 to -1\n  float y = 1. - (id / (sum - 1.)) * 2.;  \n  float radius = sqrt(1. - y * y);\n\n  float theta = phi * id;\n\n  float x = cos(theta) * radius;\n  float z = sin(theta) * radius;\n  \t\n  vec3 point = vec3(x * rad, y * rad, z * rad);\n  \n  return point;\n}\n\n//X axis rotation\nmat4 rotateX(float angleInRadians){\n    float s = sin(angleInRadians);\n    float c = cos(angleInRadians);\n  \t\n    return mat4( \n      1, 0, 0, 0,\n      0, c, s, 0,\n      0, -s, c, 0,\n      0, 0, 0, 1);  \n}\n \n//Y axis rotation\nmat4 rotateY(float angleInRadians){\n    float s = sin(angleInRadians);\n    float c = cos(angleInRadians);\n  \t\n    return mat4( \n      c, 0,-s, 0,\n      0, 1, 0, 0,\n      s, 0, c, 0,\n      0, 0, 0, 1);  \n}\n\n//Z axis rotation\nmat4 rotateZ(float angleInRadians){\n    float s = sin(angleInRadians);\n    float c = cos(angleInRadians);\n  \t\n    return mat4( \n      c,-s, 0, 0, \n      s, c, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1); \n}\n\n// hash function from https://www.shadertoy.com/view/4djSRW\nfloat hash(float p) {\n\tvec2 p2 = fract(vec2(p * 5.3983, p * 5.4427));\n    p2 += dot(p2.yx, p2.xy + vec2(21.5351, 14.3137));\n\treturn fract(p2.x * p2.y * 95.4337);\n}\n\nvoid main(){\n  \n  vec4 point;\n  float radius = 0.7;\n  \n  float node_count = floor(vertexCount / 10.);\n  float node_id = floor(vertexId / 10.);\n  float cv = node_id / node_count;\n  \n  float m = 4.;\n  \n  if(mod(vertexId, m) == 0.){\n\tpoint = vec4(FIBO(radius, vertexId / m, node_count), 1.);\n  }\n  \n  if(mod(vertexId, m) == 1.){\n\tpoint = vec4(FIBO(radius * 0.9, vertexId / m, node_count), 1.);\n  }\n    \n  float s = texture2D(sound, vec2(mix(0.1, 0.5, hash(cv)), atan(hash(cv) / 2. * 3.2))).a;\n  s = mix(0.0, 2.0, s);\n  \n  point *= 1. + pow(s, 15.) / 999.;\n  \n  point *= rotateX(time * .2);\n  point *= rotateY(time * .2);\n  point *= rotateZ(time * .2);\n  \n  gl_Position = vec4(point.x * resolution.y/resolution.x, point.y, point.z, 1.);\n  \n  float color_norm = (gl_Position.z + 2.) / 2.;\n  color_norm -= .6;\n  //color_norm -= .6; back is visible too\n  vec4 color = vec4(color_norm, color_norm, color_norm, 1);\n  v_color = color;\n  \n  gl_PointSize = 1.;\n  gl_PointSize -= gl_Position.z * .15;\n  gl_PointSize = 2. * s;\n\n}"
  },
  "screenshotURL": "data/images/images-vvcfuuljm37ejfkdg-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "4"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "XSnx9WvdovMtw4JFp"
}