{
  "_id": "ZPpq2oK4fqmPHJnQn",
  "owner": {
    "_id": "RcxgZCyRSYWSzdHH8",
    "createdAt": {
      "$date": {
        "$numberLong": "1544399496802"
      }
    },
    "profile": {
      "first_name": "Daff",
      "last_name": "Re_Gain",
      "avatarUrl": "https://lh6.googleusercontent.com/-q6F2s0HNLkg/AAAAAAAAAAI/AAAAAAAAABQ/1TC-kZyFYM0/photo.jpg"
    },
    "username": "daff"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1544400334538"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1544437375180"
    }
  },
  "origId": null,
  "name": "Alert",
  "notes": "Alert\n@Re_gain Aka Daff",
  "rank": {
    "$numberDouble": "1.8964378542295317"
  },
  "private": false,
  "unlisted": false,
  "username": "daff",
  "avatarUrl": "https://lh6.googleusercontent.com/-q6F2s0HNLkg/AAAAAAAAAAI/AAAAAAAAABQ/1TC-kZyFYM0/photo.jpg",
  "settings": "{\"num\":100000,\"mode\":\"POINTS\",\"sound\":\"https://soundcloud.com/re_gain/alert\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"// Based on @greggman's contributions => https://goo.gl/jyVxLc\\n// @Re_gain aka Daff: https://soundcloud.com/re_gain\\nvec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x,clamp(c.yz, 0.0, 1.0));\\n  vec4 k= vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p= abs(fract(c.xxx + k.xyz) * 6.0 - k.www);\\n  return c.z * mix(k.xxx, clamp(p - k.xxx, 0.0, 1.0), c.y);  \\n}\\n\\n#define PI radians(180.0)\\n\\nmat4 rotX(float angleInRadians) {\\n    float s = sin(angleInRadians);\\n    float c = cos(angleInRadians);\\n  \\t\\n    return mat4( \\n      1, 0, 0, 0,\\n      0, c, s, 0,\\n      0, -s, c, 0,\\n      0, 0, 0, 1);  \\n}\\n\\nmat4 rotY(float angleInRadians) {\\n    float s = sin(angleInRadians);\\n    float c = cos(angleInRadians);\\n  \\t\\n    return mat4( \\n      c, 0,-s, 0,\\n      0, 1, 0, 0,\\n      s, 0, c, 0,\\n      0, 0, 0, 1);  \\n}\\n\\nmat4 rotZ(float angleInRadians) {\\n    float s = sin(angleInRadians);\\n    float c = cos(angleInRadians);\\n  \\t\\n    return mat4( \\n      c,-s, 0, 0, \\n      s, c, 0, 0,\\n      0, 0, 1, 0,\\n      0, 0, 0, 1); \\n}\\n\\nmat4 trans(vec3 trans) {\\n  return mat4(\\n    1, 0, 0, 0,\\n    0, 1, 0, 0,\\n    0, 0, 1, 0,\\n    trans, 1);\\n}\\n\\nmat4 ident() {\\n  return mat4(\\n    1, 0, 0, 0,\\n    0, 1, 0, 0,\\n    0, 0, 1, 0,\\n    0, 0, 0, 1);\\n}\\n\\nmat4 scale(vec3 s) {\\n  return mat4(\\n    s[0], 0, 0, 0,\\n    0, s[1], 0, 0,\\n    0, 0, s[2], 0,\\n    0, 0, 0, 1);\\n}\\n\\nmat4 uniformScale(float s) {\\n  return mat4(\\n    s, 0, 0, 0,\\n    0, s, 0, 0,\\n    0, 0, s, 0,\\n    0, 0, 0, 1);\\n}\\n\\nvec2 getCirclePoint(float id, float munCircleSegments) {\\n  \\n  float ux = floor(id / 6.) + mod(id, 2.);\\n  float vy = mod(floor(id / 2.) + floor(id / 3.), 2.);\\n  \\n  float angle = ux / munCircleSegments * PI * 2.;\\n  float c = cos(angle);\\n  float s = sin(angle);\\n  \\n  float radius = vy + 1.;\\n  \\n  float x = c * radius;\\n  float y = s * radius;\\n  \\n  return vec2(x, y);\\n}\\n\\n// Based on @greggman's contributions => https://goo.gl/jyVxLc \\n// @Re_gain aka Daff: https://soundcloud.com/re_gain\\nvoid main() {\\n  \\n  float numCircleSegments = 20.;\\n  vec2 circleXY = getCirclePoint(vertexId, numCircleSegments);\\n  \\n  float numPointsPerCircle = numCircleSegments * .02;\\n  float circleId =  floor(vertexId / numPointsPerCircle);\\n  float numCircles = floor(vertexCount / numPointsPerCircle);\\n  \\n  float sliceId = floor(vertexId / 6.0);\\n  float oddSlice = mod (sliceId, .2);\\n    \\n  float down = floor(sqrt(numCircles));\\n  float across = floor(numCircles / down);\\n  \\n  float x = mod(circleId*PI, across);\\n  float y = floor(circleId / across);\\n  \\n  float u = x / (across - 1.);\\n  float v = y / (across - 1.);\\n  \\n  float xoff = sin(time + y * 0.2) * 0.1;\\n  float yoff = 0.;\\n  \\n  float ux = u * 2. - 1. + xoff;\\n  float vy = v * 2. - 1. + yoff;\\n  \\n\\n  \\n  float su = abs(u - 0.5) * 2.2;\\n  float sv = abs(v - 0.5) * 2.2;\\n  float au = abs(atan(su, sv)) / PI;\\n  float av = length(vec2(su, sv));\\n  float snd = texture2D(sound, vec2 (au * 0.05 , av * .25)).a;\\n  \\n  float  aspect =  resolution.x / resolution.y;\\n  float sc = pow(snd, 5.) * mix (1., 1.1, oddSlice);\\n  \\n  sc *= 20. / across;\\n  \\n  vec4 pos = vec4(circleXY, 0, 1);\\n  mat4 mat = ident();\\n    \\n  mat *= scale(vec3(1, aspect,1));   \\n  mat *= rotZ(time * 0.9);\\n  mat *= rotY(time*0.0000009);\\n  mat *= rotX(sin(snd)* sin(sc));\\n  mat *= trans(vec3(ux, vy, 0)*snd);  \\n  mat *= rotZ(snd * ux);\\n  mat *= uniformScale(0.000003*snd);\\n\\n  \\n float soff = 1.; \\n  \\n gl_Position = mat*pos;\\n //gl_Position +=vec4(su/snd,sv/snd,0,0);  \\n gl_Position *=aspect;\\n  \\n  float pump = step(0.8, snd);\\n  float hue = u * .1 + snd  *0.2+ snd*time *.0001;\\n  float sat = mix(time, snd, pump);\\n  float val = mix(1., pow(snd + 0.5, 5.), pump);\\n  \\n  hue = hue + pump * oddSlice *0.5 + pump*.33;\\n  val += oddSlice * pump;\\n  \\n  \\n  v_color = vec4(hsv2rgb(vec3(hue, sat , val)), 1);\\n  \\n}\\n\"}",
  "screenshotURL": "data/images/images-10ghgje8atqyukd46-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "321"
  },
  "likes": {
    "$numberInt": "1"
  },
  "revisionId": "GKxTuKJEzGDpgCrEr"
}