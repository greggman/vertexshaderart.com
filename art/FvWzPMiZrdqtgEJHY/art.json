{
  "_id": "FvWzPMiZrdqtgEJHY",
  "owner": {
    "_id": "pNRhszAEASfy6B3Xs",
    "createdAt": {
      "$date": 1453130559425
    },
    "username": "gaz",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/1383190fac8e70cb725c3d76dbc811ba?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": 1458810539228
  },
  "modifiedAt": {
    "$date": 1458947554076
  },
  "origId": "DSH7PskktA2rGgZ6F",
  "name": "Particle",
  "notes": "",
  "rank": 1.2028496263449713,
  "private": false,
  "unlisted": false,
  "username": "gaz",
  "avatarUrl": "https://secure.gravatar.com/avatar/1383190fac8e70cb725c3d76dbc811ba?default=retro&size=200",
  "settings": {
    "num": 500,
    "mode": "POINTS",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nmat4 perspective(in float fovy, in float aspect, in float near, in float far) {\n    float top = near * tan(radians(fovy * 0.5));\n    float right = top * aspect;\n    float u = right * 2.0;\n    float v = top * 2.0;\n    float w = far - near;\n    return mat4(\n        near * 2.0 / u, 0.0, 0.0, 0.0, 0.0,                  \n        near * 2.0 / v, 0.0, 0.0, 0.0, 0.0,          \n        -(far + near) / w, -1.0, 0.0, 0.0,\n        -(far * near * 2.0) / w, 0.0\n    );    \n}\n\nfloat hash(in float n) {\n    return fract(sin(n)*753.5453123);\n}\n    \nvec3 hash31(in float n) {\n    return vec3(hash(n * 0.123), hash(n * 0.456), hash(n * 0.789));        \n} \n\nvoid main() {\n\tmat4 pMatrix = perspective(45.0, resolution.x/resolution.y, 0.1, 100.0);\n  \tmat4 vMatrix = mat4(1.0);\n  \tvMatrix[3].z = -3.5; \n    vec3 p = hash31(vertexId * 12.12 + 34.34) * 2.0 - 1.0;\n    vec3 v = hash31(vertexId * 56.56 + 78.78) * 2.0 - 1.0;\n  \tp = abs(fract(p + v * time * 0.3) * 2.0 - 1.0) * 2.0 - 1.0;\n  \tgl_Position = pMatrix *vMatrix  * vec4(p, 1.0);\n  \tgl_PointSize = 50.0 / pow(gl_Position.w, 2.0); \n  \tvec3 col = hsv2rgb(vec3(hash(vertexId * 567.123), 0.5, 0.8));\n  \tv_color = vec4(col, 1.0);\n}\n\n"
  },
  "screenshotURL": "data/images/images-iw5tw2hxsnowabvg7-thumbnail.jpg",
  "hasSound": "",
  "views": 307,
  "likes": 0,
  "revisionId": "sAb27JrMufhdjS76A"
}