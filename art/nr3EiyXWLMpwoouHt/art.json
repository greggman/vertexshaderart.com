{
  "_id": "nr3EiyXWLMpwoouHt",
  "owner": {
    "_id": "B7Kfai5f9h3MxwJcP",
    "createdAt": {
      "$date": 1445777397953
    },
    "username": "gman",
    "profile": {
      "info": "&nbsp;&nbsp;contact: [@greggman](http://twitter.com/greggman), [github](http://github.com/greggman), [blog](http://greggman.com)\nnew stuff: [webgl](http://webglfundamentals.com), [twgl](http://twgljs.org), [threejsfundamentals](https://threejsfundamentals.org)\nold stuff: [chrome](http://chromium.org), [locoroco](https://www.youtube.com/watch?v=pFKpyScxv0k), [CTR](https://www.youtube.com/watch?v=3O8FK5d67cM), [Zombie Revenge](https://www.youtube.com/watch?v=Xw8yNik8Q-A), [and others...](http://games.greggman.com/game/games_o_the_greggman/)\n\nSome stuff you might want to look at\n\n*   [A uniform grid based on `vertexCount` and the window dimensions](https://www.vertexshaderart.com/art/NPohkmBgKdTBhML8P)\n*   [Tons of matrix functions](https://www.vertexshaderart.com/art/nr3EiyXWLMpwoouHt)\n\nNote: All the shaders I've posted are licensed [CC0](https://creativecommons.org/publicdomain/zero/1.0/)",
      "avatarUrl": "https://secure.gravatar.com/avatar/dcc0309895c3d6db087631813efaa9d1?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": 1445837731814
  },
  "origId": "QH3gSYw84QKSqtGr2",
  "name": "lazer",
  "username": "gman",
  "settings": {
    "num": 1400,
    "mode": "LINES",
    "sound": "https://soundcloud.com/enditmanagement/option4-deep-diamonds",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0.01568627450980392,
      0.11372549019607843,
      1
    ],
    "shader": "/*\n\n  ^\n /|\\\n  |\n  +-- click hide then ...\n\n                               __  .__                                                 \n  _____   _______  __ ____   _/  |_|  |__   ____     _____   ____  __ __  ______ ____  \n /     \\ /  _ \\  \\/ // __ \\  \\   __\\  |  \\_/ __ \\   /     \\ /  _ \\|  |  \\/  ___// __ \\ \n|  Y Y  (  <_> )   /\\  ___/   |  | |   Y  \\  ___/  |  Y Y  (  <_> )  |  /\\___ \\\\  ___/ \n|__|_|  /\\____/ \\_/  \\___  >  |__| |___|  /\\___  > |__|_|  /\\____/|____//____  >\\___  >\n      \\/                 \\/             \\/     \\/        \\/                  \\/     \\/ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n\n#define PI radians(180.0)\n#define NUM_SEGMENTS 2.\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n#define STEP 1.0\n//#define FIT_VERTICAL\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  float snd = texture2D(sound, vec2(0.1, 0.0)).a;\n  float localTime = time * 0.01 + snd * 0.0;\n  float point = mod(floor(vertexId / 2.0) + mod(vertexId, 2.0) * STEP, NUM_SEGMENTS + snd);\n  float count = floor(vertexId / NUM_POINTS + snd);\n  float offset = count * sin(localTime * 0.01) + 5.0;\n  float angle = point * PI * 2.0 / NUM_SEGMENTS + offset;\n  float radius = pow(count * 0.014, 1.0);\n  float c = cos(angle + localTime) * radius;\n  float s = sin(angle + localTime) * radius;\n  float orbitAngle =  pow(count * 0.0025, 0.8);\n  float innerRadius = pow(count * 0.00005, 1.2);\n  float oC = cos(orbitAngle + count * 0.00001) * innerRadius;\n  float oS = sin(orbitAngle + count * 0.00001) * innerRadius;\n\n  #ifdef FIT_VERTICAL\n    vec2 aspect = vec2(resolution.y / resolution.x, 1);\n  #else\n    vec2 aspect = vec2(1, resolution.x / resolution.y);\n  #endif\n\n  vec4 m = texture2D(touch, vec2(0., count / 1400.));\n  vec2 xy = vec2(\n      oC + c,\n      oS + s);\n  gl_Position = vec4(xy * aspect + m.xy * 1.4, 0, 1);\n\n  //float b = mix(0.0, 0.7, step(0.5, mod(count + localTime * 1.0, 6.0) / 2.0));\n  float b = 1.0 - pow(sin(count * 0.4) * 0.5 + 0.5, 10.0);\n  b = 0.0;mix(0.0, 0.7, b);\n  float hue = snd;\n  float sat = 1.0 - fract(count * 0.01);\n  float val = snd * 2.0;\n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\n}"
  },
  "screenshotDataId": "d87Kz3HWKtJi4mZQP",
  "views": 842,
  "likes": 6,
  "revisionId": "W724NRuJ9i8qosEgy",
  "screenshotURL": "data/images/images-c1onu7d0wryojd5eu-thumbnail.jpg",
  "modifiedAt": {
    "$date": 1499943432736
  },
  "private": false,
  "hasSound": true,
  "rank": 10.01788267968922,
  "unlisted": false,
  "avatarUrl": "https://secure.gravatar.com/avatar/dcc0309895c3d6db087631813efaa9d1?default=retro&size=200",
  "notes": "2017-07-13: replace missing music"
}