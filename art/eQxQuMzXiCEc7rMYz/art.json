{
  "_id": "eQxQuMzXiCEc7rMYz",
  "owner": {
    "_id": "DwENpeGK75hmdzFsS",
    "createdAt": {
      "$date": 1569860206569
    },
    "profile": {
      "name": "mtoutside",
      "avatarUrl": "https://avatars.githubusercontent.com/mtoutside?s=200"
    },
    "username": "mtoutside"
  },
  "createdAt": {
    "$date": 1569902901376
  },
  "modifiedAt": {
    "$date": 1569905596537
  },
  "origId": null,
  "name": "lessons",
  "notes": "",
  "rank": 1.712084299673552,
  "private": false,
  "unlisted": true,
  "username": "mtoutside",
  "avatarUrl": "https://avatars.githubusercontent.com/mtoutside?s=200",
  "settings": {
    "num": 120,
    "mode": "TRIANGLES",
    "sound": "https://soundcloud.com/graham-panter/hypercube",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0.1607843137254902,
      0.1607843137254902,
      0.3254901960784314,
      1
    ],
    "shader": "#define PI radians(180.)\n#define NUM_SEGMENTS 2.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n#define STEP 1.0\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec2 getCirclePoint(float id, float numCircleSegments) {\n  float ux = floor(id / 6.) + mod(id, 2.);\n  // id = 0 1 2 3 \n  \n  float vy = mod(floor(id / 2.) + floor(id / 3.), 2.);\n\n  \n  float angle = ux / numCircleSegments * PI * 2.;\n  float c = cos(angle);\n  float s = sin(angle);\n  \n  float radius = vy + 1.;\n  \n    float x = c * radius;\n  float y = s * radius;\n  \n  return vec2(x, y);\n}\n\n\nvoid main() {\n  float numCircleSegments = 20.;\n  vec2 circleXY =  getCirclePoint(vertexId,\n                                  numCircleSegments);\n  \n  float down = floor(sqrt(vertexCount));\n  float across = floor(vertexCount / down);\n  \n  float x = mod(vertexId, across);\n  float y = floor(vertexId / across);\n  \n  float xoff = 0.; //sin(time + y * 0.2) * .1;\n  float yoff = 0.; //sin(time + x * 0.2) * .2;\n  \n  float u = x / (across - 1.);\n  float v = y / (across - 1.);\n  \n  float ux = u * 2. - 1. + xoff;\n  float vy = v * 2. - 1. + yoff;\n  \n  vec2 xy = vec2(ux, vy) * 1.3;\n  \n  float su = abs(u - .5) * 2.;\n  float sv = abs(v - .5) * 2.;\n  float au = abs(atan(su, sv)) / PI;\n  float av = length(vec2(su, sv));\n  float snd = texture2D(sound, vec2(au * .05, av * .25)).a;\n  \n  gl_Position = vec4(xy, 0., 1.);\n  \n  float soff = 0.; // sin(time + x  * y * .002) * 5.;\n  \n  gl_PointSize = snd * 30.0 + soff;\n  gl_PointSize *= 20. / across;\n  gl_PointSize *= resolution.x / 600.;\n  \n  float pump = step(.8, snd); \n  float hue = u * .1 + snd * .2 + time + .1;\n  float sat  = mix(0., 1.,  pump);\n  float val  = 1.; //mix(1., pow(snd + .2, 5.), pump); //sin(time  + v * u * 20.) * .5 + .5;\n  \n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1.0);\n}\n"
  },
  "screenshotURL": "data/images/images-nwst684nt8u2olosw-thumbnail.jpg",
  "hasSound": true,
  "views": 7,
  "likes": 0,
  "revisionId": "Ma2Sn8juAZCRqYwkf"
}