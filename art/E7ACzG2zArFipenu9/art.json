{
  "_id": "E7ACzG2zArFipenu9",
  "owner": {
    "_id": "Pexi77zfde4iNKmrT",
    "createdAt": {
      "$date": {
        "$numberLong": "1493741221077"
      }
    },
    "profile": {
      "name": "Kolargon Generative",
      "avatarUrl": "https://lh3.googleusercontent.com/-tiKYx1U71-Q/AAAAAAAAAAI/AAAAAAAAAGg/b-eEUsFpspc/photo.jpg"
    },
    "username": "kolargon"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1551484744655"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1551484744655"
    }
  },
  "origId": "fssfXPCEwPLZfQFqp",
  "name": "cube rotation on a curve 2",
  "notes": "",
  "rank": {
    "$numberDouble": "1.1769167403000813"
  },
  "private": true,
  "unlisted": false,
  "username": "kolargon",
  "avatarUrl": "https://lh3.googleusercontent.com/-tiKYx1U71-Q/AAAAAAAAAAI/AAAAAAAAAGg/b-eEUsFpspc/photo.jpg",
  "settings": "{\"num\":3600,\"mode\":\"TRI_STRIP\",\"sound\":\"https://soundcloud.com/caseandpoint/case-point-upgrade-free-download\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\" #define ITERS 10\\n\\n//KDrawmode=GL_TRIANGLE_STRIP\\n\\n\\n#define lineNumber 1.//KParameter0 1.>>10.\\n#define speedFactor 1.//KParameter1 1.>>5.\\n#define sndFactor 3.//KParameter7 0.>>5.\\n#define cubeRotFactor 1.//KParameter2 1.>>15.\\n\\n\\n\\n#define HPI 1.570796326795\\n\\n\\n#define PI   3.14159265358988\\n\\nmat4 scaleXYZ(float _x, float _y, float _z)\\n{\\n     return mat4(_x, 0, 0, 0,\\n                0, _y, 0, 0,\\n                0, 0, _z, 0,\\n                0, 0, 0, 1);\\n}\\n\\n\\nmat4 uniformScale(float _s) {\\n    return mat4(\\n                1., 0, 0, 0,\\n                0, _s, 0, 0,\\n                0, 0, 1., 0,\\n                0, 0, 0, 1);\\n}\\n\\nvec3 noise(vec3 _v) {\\n    return fract(sin(_v * vec3(43758.5453123, 12345.6789012,76543.2109876)));\\n}\\n\\nvec3 rotX(vec3 _v, float _rad) {\\n    vec2 f = sin(vec2(_rad, _rad + HPI));\\n    vec3 r = _v;\\n    r.y = _v.y * f.y + _v.z * -f.x;\\n    r.z = _v.y * f.x + _v.z *  f.y;\\n    return r;\\n}\\n\\nvec3 rotY(vec3 _v, float _rad) {\\n    vec2 f = sin(vec2(_rad, _rad + HPI));\\n    vec3 r = _v;\\n    r.x =  _v.x *  f.y + _v.z *  f.x;\\n    r.z =  _v.x * -f.x + _v.z *  f.y;\\n    return r;\\n}\\n\\nvec3 rotZ(vec3 _v, float _rad) {\\n    vec2 f = sin(vec2(_rad, _rad + HPI));\\n    vec3 r = _v;\\n    r.x =  _v.x *  f.x + _v.y * f.y;\\n    r.y =  _v.x * -f.y + _v.y * f.x;\\n    return r;\\n}\\n\\n\\nvec4 perspective(vec3 _v, float _fov, float _near, float _far, vec2 _res) {\\n    vec4 r = vec4(_v, -_v.z);\\n    r.xy *= vec2(_res.y / _res.x, 1.0) / tan(radians(_fov * 0.5));\\n    r.z = (-_v.z * (_far + _near) - 2.0 * _far * _near) / (_far - _near);\\n    return r;\\n}\\n\\nvec3 lookAt(vec3 _v, vec3 _eye, vec3 _look, vec3 _up) {\\n    vec3 z = normalize(_eye - _look);\\n    vec3 x = normalize(cross(_up, z));\\n    vec3 y = cross(z, x);\\n    vec4 r = mat4(x.x, y.x, z.x, 0.0, x.y, y.y, z.y, 0.0, x.z, y.z, z.z, 0.0, 0.0, 0.0, 0.0, 1.0) *mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -_eye.x, -_eye.y, -_eye.z, 1.0)* vec4(_v, 1.0);\\n    return r.xyz;\\n}\\n\\n\\nvec3 shade(vec3 _eye, vec3 _p, vec3 _n, vec3 _dfscol, float _amb, vec2 _spec)\\n{\\n    vec3 rgb;\\n    vec3 lit = normalize(vec3(1.0, 1.0, 4.0));\\n    \\n    float diffuse = max(0.0, dot(_n, lit)) * (1.0 - _amb) + _amb;\\n    \\n    vec3 h = normalize(normalize(_eye - _p) + lit);\\n    float specular = 1.0;\\n    if(diffuse > 0.0) {\\n        specular = max(0.1,dot(_n, h));\\n    }\\n    \\n    rgb = diffuse * _dfscol + specular * _spec.y;\\n    \\n    return rgb;\\n}\\n\\n#define kShapeVertexCount 36.0\\n#define kVertexPerShape 6.0\\n\\n\\nvec3 shapeVertex(float _vId, out vec4 _nI)\\n{\\n    float faceId = floor(_vId / kVertexPerShape);\\n    float vtxId = mod(_vId, kVertexPerShape);\\n    vec2 fp;\\n    vec3 v;\\n    \\n    if(vtxId <= 1.0) {\\n        fp = vec2(1.0, 1.0);\\n    }\\n    else if(vtxId == 2.0) {\\n        fp = vec2(-1.0, 1.0);\\n    }\\n    else if(vtxId == 3.0) {\\n        fp = vec2(1.0, -1.0);\\n    }\\n    else {\\n        fp = vec2(-1.0, -1.0);\\n    }\\n    \\n    if(faceId == 0.0) {\\n        \\n        v = vec3(fp.x, fp.y, 1.0);\\n        _nI = vec4(0.0, 0.0, 1.0, faceId);\\n    }\\n    else if(faceId == 1.0) {\\n        \\n        v = vec3(-fp.x, fp.y, -1.0);\\n        _nI = vec4(0.0, 0.0, -1.0, faceId);\\n    }\\n    else if(faceId == 2.0) {\\n        \\n        v = vec3(fp.x, 1.0, -fp.y);\\n        _nI = vec4(0.0, 1.0, 0.0, faceId);\\n    }\\n    else if(faceId == 3.0) {\\n        \\n        v = vec3(fp.x, -1.0, fp.y);\\n        _nI = vec4(0.0, -1.0, 0.0, faceId);\\n    }\\n    else if(faceId == 4.0) {\\n        \\n        v = vec3(-1.0, fp.y, -fp.x);\\n        _nI = vec4(-1.0, 0.0, 0.0, faceId);\\n    }\\n    else {\\n        \\n        v = vec3(1.0, fp.y, fp.x);\\n        _nI = vec4(1.0, 0.0, 0.0, faceId);\\n    }\\n    \\n    return v;\\n}\\n\\n/*\\nvec3 getCurvePoint(const float id, const float _time) {\\n  return vec3(\\n    sin(id * 1.+_time*10.),\\n    sin(id * 0.5+_time*10.),\\n    sin(id * 0.25+_time*10.));\\n}\\n*/\\nvec3 getCurvePoint(const float id, const float _time) {\\n  return vec3(\\n    0.,\\n    cos(2.*PI*id),\\n    sin(2.*PI*id)\\n    );\\n}\\nvoid main() {\\n    //gl_PointSize = 0.1;\\n    float sizeFactor = 1./50.;\\n    //float patternSize = sizeFactor*3.;\\n    float shapeCount = floor(vertexCount / kShapeVertexCount);\\n    float shapeId = floor(vertexId / kShapeVertexCount);\\n    float shapeVertexId = mod(vertexId, kShapeVertexCount);\\n \\n    float shapeRelId = shapeId/shapeCount;\\n    \\n    \\n    float numberOfElement = lineNumber;\\n    float numberOfLines = shapeCount/numberOfElement;\\n    \\n    float lineId = floor(shapeId/numberOfElement);\\n    \\n    float xPos = mod(shapeId,numberOfElement)/numberOfElement;\\n    float normXid = xPos/2.;\\n    xPos = xPos*2.-1.;\\n    float snd = texture2D(sound, vec2(normXid, shapeRelId)).a/2.;\\n   \\n    vec4 cbNi;\\n  \\n    vec3 cubep = shapeVertex(shapeVertexId, cbNi);;\\n    \\n    cubep*= sizeFactor;\\n    \\n  \\n  \\n  \\n  float off = 0.14;\\n  float expand = 1.;\\n  float curveFactor = time/20.;\\n  vec3 r0 = getCurvePoint(shapeRelId + off * 0., curveFactor);\\n  vec3 r1 = getCurvePoint(shapeRelId + off * 1., curveFactor);\\n  vec3 r2 = getCurvePoint(shapeRelId + off * 2., curveFactor);\\n  \\n  vec3 s0 = normalize(r1 - r0);\\n  vec3 s1 = normalize(r2 - r1);\\n  \\n  vec3 zaxis = normalize(s1 - s0);\\n  vec3 xaxis = normalize(cross(s0, s1));\\n  vec3 yaxis = normalize(cross(zaxis, xaxis));\\n  \\n  cubep = (vec4(cubep,1.)*scaleXYZ(1., 10., 1.)).xyz;\\n  \\n  mat4 wmat = mat4(\\n    vec4(xaxis, 0),\\n    vec4(yaxis, 0),\\n    vec4(zaxis, 0),\\n    vec4(r0 * expand, 1)); \\n  \\n    vec3 zax = vec3(0., 0., 1.);\\n  \\n    float dotz = dot(zax,zaxis);\\n    float angle = acos(dot(zax,zaxis));\\n    //cubep = rotX(cubep.xyz, acos(dot(vec3(1., 0., 0.),xaxis)));\\n    //cubep = rotY(cubep.xyz, acos(dot(vec3(0., 1., 0.),yaxis)));\\n    cubep = rotZ(cubep.xyz, time+acos(dot(zaxis, vec3(0., 0., 1.))));\\n   \\n    //cubep*= sizeFactor;//resize\\n    //cubep.xyz*= (wmat*vec4(cubep,1.)).xyz;\\n  \\n\\n  //cubep+=r0;\\n   cubep+= getCurvePoint(shapeRelId, curveFactor) ;\\n  \\n    //cubep = vec3(cubep.x+xPos, cubep.y+sndFactor*snd, cubep.z+lineId*patternSize +mod(time*speedFactor,patternSize));//position\\n    //vec3 eye = vec3(0.5, 0.5, 1.5);\\n    //vec3 eye = vec3(2.5+sin(time/1.3)/4., 2.5+sin(time/1.)/4., 2.5*cos(time/5.));\\n    //vec3 eye = vec3(sin(time/1.3), sin(time/1.), 0.5);//29./2.*abs(cos(time/5.))\\n    vec3 eye = vec3(2., 1., 2.5);//29./2.*abs(cos(time/5.))\\n    vec3 color = shade(eye, cubep, cbNi.xyz, vec3(1.), 0.6, vec2(64.0, .8));\\n    \\n    vec3 p = lookAt(cubep, eye, vec3(0.5, 0.5, 0.), vec3(0.0, 01.0, 0.0));\\n    float aspect = resolution.y / resolution.x;\\n  \\n    gl_Position = perspective(p, 60.0, 0.1, 10.0, resolution);\\n    //gl_Position.x*=aspect;\\n    gl_PointSize = 2.;\\n  \\n    v_color = vec4(color, 1.0);\\n    //v_color.x = acc/10.;\\n    \\n}\\n\\n\\n\\n\"}",
  "screenshotURL": "data/images/images-rjfvhepw19lddi50p-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "4"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "4gauKmoaX8C8qaYPc"
}