{
  "_id": "2nczC2kx9JRxu64gA",
  "owner": {
    "username": "anon"
  },
  "createdAt": {
    "$date": 1471876033310
  },
  "modifiedAt": {
    "$date": 1471876033310
  },
  "origId": null,
  "name": "use-the-mic",
  "notes": "",
  "rank": 1.6582847792407542,
  "private": false,
  "unlisted": false,
  "username": "-anon-",
  "avatarUrl": "",
  "settings": {
    "num": 100000,
    "mode": "LINES",
    "sound": "mic",
    "lineSize": "CSS",
    "backgroundColor": [
      1,
      1,
      1,
      1
    ],
    "shader": "#define NUM_SEGMENTS 128.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n#define PI radians(180.)\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  float numLinesDown = floor(vertexCount / NUM_POINTS);\n  // produces 0,1, 1,2, 2,3, ...\n  float point = floor(mod(vertexId, NUM_POINTS) / 2.0) + mod(vertexId, 2.0);\n  // line count\n  float count = floor(vertexId / NUM_POINTS);\n\n  float u = point / NUM_SEGMENTS;  // 0 <-> 1 across line\n  float v = count / numLinesDown;  // 0 <-> 1 by line\n  float invV = 1.0 - v;\n\n  // Only use the left most 1/4th of the sound texture\n  // because there's no action on the right\n  float historyX = u * 0.25;\n  // Match each line to a specific row in the sound texture\n  float historyV = (v * numLinesDown + 0.5) / soundRes.y;\n  float snd = texture2D(sound, vec2(historyX, historyV * 0.5)).a;\n\n  float x = u * 2.0 - 1.0;\n  float y = invV;// * 2.0 - 1.0;\n  vec2 xy = vec2(\n      x * mix(0.5, 1.0, invV),\n      y + pow(snd, 1.0) * 1.0) ;\n  float a = (u * 2. - 1.) * PI + time * 0.1;// * invV * PI;//u * PI * .2 + time * 0. + v * 0. + snd;\n  float c = cos(a);\n  float s = sin(a);\n  mat2 mat = mat2(c, s, -s, c);\n  gl_Position = vec4(mat * (xy * 0.5), v, 1);\n\n  float s2 = 1. - pow(1. - snd, 5.);\n  float hue = sin(u * PI * 2.) * .0 + time * 0.;\n  float sat = s2;\n  float val = s2;\n  v_color = mix(vec4(hsv2rgb(vec3(hue, sat, val)), 1), background, 0.);\n  v_color.a = s2;\n  v_color.rgb *= v_color.a;\n}"
  },
  "screenshotURL": "data/images/images-13cjwj69rlsajd3xj-thumbnail.jpg",
  "hasSound": true,
  "views": 125,
  "likes": 0,
  "revisionId": "iioEnA6RMGHy5SJG7"
}