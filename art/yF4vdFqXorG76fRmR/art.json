{
  "_id": "yF4vdFqXorG76fRmR",
  "owner": {
    "_id": "TNSvjWziZHjvDzzGi",
    "createdAt": {
      "$date": {
        "$numberLong": "1705867568220"
      }
    },
    "profile": {
      "name": null,
      "avatarUrl": "https://avatars.githubusercontent.com/Rus-Abd?s=200"
    },
    "username": "rus-abd"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1705918303241"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1705918303241"
    }
  },
  "origId": null,
  "name": "unnamed",
  "notes": "",
  "rank": {
    "$numberDouble": "1.6360122076416415"
  },
  "private": false,
  "unlisted": true,
  "username": "rus-abd",
  "avatarUrl": "https://avatars.githubusercontent.com/Rus-Abd?s=200",
  "settings": "{\"num\":54954,\"mode\":\"POINTS\",\"sound\":\"https://soundcloud.com/joker-killer-535317309/timur-mutsuraev-izmena\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0.0196078431372549,0.0196078431372549,0.0196078431372549,1],\"shader\":\"\\nvec4 permute(vec4 x){return mod(((x*34.)+1.)*x,289.);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}\\n\\nfloat snoise(vec3 v){\\n    const vec2 C=vec2(1./6.,1./3.);\\n    const vec4 D=vec4(0.,.5,1.,2.);\\n    \\n    vec3 i=floor(v+dot(v,C.yyy));\\n    vec3 x0=v-i+dot(i,C.xxx);\\n    \\n    vec3 g=step(x0.yzx,x0.xyz);\\n    vec3 l=1.-g;\\n    vec3 i1=min(g.xyz,l.zxy);\\n    vec3 i2=max(g.xyz,l.zxy);\\n    \\n    vec3 x1=x0-i1+1.*C.xxx;\\n    vec3 x2=x0-i2+2.*C.xxx;\\n    vec3 x3=x0-1.+3.*C.xxx;\\n    \\n    i=mod(i,289.);\\n    vec4 p=permute(permute(permute(\\n                i.z+vec4(0.,i1.z,i2.z,1.))\\n                +i.y+vec4(0.,i1.y,i2.y,1.))\\n                +i.x+vec4(0.,i1.x,i2.x,1.));\\n                \\n                float n_=1./7.;\\n                vec3 ns=n_*D.wyz-D.xzx;\\n                \\n                vec4 j=p-49.*floor(p*ns.z*ns.z);\\n                \\n                vec4 x_=floor(j*ns.z);\\n                vec4 y_=floor(j-7.*x_);\\n                \\n                vec4 x=x_*ns.x+ns.yyyy;\\n                vec4 y=y_*ns.x+ns.yyyy;\\n                vec4 h=1.-abs(x)-abs(y);\\n                \\n                vec4 b0=vec4(x.xy,y.xy);\\n                vec4 b1=vec4(x.zw,y.zw);\\n                \\n                vec4 s0=floor(b0)*2.+1.;\\n                vec4 s1=floor(b1)*2.+1.;\\n                vec4 sh=-step(h,vec4(0.));\\n                \\n                vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\\n                vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\\n                \\n                vec3 p0=vec3(a0.xy,h.x);\\n                vec3 p1=vec3(a0.zw,h.y);\\n                vec3 p2=vec3(a1.xy,h.z);\\n                vec3 p3=vec3(a1.zw,h.w);\\n                \\n                vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\\n                p0*=norm.x;\\n                p1*=norm.y;\\n                p2*=norm.z;\\n                p3*=norm.w;\\n                \\n                vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\\n                m=m*m;\\n                return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),\\n                dot(p2,x2),dot(p3,x3)));\\n            }\\n            \\n            vec3 snoiseVec3(vec3 x){\\n                \\n                float s=snoise(vec3(x));\\n                float s1=snoise(vec3(x.y-19.1,x.z+33.4,x.x+47.2));\\n                float s2=snoise(vec3(x.z+74.2,x.x-124.5,x.y+99.4));\\n                vec3 c=vec3(s,s1,s2);\\n                return c;\\n                \\n            }\\n            \\n            vec3 curlNoise(vec3 p){\\n                \\n                const float e=.1;\\n                vec3 dx=vec3(e,0.,0.);\\n                vec3 dy=vec3(0.,e,0.);\\n                vec3 dz=vec3(0.,0.,e);\\n                \\n                vec3 p_x0=snoiseVec3(p-dx);\\n                vec3 p_x1=snoiseVec3(p+dx);\\n                vec3 p_y0=snoiseVec3(p-dy);\\n                vec3 p_y1=snoiseVec3(p+dy);\\n                vec3 p_z0=snoiseVec3(p-dz);\\n                vec3 p_z1=snoiseVec3(p+dz);\\n                \\n                float x=p_y1.z-p_y0.z-p_z1.y+p_z0.y;\\n                float y=p_z1.x-p_z0.x-p_x1.z+p_x0.z;\\n                float z=p_x1.y-p_x0.y-p_y1.x+p_y0.x;\\n                \\n                const float divisor=1./(3.*e);\\n                return normalize(vec3(x,y,z)*divisor);\\n                \\n            }\\n\\nvec2 getPosition(){\\n  \\tfloat down = floor(sqrt(vertexCount));\\n  \\tfloat across = floor(vertexCount/down);\\n  \\n  \\tfloat x = mod(vertexId,across);\\n  \\tfloat y = floor(vertexId/across);\\n  \\n    float u = x / (across-1.);\\n    float v = y / (across-1.);\\n  \\n  \\tvec2 res = (vec2(u,v) - .5) *2.;\\n\\treturn vec2(res);\\n}\\n\\nvoid main() {\\n  \\n  vec3 position = vec3(getPosition(),.1);\\n  \\n  float theta = 3.1415*time;\\n  \\n  //position.y = sin(theta+position.x)/2.;\\n  vec3 curlPosition = vec3(mod(position.x,1.),position.y+time/31.,position.y);\\n  position = curlNoise(curlPosition);\\n\\n\\n \\n  gl_PointSize = 2. * (1.)*600./resolution.x;\\n  \\n  \\n  \\n  \\n   gl_Position =  vec4(position,1.);\\n   v_color = vec4(1.,0.,0.,1.);\\n}\"}",
  "screenshotURL": "data/images/images-0b5tshfd5rx5p5b42-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "1"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "6LYztj4jMbyuFHrW2"
}