{
  "_id": "ewJGvmyLg4AN7sTJA",
  "owner": {
    "_id": "8YazjgbR8FtHJgYgR",
    "createdAt": {
      "$date": {
        "$numberLong": "1689266555980"
      }
    },
    "username": "ersh",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/a55f941068214979f79e0d64d5062a5d?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1689303550229"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1689303550229"
    }
  },
  "origId": "kAANx8FwJoSeR9B4c",
  "name": "filters test",
  "notes": "",
  "rank": {
    "$numberDouble": "1.6207757737111737"
  },
  "private": false,
  "unlisted": true,
  "username": "ersh",
  "avatarUrl": "https://secure.gravatar.com/avatar/a55f941068214979f79e0d64d5062a5d?default=retro&size=200",
  "settings": "{\"num\":1024,\"mode\":\"LINES\",\"sound\":\"https://soundcloud.com/yuriy-ershov/mix-2023-06-12\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"//test\\n\\n#define NUM_SEGMENTS 128.0\\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\\n#define STEP 1.0\\n#define NUM_LINES_DOWN 4.0\\n\\nvec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nfloat select(float v, float t) {\\n  return step(t * 0.9, v) * step(v, t * 1.1);\\n}\\n\\nvoid main() {\\n  // produces 0,1, 1,2, 2,3, ...\\n  float point = floor(mod(vertexId, NUM_POINTS) / 2.0) + mod(vertexId, 2.0) * STEP;\\n  // line count\\n  float count = floor(vertexId / NUM_POINTS);\\n\\n  float u = point / NUM_SEGMENTS;    // 0 <-> 1 across line\\n  float v = count / NUM_LINES_DOWN;  // 0 <-> 1 by line\\n  float invV = 1.0 - v;\\n\\n  // Only use the left most 1/4th of the sound texture\\n  // because there's no action on the right\\n  float historyX = u * 0.25;\\n  // Match each line to a specific row in the sound texture\\n  float historyV  = (0. * NUM_LINES_DOWN + 0.5) / soundRes.y;\\n  float historyV2 = (1. * NUM_LINES_DOWN + 0.5) / soundRes.y;\\n  float snd = texture2D(sound, vec2(historyX, historyV)).a;\\n  float snd2 = texture2D(sound, vec2(historyX, historyV2)).a;\\n  \\n  float s_norm = select(count, 0.);\\n  float s_low  = select(count, 1.);\\n  float s_high = select(count, 2.);\\n  float s_powd = select(count, 3.);\\n  \\n  float ds   = abs(snd - snd2);\\n  float norm = snd;\\n  float low  = step(ds, 0.1) * snd;\\n  float high = step(0.1, ds) * snd;\\n  float powd = pow(snd, 5.0);\\n  \\n  float s = \\n    norm * s_norm + \\n    low  * s_low  +\\n    high * s_high + \\n    powd * s_powd +\\n    0.;\\n  \\n  float x = u * 2.0 - 1.0;\\n  float y = v * 2.0 - 1.0;\\n  vec2 xy = vec2(\\n      x,\\n      s * 0.2 + v - 0.3);\\n  gl_Position = vec4(xy, 0, 1);\\n\\n  float hue = count * 0.25;\\n  float sat = 1.0;\\n  float val = 1.0;\\n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\\n}\"}",
  "screenshotURL": "data/images/images-3gci3fvyqvi64wcw7-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "1"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "CFtvMfHuYnAqrYhFN"
}