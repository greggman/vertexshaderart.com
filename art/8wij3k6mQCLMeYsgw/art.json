{
  "_id": "8wij3k6mQCLMeYsgw",
  "owner": {
    "_id": "oCanjNxeHcQ7gDPmW",
    "createdAt": {
      "$date": {
        "$numberLong": "1505499213122"
      }
    },
    "profile": {
      "name": "Zug Zwang",
      "avatarUrl": "https://lh3.googleusercontent.com/-ic9UqwOeGYY/AAAAAAAAAAI/AAAAAAAAABU/vJK2D-kzm0k/photo.jpg"
    },
    "username": "zug"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1642075047484"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1642075047484"
    }
  },
  "origId": "w9fNQs5qa7s4CmEvg",
  "name": "WAVE guys",
  "notes": "",
  "rank": {
    "$numberDouble": "1.5560661456314122"
  },
  "private": false,
  "unlisted": false,
  "username": "zug",
  "avatarUrl": "https://lh3.googleusercontent.com/-ic9UqwOeGYY/AAAAAAAAAAI/AAAAAAAAABU/vJK2D-kzm0k/photo.jpg",
  "settings": "{\"num\":100000,\"mode\":\"POINTS\",\"sound\":\"\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"#define PI radians(180.)\\n#define NUM_SEGMENTS 4.0\\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\\n#define STEP 15.0\\n\\n//\\tClassic Perlin 3D Noise \\n//\\tby Stefan Gustavson\\n//\\nvec4 permute(vec4 x){return mod(((x*6.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n\\nfloat cnoise(vec3 P){\\n  vec3 Pi0 = floor(P); // Integer part for indexing\\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\\n  Pi0 = mod(Pi0, 289.0);\\n  Pi1 = mod(Pi1, 289.0);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 / 7.0;\\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.2) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 / 7.0;\\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \\n  return 2.2 * n_xyz;\\n}\\nvec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nmat4 rotX(float angle) {\\nfloat Snd =texture2D(sound,vec2(1)).a;\\n    float s = sin( angle );\\n    float c = cos( angle );\\n\\n    return mat4(\\n      1, 0, Snd, 0,\\n      0, c, s, 0,\\n      0,-s, c, 0,\\n      0, 0, 0, 1);\\n}\\n\\nmat4 rotY( float angle ) {\\n    float s = sin( angle );\\n    float c = cos( angle );\\n  \\t\\n    return mat4( \\n      c, 0,-s, 0,\\n      0, 1, 0, 0,\\n      s, 0, c, 0,\\n      0, 0, 0, 1);  \\n}\\n\\n\\nvoid main() {\\n  \\tfloat rows = floor(sqrt(vertexCount))+33.;\\n  \\tfloat cols = floor(vertexCount / rows)/33.;\\n  \\t// vertex ID is number of the vertex\\n  \\tfloat x = mod(vertexId, rows); // divide by 10 keep the remainder, \\n  \\tfloat y = floor(vertexId / rows); //. floor throws away the remainder 0000 1111 2222\\n\\n\\tfloat a = atan(x, y);\\n  \\n  \\tfloat s = sin(PI * time + y * 0.25);\\n  \\tfloat xOff = sin(PI * time * .125 + y * 0.015) * 0.5;\\n  \\tfloat yOff = cos(PI* time + x *.002* y * 0.333) * xOff;\\n  \\tfloat soff = cos(PI* time * .25 + x * y * 0.0005) * 0.25;\\n  float Snd =texture2D(sound,vec2(0)).a;\\n  \\tfloat u = x /(rows - 1.);\\n  \\tfloat v = y / (rows - 1.);\\n  \\tfloat ux = u * 2. - 1. + xOff;\\n  \\tfloat vy = v * 2. - 1. + yOff;\\n    vec4 pos = vec4(ux, vy, 0, 1);\\n  \\tvec3 n = vec3(cnoise(pos.xyz*.51));\\n  \\tpos.x += n.x*1.9762*sin(n.x+time);\\n  \\t//pos.y += n.y*.62;\\n  \\t//pos.z += n.z*.9762;\\n  \\t//pos*=rotY(PI*time*.125);\\n  \\t//pos*=rotX(PI*time*.0125);\\n\\tgl_Position = pos;\\n  \\tgl_PointSize = 5.0-pos.z;// - soff*sin(time*.001); \\n   \\n       float S =texture2D(volume,vec2(0)).a;\\n//  72.0 /Snd+cols; \\n  \\tgl_PointSize *= resolution.x / 33.-S; \\n    float hue = s;\\n    hue = smoothstep(x, y-S, xOff);\\n    float sat = v  * xOff;\\n    float val = u;\\nint  vertexCount =+ 36;\\n    vec4 color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\\n    color *= rotY(-PI * soff);\\n    //background += 0.1;\\n    vec4 finalColor = mix(color, background, s);\\n\\n    v_color = finalColor;\\n  }\"}",
  "screenshotURL": "data/images/images-68xxgigumfvm0qyrg-thumbnail.jpg",
  "hasSound": "",
  "views": {
    "$numberInt": "212"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "m5zYgJ5sW37kq8wNk"
}