{
  "_id": "YzsRADN9oob3PHivP",
  "owner": {
    "_id": "ae4gC3FWQR5veXTKq",
    "createdAt": {
      "$date": {
        "$numberLong": "1684210422037"
      }
    },
    "username": "w.chae",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/e33886e1d2ddd9c8199ae2b5bbb15df9?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1684940441735"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1684942221942"
    }
  },
  "origId": null,
  "name": "AudioReactive",
  "notes": "AudioReactive",
  "rank": {
    "$numberDouble": "1.9422001241854796"
  },
  "private": false,
  "unlisted": true,
  "username": "w.chae",
  "avatarUrl": "https://secure.gravatar.com/avatar/e33886e1d2ddd9c8199ae2b5bbb15df9?default=retro&size=200",
  "settings": "{\"num\":16384,\"mode\":\"POINTS\",\"sound\":\"https://soundcloud.com/user-932548637/imase-night-dancer\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"// Wonhyeong Chae\\n// Exercise AudioReactive\\n// CS250 Spring 2022\\n\\n#define PI radians(180.0)\\n\\nvoid main() {\\n  float down = floor(sqrt(vertexCount));\\n  float across = floor(vertexCount / down);\\n\\n  float x = mod(vertexId, across);\\n  float y = floor(vertexId / across);\\n\\n  float centerX = (across - 1.) / 2.0;\\n  float centerY = (down - 1.) / 2.0;\\n\\n  float xOffset = x - centerX;\\n  float yOffset = y - centerY;\\n\\n  float normalizedX = xOffset / centerX;\\n  float normalizedY = yOffset / centerY;\\n\\n  float spread = 0.5;\\n  float spreadX = normalizedX * spread;\\n  float spreadY = normalizedY * spread;\\n\\n  float u = (normalizedX + 1. + spreadX) / 2.;\\n  float v = (normalizedY + 1. + spreadY) / 2.;\\n\\n  float xoff = sin(time + y * 0.2) * 0.1;\\n  float yoff = sin(time + x * 0.3) * 0.2;\\n\\n  float ux = u * 2. - 1. + xoff;\\n  float vy = v * 2. - 1. + yoff;\\n  \\n  float su = abs(u - 0.5) * 2.;\\n  float sv = abs(v - 0.5) * 2.;\\n  float au = abs(atan(su, sv)) / PI;\\n  float av = length(vec2(su, sv));\\n  float snd = texture2D(sound, vec2(au * .05, av * .25)).a;\\n\\n  float angle = time * 0.5;\\n  float cosAngle = cos(angle);\\n  float sinAngle = sin(angle);\\n  float rotatedX = ux * cosAngle - vy * sinAngle;\\n  float rotatedY = ux * sinAngle + vy * cosAngle;\\n\\n  gl_Position = vec4(rotatedX, rotatedY, 0., 1.);\\n\\n  float soff = sin(time + x * y * 0.02) * 5.;\\n\\n  gl_PointSize = pow(snd + 0.2, 5.) * 30.0 + soff;\\n  gl_PointSize *= 20. / across;\\n  gl_PointSize *= resolution.x / 600.;\\n  \\n  float pump = step(0.8, snd);\\n  float colorModRed = u * .1 + snd * 0.2 + time * .1;\\n  float colorModGreen = mix(0., 1., pump);\\n  float colorModBlue = mix(.1, pow(snd + 0.2, 5.), pump);\\n\\n  v_color = vec4(colorModRed, colorModGreen, colorModBlue, 1.0);\\n}\\n\"}",
  "screenshotURL": "data/images/images-o7lxu55kyhi30lxek-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "6"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "T7JJ2ikWKPKoe6eLj"
}