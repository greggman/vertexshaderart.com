{
  "_id": "9tQdLKqdczvbu3Pp5",
  "owner": {
    "_id": "imKH8hHM6p6ZTmGEi",
    "createdAt": {
      "$date": 1448575381674
    },
    "username": "sap",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/bd1ffaa5c21bfd6fb5a36cfbb45b8fa6?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": 1448575532536
  },
  "modifiedAt": {
    "$date": 1448575532536
  },
  "origId": null,
  "name": "spiral",
  "rank": 1.897704889650796,
  "private": false,
  "username": "sap",
  "settings": {
    "num": 10000,
    "mode": "LINE_STRIP",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define TAU 6.28\n#define PI 3.145191\n\n#define MOD3 vec3(.1031,.11369,.13787)\n#define MOD4 vec4(.1031,.11369,.13787, .09987)\nfloat hash11(float p)\n{\n\tvec3 p3  = fract(vec3(p) * MOD3);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * MOD3);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat SmoothNoise(in vec2 o) \n{\n\tvec2 p = floor(o);\n\tvec2 f = fract(o);\n\t\t\n\tfloat n = p.x + p.y*57.0;\n\n\tfloat a = hash11(n+  0.0);\n\tfloat b = hash11(n+  1.0);\n\tfloat c = hash11(n+ 57.0);\n\tfloat d = hash11(n+ 58.0);\n\t\n\tvec2 f2 = f * f;\n\tvec2 f3 = f2 * f;\n\t\n\tvec2 t = 3.0 * f2 - 2.0 * f3;\n\t\n\tfloat u = t.x;\n\tfloat v = t.y;\n\n\tfloat res = a + (b-a)*u +(c-a)*v + (a-b+d-c)*u*v;\n    \n    return res;\n}\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  float n = vertexId / vertexCount;\n  float z = vertexId / 2000.;\n  \n  float m = pow (n, 1.12);\n  float k = 1. - m;\n  \n  vec2 p;\n\n  p = vec2(k * z  * 0.7 * cos(0.7 * PI + time) * cos(time), k * z * 0.3 * sin(time));\n  \n  vec2 d = 0.3*vec2(z * cos(vertexId * TAU * 0.0051), z * sin(vertexId * TAU * 0.0051));\n  p += d + d * 0.1 * SmoothNoise(d + vec2(time, time) + hash12(d) * 0.4);\n  \n  p.xy *= resolution.yy / resolution.xy; \n\n  gl_Position = vec4(p, 0., 1.);\n  \n  vec3 c = hsv2rgb(vec3(10. / 360. * time,mix(.6, 1., m), m));\n \n  v_color = vec4(c,1);\n}"
  },
  "screenshotURL": "data/images/images-1264nzzay2lndrqku-thumbnail.jpg",
  "hasSound": "",
  "views": 153,
  "likes": 1,
  "revisionId": "yqZP4tkbQd3werNEh",
  "avatarUrl": "https://secure.gravatar.com/avatar/bd1ffaa5c21bfd6fb5a36cfbb45b8fa6?default=retro&size=200"
}