{
  "_id": "E8jpSws9ybhazxoiu",
  "owner": {
    "_id": "nGxcqKNjk2qCgadmc",
    "createdAt": {
      "$date": {
        "$numberLong": "1684074736476"
      }
    },
    "username": "joonho.hwang",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/71946ad0898d0a3558af0dc283a4b9c2?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1684747255816"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1684747255816"
    }
  },
  "origId": null,
  "name": "Audio Reactive Art",
  "notes": "",
  "rank": {
    "$numberDouble": "1.3233515735089718"
  },
  "private": false,
  "unlisted": true,
  "username": "joonho.hwang",
  "avatarUrl": "https://secure.gravatar.com/avatar/71946ad0898d0a3558af0dc283a4b9c2?default=retro&size=200",
  "settings": {
    "num": 1032,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/chibi-tech/lolitazia-season",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "// Joonho Hwang\n// Exercise Audio Reactive\n// CS250 Spring 2022\n\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nconst float PI = 3.14159265358979;\n\nvoid main()\n{\n  float down = floor(sqrt(vertexCount));\n  float across = floor(vertexCount / down);\n  \n  float x = mod(vertexId, across);\n  float y = floor(vertexId / across);\n  \n  float u = x / (across - 1.0);\n  float v = y / (across - 1.0);\n  \n  float xOffset = 0.0;\n  float yOffset = 0.0;\n  \n  float ux = u * 2.0 - 1.0 + xOffset;\n  float vy = v * 2.0 - 1.0 + yOffset;\n  \n  vec2 xy = vec2(ux, vy) * 1.3;\n  \n  float su = abs(u - 0.5) * 2.0;\n  float sv = abs(v - 0.5) * 2.0;\n  float au = abs(atan(su, sv)) / PI;\n  float av = length(vec2(su, sv));\n  float snd = texture2D(sound, vec2(au * 0.05, av * 0.25)).a;\n  \n  gl_Position = vec4(xy, 0.0, 1.0);\n  \n  float sizeOffset = 0.0;\n  \n  gl_PointSize = pow(snd + 0.2, 5.0) * 30.0 + sizeOffset;\n  gl_PointSize *= 20.0 / across;\n  gl_PointSize *= resolution.x / 600.0;\n  \n  float pump = step(0.8, snd);\n  \n  float hue = u * 0.1 + snd * 0.2 + time * 0.1;\n  float saturation = mix(0.0, 1.0, pump);\n  float value = mix(0.1, pow(snd + 0.2, 5.0), pump);\n  \n  \n  v_color = vec4(hsv2rgb(vec3(hue, saturation, value)), 1);\n}"
  },
  "screenshotURL": "data/images/images-7lf4gzqejwh67pdip-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "10"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "6v4t5dHEs6jYfEi2G"
}