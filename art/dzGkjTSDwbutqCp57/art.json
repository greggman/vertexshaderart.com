{
  "_id": "dzGkjTSDwbutqCp57",
  "owner": {
    "_id": "jFsYmxkBNAJNvJFDm",
    "createdAt": {
      "$date": {
        "$numberLong": "1684263955851"
      }
    },
    "username": "hyojoonkim0020",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/cefe773094bef8b88aa9bc719abe4874?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1685544786858"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1685544786858"
    }
  },
  "origId": "aHPn3XMX6j7TP3D8i",
  "name": "Circles from Triangles-hyjoonKim",
  "notes": "",
  "rank": {
    "$numberDouble": "1.2263066002244007"
  },
  "private": false,
  "unlisted": true,
  "username": "hyojoonkim0020",
  "avatarUrl": "https://secure.gravatar.com/avatar/cefe773094bef8b88aa9bc719abe4874?default=retro&size=200",
  "settings": {
    "num": 15989,
    "mode": "TRIANGLES",
    "sound": "https://soundcloud.com/graham-panter/fly-by-light",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "//hyojoon kim\n//Circles from Triangles\n//cs250\n//spring 2023\n\n\n\n\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n#define PI radians(180.0)\n\n\n\nmat4 rotZ(float angleInRadians) {\n    float s = sin(angleInRadians);\n    float c = cos(angleInRadians);\n  \t\n    return mat4( \n      c,-s, 0, 0, \n      s, c, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1); \n}\n\n\nmat4 trans(vec3 trans) {\n  return mat4(\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    trans, 1);\n}\n\nmat4 ident() {\n  return mat4(\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1);\n}\n\nmat4 scale(vec3 s) {\n  return mat4(\n    s[0], 0, 0, 0,\n    0, s[1], 0, 0,\n    0, 0, s[2], 0,\n    0, 0, 0, 1);\n}\n\n\nmat4 uniformScale(float s) {\n  return mat4(\n    s, 0, 0, 0,\n    0, s, 0, 0,\n    0, 0, s, 0,\n    0, 0, 0, 1);\n}\n\n\nvec2 getCirclePoint(float id, float numCircleSegments) {\n  \n  \n  \tfloat ux = floor(id /6.) + mod(id,2.);\n  \tfloat vy = mod( floor(id/2.) + floor(id /3.),2.);\n \n  \n  \tfloat angle = ux / numCircleSegments * PI * 2.;\n  \tfloat c = cos(angle);\n  \tfloat s = sin(angle);\n  \n  \tfloat radius = vy + 1.;\n  \n  \tfloat x = c * radius;\n  \tfloat y = s * radius;\n  \n  \n \treturn vec2(x,y);\n\n\n  \n}\n\n\nvoid main() {\n  \n  float numCircleSegments = 12.;\n  vec2 circleXY = getCirclePoint(vertexId, numCircleSegments);\n  \n  \n  \n  float numPointsPerCircle = numCircleSegments * 6.;\n  float circleId = floor(vertexId / numPointsPerCircle);\n  float numCircles = floor(vertexCount / numPointsPerCircle);\n  \n  \n  float sliceId = floor(vertexId /6.0);\n  float oddSlice =- mod(sliceId, 2.);\n  \n  \n  float down = sqrt(numCircles);\n  float across = floor(numCircles / down);\n  float x = mod(circleId, across);\n  float y = floor(circleId / across);\n  \n  float u = x / (across - 1.);\n  float v = y / (across - 1.);\n  \n  float su = abs(u - 0.5) * 2.;\n  float sv = abs(v - 0.5) * 2.;\n  \n  float au = abs(atan(su, sv)) / PI;\n  float av = length(vec2(su, sv));\n  \n  float snd = texture2D(sound, vec2(au * 0.05, av * .25)).a;\n\n  float xoff = sin(time + y * 0.2) * 0.1;\n  float yoff = sin(time + x * 0.3) * 0.2;\n  \n  float ux = u * 2. - 1. + xoff;\n  float vy = v * 2. - 1. + yoff;\n  \n  float aspect = resolution.x / resolution.y;\n  float sc = pow(snd+ 0.2 ,5.) * mix(1. , 1.1 , oddSlice );\n  \n  sc*= 25. / across;\n  \n    \n  vec4 pos = vec4(circleXY+ sliceId/60. *0.05,0,1);\n  mat4 mat = ident();\n  mat *= scale(vec3(1,aspect,1));\n  mat *= rotZ(time *0.1);\n  mat *= trans(vec3(ux,vy,0) * 1.3);\n  mat *= rotZ(snd * 20. * sign(ux));\n  mat *= uniformScale(0.03*sc);\n  \n  \n\n  \n  \n  gl_Position = mat * pos;\n  \n  float soff = 1.;//sin(time + x * y * .02) * 5.;  \n  gl_PointSize = pow(snd + 0.2, 5.0) * 30.0 + soff;\n  gl_PointSize *= 20.0 / across;\n  gl_PointSize *= resolution.x / 600.0;\n  \n  float pump = step(0.8, snd);\n  \n  float hue = u * .1 + snd * 0.2 + time * .1 + sliceId * 0.1; //sin(time + v * 20.) * .05;\n  float sat =  mix(0.5, 1., pump);\n  float val = mix(.4, pow(snd + 0.2, 5.0), pump);\n  \n  \n  hue = hue +pump * oddSlice * 0.5 + pump * 0.33;\n  val += oddSlice * pump;\n  \n  \n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\n}\n"
  },
  "screenshotURL": "data/images/images-4iqv8z2kkavbf68yl-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "4"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "LBvqfCX9Ru8ifp6Zz"
}