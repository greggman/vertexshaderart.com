{
  "_id": "mmB8umNE8t5qoNNJo",
  "owner": {
    "_id": "CJtPPYNFXinj2EC2b",
    "createdAt": {
      "$date": {
        "$numberLong": "1652841467004"
      }
    },
    "username": "seongwon.jang",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/fc6292437035d0a96160cdb27eb0a6dd?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1653958333890"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1653958968052"
    }
  },
  "origId": "3hco2ocM6as2y3HNr",
  "name": "Circle From Triangle",
  "notes": "",
  "rank": {
    "$numberDouble": "1.2333982851914327"
  },
  "private": false,
  "unlisted": true,
  "username": "seongwon.jang",
  "avatarUrl": "https://secure.gravatar.com/avatar/fc6292437035d0a96160cdb27eb0a6dd?default=retro&size=200",
  "settings": "{\"num\":39377,\"mode\":\"TRIANGLES\",\"sound\":\"https://soundcloud.com/graham-panter/fly-by-light\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0.1450980392156863,0.08627450980392157,0.41568627450980394,1],\"shader\":\"/*\\nSeongwon Jang\\ncs250\\ncolor\\n2022 spring\\n*/\\n\\nvec3 hsv2rgb(vec3 c)\\n{\\n\\tc = vec3(c.x,clamp(c.yz,0.0,1.0));\\n  vec4 k = vec4(1.0,2.0/3.0,1.0/3.0,3.0);\\n  vec3 p = abs(fract(c.xxx+k.xyz)* 6.0 - k.www);\\n  return c.z * mix(k.xxx,clamp(p-k.xxx,0.0,1.0),c.y);\\n\\n}\\n\\nmat4 rotZ(float angleInRadians) {\\n    float s = sin(angleInRadians);\\n    float c = cos(angleInRadians);\\n  \\t\\n    return mat4( \\n      c,-s, 0, 0, \\n      s, c, 0, 0,\\n      0, 0, 1, 0,\\n      0, 0, 0, 1); \\n}\\n\\nmat4 trans(vec3 trans) {\\n  return mat4(\\n    1, 0, 0, 0,\\n    0, 1, 0, 0,\\n    0, 0, 1, 0,\\n    trans, 1);\\n}\\n\\nmat4 ident() {\\n  return mat4(\\n    1, 0, 0, 0,\\n    0, 1, 0, 0,\\n    0, 0, 1, 0,\\n    0, 0, 0, 1);\\n}\\n\\nmat4 scale(vec3 s) {\\n  return mat4(\\n    s[0], 0, 0, 0,\\n    0, s[1], 0, 0,\\n    0, 0, s[2], 0,\\n    0, 0, 0, 1);\\n}\\n\\nmat4 uniformScale(float s) {\\n  return mat4(\\n    s, 0, 0, 0,\\n    0, s, 0, 0,\\n    0, 0, s, 0,\\n    0, 0, 0, 1);\\n}\\n\\n#define PI radians(180.0)\\n\\nvec2 getCirclePoint(float id, float numCircleSegments) {\\n\\n  float ux = floor(id / 6.) +  mod(id,2.);\\n  \\n  float vy = mod(floor(id/2.) + floor(id/3.),2.);\\n  \\n  float angle = ux / numCircleSegments * PI * 2.;\\n  float c = cos(angle);\\n  float s = sin(angle);\\n  float radius = vy + 1.;\\n  \\n   float x = c * radius;\\n  float y = s * radius;\\n  \\n  return vec2(x,y);\\n  \\n\\n}\\n\\nvoid main() {\\n  float numCircleSegments = 12.;\\n  vec2 circleXY = getCirclePoint(vertexId,numCircleSegments);\\n  \\n  float numPointsPerCircle = numCircleSegments * 6.;\\n  float circleId = floor(vertexId/numPointsPerCircle);\\n  float numCircles = floor(vertexCount / numPointsPerCircle);\\n  \\n  float sliceId = floor(vertexId/ 6.0);\\n  float oddSlice = mod(sliceId,2.);\\n  \\n  float down = floor(sqrt(numCircles));\\n  float across = floor(numCircles / down);\\n  \\n  float x = mod(circleId, across);\\n  float y = floor(circleId / across);\\n  \\n  float u = x / (across - 1.);\\n  float v = y / (across - 1.);\\n\\n  float xoff = 0.;// sin(time + y * 0.2) * 0.1;\\n  float yoff = 0.;//sin(time + x * 0.3) * 0.2;\\n  \\n  float ux = u * 2. - 1. + xoff;\\n  float vy = v * 2. - 1. + yoff;\\n\\n  float su = abs(u - 0.5) * 2.;\\n  float sv = abs(v - 0.5) * 2.;\\n  float au = abs(atan(su,sv)) / PI;\\n  float av = length(vec2(su,sv));\\n  float snd = texture2D(sound, vec2(au * .05,av *.25)).a;\\n  \\n  float aspect = resolution.x / resolution.y;\\n  float sc = pow(snd + 0.2,5.) * mix(1.0,1.1,oddSlice);\\n  sc *= 20. / across;\\n  \\n  vec4 pos = vec4(circleXY,0,1);\\n  mat4 mat = ident();\\n \\n  mat *= scale(vec3(1,aspect,1));\\n   mat *= rotZ((time * 0.1));\\n  mat *= trans(vec3(ux,vy,0));\\n  mat *= rotZ(snd * 20.0 * sign(ux));\\n  mat *= uniformScale(0.03 * sc);\\n  \\n  vec2 xy = circleXY * 0.1 * sc + vec2(ux,vy) * 1.3;\\n  \\n \\n  gl_Position = mat * pos;\\n\\n  float soff = 0.;// sin(time + x* y* 0.02) * 5.;\\n\\n\\n  float pump = step(0.8,snd);\\n  float hue = u * .1 + snd * 0.2 + time * 0.1 + sliceId * 0.01;//+ sin(time + v * 20.) * 0.05;\\n  float sat = 1.;mix(0.5,1.,pump);\\n  float val = mix(.4,pow(snd + 0.2,5.),pump);// sin(time * 1.4 + v*u*20.0)*.5+.5;\\n  \\n  hue = hue + pump * oddSlice * 0.5 + pump * 0.33;\\n  val += oddSlice * pump;\\n  \\n  \\n  v_color = vec4(hsv2rgb(vec3(hue,sat,val)), 1);\\n}\\n\"}",
  "screenshotURL": "data/images/images-3ncxh97tjoyi01wu4-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "6"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "qGaEpcmLxyjmhmSQf"
}