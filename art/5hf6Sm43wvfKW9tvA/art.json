{
  "_id": "5hf6Sm43wvfKW9tvA",
  "owner": {
    "_id": "QDz3Y5ub4T9bwkhXT",
    "createdAt": {
      "$date": "1590717528473"
    },
    "username": "cjensen93",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/0df4239ac208a0c9696c1edd2e895cee?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": "1590724281531"
  },
  "modifiedAt": {
    "$date": "1590724281531"
  },
  "origId": "hppyeGQduA2gx5GYx",
  "name": "Sound Reactive End",
  "notes": "Sound Reactive Advanced",
  "rank": "1.5848465574770954",
  "private": false,
  "unlisted": true,
  "username": "cjensen93",
  "avatarUrl": "https://secure.gravatar.com/avatar/0df4239ac208a0c9696c1edd2e895cee?default=retro&size=200",
  "settings": {
    "num": 1000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/100gecs/gec-2-ue-remix-feat-dorian",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "vec3 hsv2rgb(vec3 c){\n\tc = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  \tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  \tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  \treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n\n}\n\n\nvoid main(){\n  \n  #define PI 3.14159265;\n  \n  float down = floor(sqrt(vertexCount));\n  float across = floor(vertexCount / down);\n  \n  float x = mod(vertexId, across);\n  float y = floor(vertexId / across);\n    \n  float u = x / (across - 1.0);\n  float v = y / (across - 1.0);\n  \n  float xOff = 0.;//sin(time + y * 0.2) * 0.1;\n  float yOff = 0.;//sin(time + x * 0.3) * 0.2;\n\n  float ux = u * 2.0 - 1.0 + xOff;\n  float uy = v * 2.0 - 1.0 + yOff;\n  \n  \n  vec2 xy = vec2(ux, uy) * 1.3;\n  \n  \n  float su = abs(u - 0.5) * 2.0;\n  float sv = abs(v - 0.5) * 2.0;\n  float angleV = length(vec2(su, sv));\n  float angleU = abs(atan(su, sv)) / PI;\n  // changes y value from center\n  //float sound = texture2D(sound, vec2(u * 0.125, sv * 0.125)).a;\n  \n  //Changes x value from center\n  //float sound = texture2D(sound, vec2(su * 0.125, 0.0)).a;\n                     \n  float sound = texture2D(sound, vec2(angleU * 0.125, angleV * 0.125)).a;\n\n  \n  gl_Position = vec4(xy,0.0,1.0);\n  \n  float sOff =0.;// sin(time + x * y * 0.02) * 5.0;\n  \n  gl_PointSize = pow(sound, 5.0) * 30.0 + sOff;\n  gl_PointSize *= 20.0 / across;\n  gl_PointSize *= resolution.x / 600.0;\n  \n  float pump = step(0.7, sound);\n  \n  float hue = u * 0.1 + sound * 0.4 + time * 0.1;\n  float sat = mix(0.0, 1.0, pump);//mix(1.0, 0.0, angleV);\n  float value = mix(0.1, pow(sound + 0.2, 5.0), pump);//sin(time + v * u * 20.0) * 0.5 + 0.5;\n  \n  v_color = vec4(hsv2rgb(vec3(hue, sat, value)), 1.0);\n}"
  },
  "screenshotURL": "data/images/images-tyk8ju4um3dnol4rk-thumbnail.jpg",
  "hasSound": true,
  "views": "5",
  "likes": "0",
  "revisionId": "jiGKgFdJiRretbcWJ"
}