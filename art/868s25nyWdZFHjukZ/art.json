{
  "_id": "868s25nyWdZFHjukZ",
  "owner": {
    "_id": "nTRyF676q3L6AsYmq",
    "createdAt": {
      "$date": {
        "$numberLong": "1652847165974"
      }
    },
    "profile": {
      "name": "Hyunjin-Kim",
      "avatarUrl": "https://avatars.githubusercontent.com/Hyunjin-Kim-DP?s=200"
    },
    "username": "hyunjin-kim-dp"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1653459972189"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1653460077988"
    }
  },
  "origId": null,
  "name": "Exercise - Audio Reactive",
  "notes": "",
  "rank": {
    "$numberDouble": "1.058768364241539"
  },
  "private": false,
  "unlisted": true,
  "username": "hyunjin-kim-dp",
  "avatarUrl": "https://avatars.githubusercontent.com/Hyunjin-Kim-DP?s=200",
  "settings": {
    "num": 20000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/graham-panter/fly-by-light",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "\n\n// hyunjin Kim\n// cs250 exercise - Audio Reactive\n// spring 2022\n\n// from: http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n#define PI radians(180.0)\n\nvoid main() {\n  float down = sqrt(vertexCount);\n  float across = floor(vertexCount / down);\n  float x = mod(vertexId, across);\n  float y = floor(vertexId / across);\n  \n  float u = x / (across - 1.);\n  float v = y / (across - 1.);\n  \n  float su = abs(u - 0.5) * 2.;\n  float sv = abs(v - 0.5) * 2.;\n  \n  float au = abs(atan(su, sv)) / PI;\n  float av = length(vec2(su, sv));\n  \n  float snd = texture2D(sound, vec2(au * 0.05, av * .25)).a;\n\n  float xoff = 0.;//sin(time + y * 0.2) * 0.1;\n  float yoff = 0.;//sin(time + x * 0.3) * 0.2;\n  \n  float ux = u * 2. - 1. + xoff;\n  float vy = v * 2. - 1. + yoff;\n  \n  vec2 xy = vec2(ux, vy) * 1.3;\n  \n  gl_Position = vec4(xy, 0, 1);\n  \n  float soff = 1.;//sin(time + x * y * .02) * 5.;  \n  gl_PointSize = pow(snd + 0.2, 5.0) * 30.0 + soff;\n  gl_PointSize *= 20.0 / across;\n  gl_PointSize *= resolution.x / 600.0;\n  \n  float oh = step(0.8, snd);\n  \n  float hue = u * .1 + snd * 0.2 + time * .1; //sin(time + v * 20.) * .05;\n  float sat = mix(0., 1., oh);\n  float val = mix(.1, pow(snd + 0.2, 5.0), oh);\n  \n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\n}"
  },
  "screenshotURL": "data/images/images-bq7wgk8kja3kei3vi-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "4"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "3rrBd7S7rpiGFTG3Z"
}