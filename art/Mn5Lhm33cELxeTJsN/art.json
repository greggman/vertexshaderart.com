{
  "_id": "Mn5Lhm33cELxeTJsN",
  "owner": {
    "_id": "buw2QswjyuzF5R3Z7",
    "createdAt": {
      "$date": {
        "$numberLong": "1643991359601"
      }
    },
    "profile": {
      "name": null,
      "avatarUrl": "https://avatars.githubusercontent.com/orange4glace?s=200"
    },
    "username": "orange4glace"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1643991446311"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1643993711872"
    }
  },
  "origId": null,
  "name": "Spiral",
  "notes": "",
  "rank": {
    "$numberDouble": "1.7771652157298223"
  },
  "private": false,
  "unlisted": true,
  "username": "orange4glace",
  "avatarUrl": "https://avatars.githubusercontent.com/orange4glace?s=200",
  "settings": {
    "num": 800,
    "mode": "POINTS",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0.0784313725490196,
      0.0784313725490196,
      0.0784313725490196,
      1
    ],
    "shader": "#define EXP 2.718\n#define PI 3.1415926535897932\n\n\nmat4 persp(float fov, float aspect, float zNear, float zFar) {\n  float f = tan(PI * 0.5 - 0.5 * fov);\n  float rangeInv = 1.0 / (zNear - zFar);\n\n  return mat4(\n    f / aspect, 0, 0, 0,\n    0, f, 0, 0,\n    0, 0, (zNear + zFar) * rangeInv, -1,\n    0, 0, zNear * zFar * rangeInv * 2., 0);\n}\n\nmat4 lookAt(vec3 eye, vec3 target, vec3 up) {\n  vec3 zAxis = normalize(eye - target);\n  vec3 xAxis = normalize(cross(up, zAxis));\n  vec3 yAxis = cross(zAxis, xAxis);\n\n  return mat4(\n    xAxis, 0,\n    yAxis, 0,\n    zAxis, 0,\n    eye, 1);\n}\n\nmat4 inverse(mat4 m) {\n  float\n      a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n      a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n      a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n      a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\n\n      b00 = a00 * a11 - a01 * a10,\n      b01 = a00 * a12 - a02 * a10,\n      b02 = a00 * a13 - a03 * a10,\n      b03 = a01 * a12 - a02 * a11,\n      b04 = a01 * a13 - a03 * a11,\n      b05 = a02 * a13 - a03 * a12,\n      b06 = a20 * a31 - a21 * a30,\n      b07 = a20 * a32 - a22 * a30,\n      b08 = a20 * a33 - a23 * a30,\n      b09 = a21 * a32 - a22 * a31,\n      b10 = a21 * a33 - a23 * a31,\n      b11 = a22 * a33 - a23 * a32,\n\n      det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  return mat4(\n      a11 * b11 - a12 * b10 + a13 * b09,\n      a02 * b10 - a01 * b11 - a03 * b09,\n      a31 * b05 - a32 * b04 + a33 * b03,\n      a22 * b04 - a21 * b05 - a23 * b03,\n      a12 * b08 - a10 * b11 - a13 * b07,\n      a00 * b11 - a02 * b08 + a03 * b07,\n      a32 * b02 - a30 * b05 - a33 * b01,\n      a20 * b05 - a22 * b02 + a23 * b01,\n      a10 * b10 - a11 * b08 + a13 * b06,\n      a01 * b08 - a00 * b10 - a03 * b06,\n      a30 * b04 - a31 * b02 + a33 * b00,\n      a21 * b02 - a20 * b04 - a23 * b00,\n      a11 * b07 - a10 * b09 - a12 * b06,\n      a00 * b09 - a01 * b07 + a02 * b06,\n      a31 * b01 - a30 * b03 - a32 * b00,\n      a20 * b03 - a21 * b01 + a22 * b00) / det;\n  \n}\n\nmat4 cameraLookAt(vec3 eye, vec3 target, vec3 up) {\n  #if 1\n  return inverse(lookAt(eye, target, up));\n  #else\n  vec3 zAxis = normalize(target - eye);\n  vec3 xAxis = normalize(cross(up, zAxis));\n  vec3 yAxis = cross(zAxis, xAxis);\n\n  return mat4(\n    xAxis, 0,\n    yAxis, 0,\n    zAxis, 0,\n    -dot(xAxis, eye), -dot(yAxis, eye), -dot(zAxis, eye), 1);  \n  #endif\n  \n}\n\nfloat spiral(float x) {\n  return pow(EXP, -0.1 * x);\n}\n\nvoid main() {\n  float t = (PI * 8.) * (vertexId / vertexCount);\n  float x = 0.5 * pow(EXP, 0.15 * t) * cos(2. * t);\n  float y = 0.5 * pow(EXP, 0.15 * t) * sin(2. * t);\n  float z = 0.5 * pow(EXP, 0.15 * t);\n  vec3 pos = vec3(x, y, z) / (PI * 8.);\n  \n  float tm = time * .5;\n  float rd = 3.;\n  mat4 mat = persp(PI * 0.25, resolution.x / resolution.y, 0.1, 100.);\n  vec3 eye = vec3(\n    cos(tm) * rd,\n    cos(tm) * rd,\n    sin(tm) * rd\n  );\n  vec3 target = vec3(0);\n  vec3 up = vec3(0,1,0);\n  \n  mat *= cameraLookAt(eye, target, up);  \n  \n  gl_Position = mat * vec4(pos, 1.0);\n  gl_PointSize = 2.;\n  \n  float c = vertexId / vertexCount;\n  v_color = vec4(c, c, c, 1);\n}"
  },
  "screenshotURL": "data/images/images-v1a96252rukhs1g23-thumbnail.jpg",
  "hasSound": "",
  "views": {
    "$numberInt": "13"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "77gmo5FKHY8nv9buM"
}