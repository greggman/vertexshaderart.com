{
  "_id": "gb4JMDjdT2iyyCLdE",
  "owner": {
    "_id": "Bs4vwFBoeN6Lx3is5",
    "createdAt": {
      "$date": "1528672219472"
    },
    "profile": {
      "name": "Justin Shrake",
      "avatarUrl": "https://avatars.githubusercontent.com/jshrake?s=200",
      "info": "Contact me @ https://twitter.com/j2rgb"
    },
    "username": "jshrake"
  },
  "createdAt": {
    "$date": "1551023797336"
  },
  "modifiedAt": {
    "$date": "1551023797336"
  },
  "origId": null,
  "name": "polygons and pikachus",
  "notes": "Sunday morning sketch that I just had to get out of my head.",
  "rank": "10.357319606027211",
  "private": false,
  "unlisted": false,
  "username": "jshrake",
  "avatarUrl": "https://avatars.githubusercontent.com/jshrake?s=200",
  "settings": {
    "num": 100000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/goblinsfrommars/pokemon-go-goblins-from-mars-trap-remixfree-download",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define maxN 7.0\n#define zoom 0.8\n#define sprite_min_scale 0.005\n#define sprite_max_scale 0.05\n#define PI 3.14159265359\n\nmat2 rot(float a) {\n  float s = sin(a);\n  float c = cos(a);\n  return mat2(c, s, -s, c);\n}\n\n// from http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\n// From https://www.shadertoy.com/view/4dS3Wd\nfloat hash(float n) { return fract(sin(n) * 1e4); }\n\n#define S(o) hash(shape_id + (o))\n\nvoid main () {\n    float points_per_shape = 200.0;\n    float point_id = float(vertexId);\n    float shape_id = floor(point_id / points_per_shape);\n    float shape_count = floor(vertexCount / points_per_shape);\n    float point_pct = point_id / points_per_shape - shape_id;\n\n    // shape animaton params\n    float shape_rot = 2.0 * PI * S(2.1);\n    vec2 shape_offset = 2.0 * vec2(S(30.1), S(400.1)) - 1.0;\n    float shape_speed = 0.2 * S(5.222) + 0.001;\n    float shape_rot_speed = 1.0*(S(16.3133) - 0.5);\n\n    // Parametric equation of a polygon courtesy of\n    // https://math.stackexchange.com/a/41954\n    // Generate random values of n for each shape_id between 3.0 and 7.0\n    float n = floor((maxN - 3.0)*S(7.22125) + 3.0);\n    float theta = mod(2.0 * PI * (point_pct), 2.0*PI);\n    float r = cos(PI / n)/cos(mod(theta, 2.0 * PI / n) - PI / n);\n    float x = r * cos(theta);\n    float y = r * sin(theta);\n  \n    float s = texture2D(sound, vec2(S(3042.33) * .1, 0)).a;\n    s = smoothstep(0.6, 1.0, s);\n    \n    // Apply animation params\n    vec2 xy = rot(0.5*PI + shape_rot_speed*time)*vec2(x,y);\n    xy *= ((s*sprite_max_scale - sprite_min_scale) * S(78.01) + sprite_min_scale);\n    xy.y *=  resolution.x/resolution.y;\n    xy.x += 1.0*(2.0 * S(3.311222) - 1.0);\n    xy.y -= 1.0*S(439.11035) + shape_speed * time;\n    xy.y = mod(xy.y + 1.0, 2.0) - 1.0;\n\n\n    gl_Position = vec4(xy, 0.0, zoom);\n    gl_PointSize = 0.0035*resolution.y;\n    v_color.rgb = hsv2rgb(vec3(0.1 + 0.05*S(452.011), 1.0, 1.0));\n    v_color.a = 1.0;\n}\n"
  },
  "screenshotURL": "data/images/images-ek50l9z239w993xi3-thumbnail.jpg",
  "hasSound": true,
  "views": "992",
  "likes": "7",
  "revisionId": "nvTtoS7N24cCABDWZ"
}