{
  "_id": "rskYzcp7KQd6MLz3F",
  "owner": {
    "_id": "TX8y7vAni4S9PB6JJ",
    "createdAt": {
      "$date": {
        "$numberLong": "1661628900212"
      }
    },
    "username": "gninnam",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/7d3e3f2854cb9a5f58af502a80c9c450?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1661629251893"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1661629251893"
    }
  },
  "origId": null,
  "name": "Waveforms",
  "notes": "https://www.vertexshaderart.com/art/TYoTaksHA6DWsP4aD/revision/MRoHpWw4RtBNAxefz",
  "rank": {
    "$numberDouble": "1.2244020139459968"
  },
  "private": true,
  "unlisted": false,
  "username": "gninnam",
  "avatarUrl": "https://secure.gravatar.com/avatar/7d3e3f2854cb9a5f58af502a80c9c450?default=retro&size=200",
  "settings": "{\"num\":6272,\"mode\":\"LINES\",\"sound\":\"https://soundcloud.com/chibi-tech/lolitazia-season\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"vec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x, clamp(c.yz, 0., 1.));\\n  vec4 K = vec4(1., 2. / 3., 1. / 3., 3.);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6. - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0., 1.), c.y);\\n}\\n\\nfloat select(float v, float t) {\\n  return step(t * 0.9, v) * step(v, t * 1.1);\\n}\\n\\nvoid main() {\\n  float GRID_YOFF = 1./40.;\\n  float GRID_DOWN = 17.;\\n  float GRID_ACROSS = 64.0;\\n  float NUM_PER_DOWN = GRID_DOWN * 2.;\\n  float NUM_PER_ACROSS = GRID_ACROSS * 2.;\\n  float NUM_PER_GRID = NUM_PER_DOWN + NUM_PER_ACROSS;\\n  float NUM_GRIDS = 4.;\\n  float NUM_GRID_TOTAL = NUM_PER_GRID * NUM_GRIDS;\\n  float NUM_POINTS = (vertexCount - NUM_GRID_TOTAL) / 4.;\\n  float NUM_SEGMENTS = NUM_POINTS / 2.;\\n  \\n  \\n  float id = vertexId - NUM_GRID_TOTAL;\\n  \\n  // produces 0,1, 1,2, 2,3, ...\\n  float point = floor(mod(id, NUM_POINTS) / 2.0) + mod(id, 2.0);\\n  // line count\\n  float grid = floor(id / NUM_POINTS);\\n\\n  float u = point / (NUM_SEGMENTS - 1.);    // 0 <-> 1 across line\\n  float v = grid / NUM_GRIDS;      // 0 <-> 1 by line\\n\\n  float snd0 = texture2D(sound, vec2(u * 1., 0)).a;\\n  float snd1 = texture2D(sound, vec2(u * 0.5, 0)).a;\\n  float snd2 = texture2D(sound, vec2(u * 0.25, 0)).a;\\n  float snd3 = texture2D(sound, vec2(u * 0.125, 0)).a;\\n  \\n  float s = \\n    snd0 * select(grid, 0.) + \\n    snd1 * select(grid, 1.) +\\n    snd2 * select(grid, 2.) + \\n    snd3 * select(grid, 3.) +\\n    0.;\\n  \\n  float x = u * 2.0 - 1.0;\\n  float y = v * 2.0 - 1.0;\\n  vec2 xy = vec2(\\n      x,\\n      s * 0.4 + y + GRID_YOFF);\\n  gl_Position = vec4(xy, 0, 1);\\n  \\n  float hue = grid * 0.25;\\n  float sat = 1.0;\\n  float val = 1.0;\\n  \\n  if (id < 0.0) {\\n    if (vertexId < NUM_PER_DOWN * NUM_GRIDS) {\\n      float hgx = mod(vertexId, 2.0);\\n      float hgy = mod(floor(vertexId / 2.), GRID_DOWN);\\n      float hgId = floor(vertexId / NUM_PER_DOWN);\\n      gl_Position = vec4(\\n        hgx * 2. - 1.,\\n        hgy / (GRID_DOWN - 1.) * 0.4 +  \\n        (hgId / NUM_GRIDS * 2. - 1.) + GRID_YOFF,\\n        0.1,\\n        1);\\n      \\n      hue = hgId * 0.25;\\n      sat = 0.5;\\n      val = 0.3;\\n    } else {\\n      float vid = vertexId - NUM_PER_DOWN * NUM_GRIDS;\\n      float vgy = mod(vid, 2.0);\\n      float vgx = mod(floor(vid / 2.), GRID_ACROSS);\\n      float vgId = floor(vid / NUM_PER_ACROSS);\\n      gl_Position = vec4(\\n        ((vgx / GRID_ACROSS) * 2. - 1.) * pow(2., vgId),\\n        vgy * 0.4 +  \\n        (vgId / NUM_GRIDS * 2. - 1.) + GRID_YOFF,\\n        0.1,\\n        1);\\n      \\n      hue = vgId * 0.25;\\n      sat = 0.5;\\n      val = 0.3;\\n      \\n    }\\n  }\\n  \\n  \\n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\\n}\"}",
  "screenshotURL": "data/images/images-9pwuiycdvsmhnpi3o-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "2"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "QigwgFwsxEkSEPn7F"
}