{
  "_id": "byf5BfNoi72wvAFDi",
  "owner": {
    "_id": "u9A54Fr2xqnfssRpa",
    "createdAt": {
      "$date": 1684324202773
    },
    "username": "seongryul.park",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/335c7306112b8357ec436839f7018115?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": 1685553097978
  },
  "modifiedAt": {
    "$date": 1685553097978
  },
  "origId": "pGdr2hxn77WNvKPcH",
  "name": "Circles from Triangles - tweaks",
  "notes": "Circles from Triangles - tweaks",
  "rank": 1.8303472985120088,
  "private": false,
  "unlisted": true,
  "username": "seongryul.park",
  "avatarUrl": "https://secure.gravatar.com/avatar/335c7306112b8357ec436839f7018115?default=retro&size=200",
  "settings": {
    "num": 100000,
    "mode": "TRIANGLES",
    "sound": "https://soundcloud.com/hausofartsasha/lady-gaga-tony-bennett-the-lady-is-a-tramp-cheek-to-cheek-tour-studio-version?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "\n//\tseongryul.park\n//\tCS250 spring 2023\n//\tExercise - Vertexshaderart : Circles from Triangles\n\nvec3 hsv2rgb(vec3 c)\n{\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  \n  vec4 k = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + k.xyz) * 6.0 - k.www);\n  return c.z * mix(k.xxx, clamp(p - k.xxx, 0.0, 1.0), c.y);\n}\n\n#define PI radians(180.0)\n\nmat4 rotZ(float angleInRadians)\n{\n  float s = sin(angleInRadians);\n  float c = cos(angleInRadians);\n  \n  return mat4(\n  \tc, -s, 0, 0,\n  \ts,  c, 0, 0,\n  \t0,  0, 1, 0,\n  \t0,  0, 0, 1\n  );\n}\n\nmat4 trans(vec3 trans)\n{\n  return mat4(\n\t1, 0, 0, 0,\n\t0, 1, 0, 0,\n\t0, 0, 1, 0,\n\ttrans,   1\n  );\n}\n\nmat4 ident()\n{\n\treturn mat4(\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n    );\n}\n\nmat4 scale(vec3 s)\n{\n\treturn mat4(\n\t\ts.x, 0, 0, 0,\n\t\t0, s.y, 0, 0,\n\t\t0, 0, s.z, 0,\n\t\t0, 0, 0, 1\n    );\n}\n\nmat4 uniformScale(float s)\n{\n\treturn mat4(\n\t\ts, 0, 0, 0,\n\t\t0, s, 0, 0,\n\t\t0, 0, s, 0,\n\t\t0, 0, 0, 1\n    );\n}\n\nvec2 getCirclePoint(float id, float numCircleSegments)\n{\n  float ux = floor(id / 6.) + mod(id, 2.0);\n  float vy = mod(floor(id / 2.) + floor(id / 3.0), 2.0);\n  \n  float angle = ux / numCircleSegments * PI * 2.0;\n  float c = cos(angle);\n  float s = sin(angle);\n  \n  float radius = vy + 1.0;\n  \n  float x = c * radius;\n  float y = s * radius;\n  \n  return vec2(x, y);\n}\n\nvoid main()\n{\n  \tfloat sliceId = floor(vertexId / 6.0);\n  \tfloat oddSlice = mod(sliceId, 2.0);\n  \n  \tfloat numCircleSegments = oddSlice * 6.0;\n  \tvec2 circleXY = getCirclePoint(vertexId, numCircleSegments);\n  \n  \tfloat numPointsPerCircle = numCircleSegments * 6.0;\n  \tfloat circleId = floor(vertexId / numPointsPerCircle);\n  \tfloat numCircles = floor(vertexCount / numPointsPerCircle);\n  \n\tfloat down = floor(sqrt(numCircles));\n  \tfloat across = floor(numCircles / down);\n  \n  \tfloat x = mod(circleId, across);\n  \tfloat y = floor(circleId/ across);\n  \n  \tfloat u = x / (across - 1.);\n  \tfloat v = y / (across - 1.);\n  \n  \tfloat xoff = 0.;//sin(time + y * 0.2) * 0.1;\n  \tfloat yoff = 0.;//sin(time + x * 0.3) * 0.2;\n  \n  \tfloat ux = u * 2. - 1. + xoff;\n  \tfloat vy = v * 2. - 1. + yoff;\n  \n  \tfloat su = abs(u - 0.5) * 2.0;\n  \tfloat sv = abs(v - 0.5) * 2.0;\n  \tfloat au = abs(atan(su, sv)) / PI;\n  \tfloat av = length(vec2(su, sv));\n  \tfloat snd = texture2D(sound, vec2(au * 0.05, av * 0.25)).a;\n  \n  \tfloat aspect = resolution.x / resolution.y;\n  \tfloat sc = pow(snd + 0.2, 5.0) * mix(1., 1.1, oddSlice);\n  \n  \tsc *= 20. / across;\n  \n  \tvec4 pos = vec4(circleXY, 0, 1);\n  \tmat4 mat = ident();\n  \tmat *= scale(vec3(1, aspect, 1));\n  \tmat *= rotZ(sin(time));\n  \tmat *= uniformScale((sin(time) + 3.));\n  \tmat *= trans(vec3(ux, vy, 0));\n  \tmat *= rotZ(snd * 20. * sign(ux));\n    mat *= uniformScale(0.03 * sc);\n  \n  \tgl_Position = mat * pos;\n  \n  \tfloat soff = 0.;//sin(time * 1.2 + x * y * 0.02) * 5.;\n \n  \t\n  \tfloat pump = step(0.8, snd);\n  \tfloat hue = u * .1 + snd * 0.2 + time * 0.1;\n  \tfloat sat = 1.;//mix(0.5, 1.0, pump);\n  \tfloat val = mix(0.4, pow(snd + 0.2, 5.0), pump);//sin(time * 1.4 + v * u * 20.0) * 0.5 + 0.5;\n  \n  \thue = hue + pump * 0.5 + pump * 0.33;\n  \tval += pump;\n  \n  \tv_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\n}"
  },
  "screenshotURL": "data/images/images-0cfi9ju2j111mwnyl-thumbnail.jpg",
  "hasSound": true,
  "views": 3,
  "likes": 0,
  "revisionId": "TwgvZKYkmKcaDLovs"
}