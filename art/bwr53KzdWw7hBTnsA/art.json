{
  "_id": "bwr53KzdWw7hBTnsA",
  "owner": {
    "username": "anon"
  },
  "createdAt": {
    "$date": 1577996484790
  },
  "modifiedAt": {
    "$date": 1577996484790
  },
  "origId": "BtkrDbo3o9cSAoXeW",
  "name": "stranded",
  "notes": "",
  "rank": 1.1979423151176614,
  "private": false,
  "unlisted": false,
  "username": "-anon-",
  "avatarUrl": "",
  "settings": {
    "num": 100000,
    "mode": "LINES",
    "sound": "https://soundcloud.com/upscale-recordings/forestfires",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "// Derivative of \"the tangled webs we weave\" by jshrake\n// Make sure to also switch to \"points\"!\n\n// hash functions\n#define HASHSCALE1 .1031\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\n#define HASHSCALE4 vec4(.1031, .1030, .0973, .1099)\n\nfloat hash11(float p) {\n  vec3 p3 = fract(vec3(p) * HASHSCALE1);\n  p3 += dot(p3, p3.yzx + 19.19);\n  return fract((p3.x + p3.y) * p3.z);\n}\n\n// from http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvoid main() {\n  // calculate the position\n  float vertex_id = vertexId;\n  // This basically makes each vertex ID even so that the lines don't cross the screen edge, and are straight\n  float quad_id = floor(vertex_id*0.5);\n  float quad_count = vertexCount;\n  float quad_pct = quad_id / quad_count;\n  float quads_per_trail = 1000.0;\n  float trail_id = floor(quad_id / quads_per_trail);\n  float trail_count = floor(quad_count / quads_per_trail);\n  float trail_pct = trail_id / trail_count;\n  float quad_trail_pct = quad_id / quads_per_trail - trail_id;\n  float quad_size = 1.0;\n  float trail_length = 1.0;//2.0*hash11(trail_id  + 0.9872);\n  \n\n\n  float x = -1.0 + 2.0*quad_trail_pct*trail_length + 0.05*hash11(trail_id + 0.5123)*time;\n  x = mod(x + 1.0, 2.0) - 1.0;\n  float quad_x_pct = (x + 1.0) / 2.0;\n  \n  float toggle = texture2D(sound, vec2(0.0,0.5-x*0.5)).a*0.5;\n  float spread = 0.2;\n  float how_much_quad = 0.3*(hash11(trail_id + 0.734)) * toggle;\n  \n  \n  \n  float y = mix(\n      spread*hash11(trail_id + 0.1353)*sin(10.0*(time*0.05+x - trail_id)),\n      how_much_quad*(2.0 * hash11(vertex_id) - 1.0) + (1.0 - how_much_quad)*(2.0 * hash11(trail_id) - 1.0),\n      smoothstep(0.1, 0.5, quad_x_pct) - smoothstep(0.2, 0.9 - 0.1*hash11(trail_id + 0.223), quad_x_pct));\n  \n  float z = 0.0;\n\n  gl_Position = vec4(x,y,z,1.0);\n  gl_PointSize = quad_size;\n\n  // write the color\n  vec3 hsv = vec3(mix(0.6 + 0.3*trail_pct, 0.5 + 0.1*trail_pct, quad_x_pct), 1.0, 1.0);\n  v_color = vec4(hsv2rgb(hsv), 1.0);\n}\n"
  },
  "screenshotURL": "data/images/images-sgreoau9jthpzdty2-thumbnail.jpg",
  "hasSound": true,
  "views": 128,
  "likes": 0,
  "revisionId": "qpMdFX7N3wJYqZp5j"
}