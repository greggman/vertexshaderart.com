{
  "_id": "SnqDnsfrYzTPyN2BA",
  "owner": {
    "_id": "D6QNSkpSPuQJg3LnB",
    "createdAt": {
      "$date": 1507653338139
    },
    "username": "demofox",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/9522425587344b887bcb7c65d236f3a3?default=retro&size=200&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F26fe85a4d3a90c20c51e30967cac6501"
    }
  },
  "createdAt": {
    "$date": 1507653848749
  },
  "modifiedAt": {
    "$date": 1507669939916
  },
  "origId": null,
  "name": "Y geo",
  "notes": "",
  "rank": 1.9510210368626606,
  "private": false,
  "unlisted": true,
  "username": "demofox",
  "avatarUrl": "https://secure.gravatar.com/avatar/9522425587344b887bcb7c65d236f3a3?default=retro&size=200&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F26fe85a4d3a90c20c51e30967cac6501",
  "settings": {
    "num": 24,
    "mode": "TRIANGLES",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define VERTEX_DATA(inpos, inuv) vert += 1.0; if (vertexId == vert) {pos = inpos; uv = inuv;}\n\n\nvoid main() {\n    \n  // vertices\n  const vec2 AP = vec2(0.4, 0.2);\n  const vec2 AU = vec2(0.0, 0.0);\n  \n  const vec2 BP = vec2(0.6, 0.2);\n  const vec2 BU = vec2(1.0, 0.0);  \n\n  const vec2 CP = vec2(0.4, 0.5);\n  const vec2 CU = vec2(0.0, 0.7);\n  \n  const vec2 DP = vec2(0.6, 0.5);\n  const vec2 DU = vec2(1.0, 0.7);    \n  \n  const vec2 EP = vec2(0.5, 0.6);\n  const vec2 EU = vec2(0.5, 0.5);\n  \n  const vec2 FP = vec2(0.7, 0.8);\n  const vec2 FU = vec2(0.0, 1.0);\n  \n  const vec2 GP = vec2(0.8, 0.7);\n  const vec2 GU = vec2(1.0, 1.0);\n  \n  const vec2 HP = vec2(0.2, 0.7);\n  const vec2 HU = vec2(0.0, 1.0);  \n  \n  const vec2 IP = vec2(0.3, 0.8);\n  const vec2 IU = vec2(1.0, 1.0);    \n  \n  const vec2 JP = vec2(0.5, 0.5);\n  const vec2 JU = vec2(0.5, 0.7);    \n  \n  const vec2 KP = vec2(0.5, 0.6);\n  const vec2 KU = vec2(1.0, 0.7);      \n  \n  const vec2 LP = vec2(0.5, 0.6);\n  const vec2 LU = vec2(0.0, 0.7);        \n  \n  \n  // make the mesh\n  vec2 pos = vec2(0.0, 0.0);\n  vec2 uv = vec2(0.0, 0.0); \n  float vert = -1.0;\n  \n  VERTEX_DATA(AP, AU);\n  VERTEX_DATA(DP, DU);\n  VERTEX_DATA(BP, BU);\n  \n  VERTEX_DATA(AP, AU);\n  VERTEX_DATA(CP, CU);\n  VERTEX_DATA(DP, DU);  \n  \n  #if 0\n  \n  VERTEX_DATA(CP, CU);\n  VERTEX_DATA(EP, EU);\n  VERTEX_DATA(DP, DU);    \n  \n  VERTEX_DATA(CP, CU);\n  VERTEX_DATA(IP, IU);\n  VERTEX_DATA(EP, EU);    \n  \n  VERTEX_DATA(EP, EU);\n  VERTEX_DATA(FP, FU);\n  VERTEX_DATA(GP, GU);      \n  \n  VERTEX_DATA(EP, EU);\n  VERTEX_DATA(GP, GU);\n  VERTEX_DATA(DP, DU);\n  \n  \n  #else\n  \n  VERTEX_DATA(CP, CU);\n  VERTEX_DATA(KP, KU);\n  VERTEX_DATA(JP, JU);\n\n  VERTEX_DATA(JP, JU);\n  VERTEX_DATA(LP, LU);\n  VERTEX_DATA(DP, DU);\n\n  VERTEX_DATA(CP, CU);\n  VERTEX_DATA(IP, IU);\n  VERTEX_DATA(KP, KU);    \n  \n  VERTEX_DATA(LP, LU);\n  VERTEX_DATA(FP, FU);\n  VERTEX_DATA(GP, GU);      \n  \n  VERTEX_DATA(LP, LU);\n  VERTEX_DATA(GP, GU);\n  VERTEX_DATA(DP, DU);\n  \n  #endif\n\n    \n  VERTEX_DATA(CP, CU);\n  VERTEX_DATA(HP, HU);\n  VERTEX_DATA(IP, IU);  \n    \n  float aspectRatio = resolution.y / resolution.x;\n  pos.x *= aspectRatio;\n  \n  gl_Position = vec4(pos*2.0-1.0, 0.0, 1.0);\n  v_color = vec4(uv, 1.0, 1.0);\n}"
  },
  "screenshotURL": "data/images/images-13fyuj01llgb8ry44-thumbnail.jpg",
  "hasSound": "",
  "views": 4,
  "likes": 0,
  "revisionId": "CMMjtDg3nrDhFhY93"
}