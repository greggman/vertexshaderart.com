{
  "_id": "uYBa5uSws8jiReZXu",
  "owner": {
    "username": "anon"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1589410133308"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1589410133308"
    }
  },
  "origId": "dxmjSBXBuwTbPjkQZ",
  "name": "mostly harmless",
  "notes": "",
  "rank": {
    "$numberDouble": "1.8095278023479895"
  },
  "private": false,
  "unlisted": false,
  "username": "-anon-",
  "avatarUrl": "",
  "settings": "{\"num\":73,\"mode\":\"TRIANGLES\",\"sound\":\"\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0.10980392156862745,0.06666666666666667,0.06666666666666667,1],\"shader\":\"#define PI radians(180.)\\n#define VERTICES_PER_TRI 3\\n#define MASK 16\\n#define MAX_TRIS 9\\n#define MAX_NORMALS 12\\n#define TOTAL_TRI 12\\n#define VERTS_PER_VEC4 4\\n\\n\\nvec4 triangles[MAX_TRIS];\\nvec3 normals[MAX_NORMALS];\\n      \\nconst vec3  masker   = vec3(MASK,1.0,MASK*MASK);\\nconst float znear    = 0.001, zfar=1000.0;\\nconst float rangeInv = 1.0 / (znear-zfar);\\nconst vec4  model_o  = vec4(0.0,2.0,7.5,0.0);\\nconst vec3  light    = vec3(-11.8,111.2,11.0);\\n      mat4 persp     = mat4(\\n                        1.0 / (resolution.x/resolution.y), 0, 0, 0,\\n                        0, 1.0, 0, 0,\\n                        0, 0, (znear + zfar) * rangeInv, -1,\\n                        0, 0, znear  * zfar * rangeInv * 2., 0);\\n\\nvec4 unpackVertex(float a){\\n  vec4 r = vec4(a);\\n  r.xyz/=masker.yxz;\\n  return vec4(mod(r.xyz,masker.xxx), 1.0);\\n}\\n\\nvoid populate(){ \\n  triangles[ 0]=vec4(         0.0,        96.0,         4.0,        91.0);  \\n  triangles[ 1]=vec4(         4.0,        96.0,        47.0,         4.0); \\n  triangles[ 2]=vec4(        91.0,      2112.0,        91.0,        96.0);   \\n  triangles[ 3]=vec4(      3332.0,        91.0,      2112.0,      3332.0);   \\n  triangles[ 4]=vec4(      1326.0,        91.0,        47.0,        91.0);    \\n  triangles[ 5]=vec4(      1326.0,      2112.0,      3328.0,      3332.0);   \\n  triangles[ 6]=vec4(         0.0,         4.0,      3328.0,      3328.0);   \\n  triangles[ 7]=vec4(         4.0,      3332.0,      1326.0,      3332.0);  \\n  triangles[ 8]=vec4(         4.0,        47.0,      1326.0,         4.0);    \\n\\n  normals[0]=vec3(0.,0.,-1.);\\n  normals[1]=vec3(0.,0.,-1.);\\n  normals[2]=vec3(0.,0.,-1.);\\n  normals[3]=vec3(0.09,0.97,0.19);\\n  normals[4]=vec3(0.27,0.85,0.43);\\n  normals[5]=vec3(0.16,0.90,0.39);\\n  normals[6]=vec3(0.51,0.84,0.10);\\n  normals[7]=vec3(0.,0.80,0.58);\\n  normals[8]=vec3(0.,-1.,0.);\\n  normals[9]=vec3(0.,-1.,0.);\\n  normals[10]=vec3(0.16,-0.98,0.);\\n  normals[11]=vec3(0.15,-0.98,0.03);\\n}\\n\\nfloat getVertex(int target){\\n  int h= ((target/VERTS_PER_VEC4));\\n  int n = int(mod(float(target),float(VERTS_PER_VEC4)));\\n  for(int i=0;i<MAX_TRIS;i++){\\n    if(i==h){\\n      vec4 t = triangles[i];\\n      for(int ii=0;ii<VERTS_PER_VEC4;ii++){\\n        if(ii==n) return t.x;\\n        t = t.yzwx;  \\n      }\\n    }\\n  }\\n}\\n\\nvec3 getNormal(int target){\\n  for(int i=0;i<=MAX_NORMALS;i++)\\n    if(i==target) return normals[i];\\n}\\n\\n\\n#define MSET float s = sin( angle );float c = cos( angle );\\nmat4 rotX(float angle){ MSET\\n    return mat4(1, 0, 0, 0, 0, c, s, 0, 0,-s, c, 0, 0, 0, 0, 1);\\n}\\n\\nmat4 rotY( float angle ){ MSET\\n    return mat4( c, 0,-s, 0, 0, 1, 0, 0, s, 0, c, 0, 0, 0, 0, 1);  \\n}\\n\\nmat4 rotZ( float angle ){ MSET\\n    return mat4( c,-s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); \\n}\\n\\nvoid main(){\\n  populate();\\n  mat4 transform = rotX(mouse.y*2.)*rotZ(mouse.x)*rotY(sin(time/4.));\\n  int  target    = int(mod(vertexId,float(TOTAL_TRI*VERTICES_PER_TRI)));\\n  int  target2   = int(mod(vertexId,float(TOTAL_TRI*2*VERTICES_PER_TRI)));\\n  vec3 normal    = getNormal(target/VERTICES_PER_TRI), tnorm;\\n  vec4 position  = unpackVertex(getVertex(target))-model_o;\\n  \\n  if ( target2>=TOTAL_TRI*VERTICES_PER_TRI ) {\\n    //Mirror the model in x-axis\\n    position.x=-position.x;\\n    normal = (reflect(normal,-normals[0].zyx));\\n  }\\n  tnorm = normalize(transform*vec4(normal,1.0)).xyz;\\n\\n  position  *= transform;  \\n  v_color    = vec4((dot(tnorm,light)/11.))*background*2.;\\n  v_color.w  = 1.;\\n  position.z-= 20.0;\\n  gl_Position =persp * position;\\n\\n}\"}",
  "screenshotURL": "data/images/images-kb0s8wmmdgcs37owr-thumbnail.jpg",
  "hasSound": "",
  "views": {
    "$numberInt": "73"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "DP3hwDBKMMKn5ZZJx"
}