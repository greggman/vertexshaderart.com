{
  "_id": "nL6YpkW8YvGKNEKtj",
  "owner": {
    "_id": "Re2gw8aDCRTMaXYDC",
    "createdAt": {
      "$date": 1445867231387
    },
    "username": "kabuto",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/e678fef714d5460c8f9ce2723842fd19?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": 1445867330665
  },
  "origId": null,
  "name": "point cloud vs spheres",
  "username": "kabuto",
  "settings": {
    "num": 50000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/mogueheart/contact-part-2",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "/*\n   point cloud vs spheres by Kabuto\n\n   Recreated this well-known demo effect. A bit tricky without being able to store history for points, so it's just computed again and again for each render pass\n*/\n\nvec3 posf2(float t, float i) {\n\treturn vec3(\n      sin(t+i*.9553) +\n      sin(t*1.311+i) +\n      sin(t*1.4+i*1.53) +\n      sin(t*1.84+i*.76),\n      sin(t+i*.79553+2.1) +\n      sin(t*1.311+i*1.1311+2.1) +\n      sin(t*1.4+i*1.353-2.1) +\n      sin(t*1.84+i*.476-2.1),\n      sin(t+i*.5553-2.1) +\n      sin(t*1.311+i*1.1-2.1) +\n      sin(t*1.4+i*1.23+2.1) +\n      sin(t*1.84+i*.36+2.1)\n\t)*.2;\n}\n\nvec3 posf0(float t) {\n  return posf2(t,-1.)*3.5;\n}\n\nvec3 posf(float t, float i) {\n  return posf2(t*.3,i) + posf0(t);\n}\n\nvec3 push(float t, float i, vec3 ofs, float lerpEnd) {\n  vec3 pos = posf(t,i)+ofs;\n  \n  vec3 posf = fract(pos+.5)-.5;\n  \n  float l = length(posf)*2.;\n  return (- posf + posf/l)*(1.-smoothstep(lerpEnd,1.,l));\n}\n\nvoid main() {\n  // more or less random movement\n  float t = time*.20;\n  float i = vertexId+sin(vertexId)*100.;\n\n  vec3 pos = posf(t,i);\n  vec3 ofs = vec3(0);\n  for (float f = -10.; f < 0.; f++) {\n\t  ofs += push(t+f*.05,i,ofs,2.-exp(-f*.1));\n  }\n  ofs += push(t,i,ofs,.999);\n  \n  pos -= posf0(t);\n  \n  pos += ofs;\n  \n  \n  pos.yz *= mat2(.8,.6,-.6,.8);\n  pos.xz *= mat2(.8,.6,-.6,.8);\n  \n  pos *= 1.;\n  \n\n  pos.z += .7;\n  \n  pos.xy *= .6/pos.z;\n  \n  gl_Position = vec4(pos.x, pos.y*resolution.x/resolution.y, pos.z*.1, 1);\n  gl_PointSize = 1./pos.z;\n\n  v_color = vec4(abs(ofs/max(length(ofs),1e-9))*.3+.7,1);\n}"
  },
  "screenshotDataId": "x3JPBAA3a52pgi2jH",
  "views": 27220,
  "likes": 51,
  "revisionId": "rz4dETpmXR3zhcwLm",
  "screenshotURL": "data/images/images-npze7gc9gj6tkat5p-thumbnail.jpg",
  "modifiedAt": {
    "$date": 1446462203961
  },
  "private": false,
  "hasSound": true,
  "rank": 10.095433205424959,
  "avatarUrl": "https://secure.gravatar.com/avatar/e678fef714d5460c8f9ce2723842fd19?default=retro&size=200"
}