{
  "_id": "8T4bhdbFF8NqLZ5qJ",
  "owner": {
    "_id": "Aw3ZBjbzi7sLBthGm",
    "createdAt": {
      "$date": "1528851803464"
    },
    "profile": {
      "name": "Aardbei",
      "avatarUrl": "https://avatars.githubusercontent.com/MegaLoler?s=200"
    },
    "username": "megaloler"
  },
  "createdAt": {
    "$date": "1529106668205"
  },
  "modifiedAt": {
    "$date": "1529112046676"
  },
  "origId": null,
  "name": "gyro thingy",
  "notes": "",
  "rank": "1.7431354777027375",
  "private": false,
  "unlisted": false,
  "username": "megaloler",
  "avatarUrl": "https://avatars.githubusercontent.com/MegaLoler?s=200",
  "settings": {
    "num": 13030,
    "mode": "POINTS",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define PI radians(180.)\n#define TAU radians(360.)\n\nvec2 circle(float i) {\n  return vec2(cos(i * TAU), sin(i * TAU));\n}\n\nmat4 rotZ(float a) {\n  return mat4(cos(a), sin(a), 0., 0.,\n              -sin(a), cos(a), 0., 0.,\n              0., 0., 1., 0.,\n              0., 0., 0., 1.);\n}\n\nmat4 rotY(float a) {\n  return mat4(cos(a), 0., sin(a), 0.,\n              0., 1., 0., 0.,\n              -sin(a), 0., cos(a), 0.,\n              0., 0., 0., 1.);\n}\n\nmat4 rotX(float a) {\n  return mat4(1., 0., 0., 0.,\n              0., cos(a), sin(a), 0.,\n              0., -sin(a), cos(a), 0.,\n              0., 0., 0., 1.);\n}\n\nmat4 translate(vec3 p) {\n  return mat4(1., 0., 0., 0.,\n              0., 1., 0., 0.,\n              0., 0., 1., 0.,\n              p.x, p.y, p.z, 1.);\n}\n\nmat4 scale(vec3 p) {\n  return mat4(p.x, 0., 0., 0.,\n              0., p.y, 0., 0.,\n              0., 0., p.z, 0.,\n              0., 0., 0., 1.);\n}\n\nmat4 projection(vec4 pos, float aspect, float near, float far) {\n  float range = far - near;\n  float p = pos.z - near;\n  float z_buf = mix(-1., 1., p / range);\n  float z = 1.0 + pos.z;\n  return mat4(aspect/z, 0., 0., 0.,\n              0., 1./z, 0., 0.,\n              0., 0., 0., 0.,\n              0., 0., z_buf, 1.);\n}\n\nvoid main() {\n  float aspect = resolution.y / resolution.x;\n  float shapeCount = 3.;\n  float i = vertexId / vertexCount * shapeCount;\n  float shape_i = fract(i);\n  int shapeId = int(floor(i));\n  vec2 circ = circle(shape_i);\n  vec4 pos;\n  if(shapeId == 0) pos = vec4(circ.x, circ.y, 0., 1.);\n  else if(shapeId == 1) pos = vec4(circ.y, 0., circ.x, 1.);\n  else if(shapeId == 2) pos = vec4(0., circ.x, circ.y, 1.);\n  pos = rotX(time) * rotY(time) * pos;\n  pos = translate(vec3(mouse.x/aspect, mouse.y, 1.)) * pos;\n  mat4 projection = projection(pos, aspect, -0.5, 100.);\n  gl_Position = projection * pos;\n  gl_PointSize = 10.;\n  v_color = vec4(clamp(0., 1., 2.*(1.-abs(i-1.))), clamp(0., 1., 2.*(1.-abs(i-2.))),  max(clamp(0., 1., 2.*(1.-abs(i-3.))), clamp(0., 1., 2.*(1.-abs(i)))), 1.);\n  \n}"
  },
  "screenshotURL": "data/images/images-pxtuem2yes91mm9hc-thumbnail.jpg",
  "hasSound": "",
  "views": "219",
  "likes": "0",
  "revisionId": "ZFdXhGL9KuMN8aSK5"
}