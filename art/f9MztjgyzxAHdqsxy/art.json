{
  "_id": "f9MztjgyzxAHdqsxy",
  "owner": {
    "username": "anon"
  },
  "createdAt": {
    "$date": "1634526836100"
  },
  "modifiedAt": {
    "$date": "1634526836100"
  },
  "origId": null,
  "name": "unnamed",
  "notes": "",
  "rank": "1.3264002831992625",
  "private": false,
  "unlisted": false,
  "username": "-anon-",
  "avatarUrl": "",
  "settings": {
    "num": 1000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/caseandpoint/case-point-upgrade-free-download",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "vec3 hsv2rgb(vec3 c) {\n    c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n  }\n\nvoid main() {\n  \n  float down = floor(sqrt(vertexCount));\n  float across = floor(vertexCount / down);\n  \n  // float pointSize = 5.;\n  \n  float x = mod(vertexId, across);\n  float y = floor(vertexId /across);\n  \n  float u = x/(across-1.);\n  float v = y/(across-1.);\n  \n  float xoff = 0.; // sin(time + y * 0.2) * .1;\n  float yoff = 0.; // sin(time + x * 0.3) * .2;\n\n  float ux = u * 2. - 1. + xoff;\n  float vy = v * 2. - 1. + yoff;\n   \n  vec2 xy = vec2(ux, vy) * 1.3;\n  \n  float snd = texture2D(sound, vec2(u * 0.125, v * .25)).a;\n   \n  gl_Position = vec4(xy,0,1);\n   \n  float soff = .0; // sin(time + x * y * 0.02) * 5.;\n   \n  gl_PointSize = snd * 30.0 + soff;\n  gl_PointSize *= 20. / across;\n  gl_PointSize *= resolution.x / 600.;\n  \n  float hue = 1.; // u * .1 + sin(time + v * 20.) * .5;\n  float sat = 1.;\n  float val = snd; //sin(time + v * u * 20.0) * .5 + .5;\n\n  v_color = vec4(hsv2rgb(vec3(hue,sat,val)),1);\n \n}\n"
  },
  "screenshotURL": "data/images/images-6crny2r0gk0rlosg5-thumbnail.jpg",
  "hasSound": true,
  "views": "60",
  "likes": "0",
  "revisionId": "egaQdeo2v3py63WLu"
}