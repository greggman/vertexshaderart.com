{
  "_id": "vbumqNjcawaLjdiM8",
  "owner": {
    "_id": "gCKgzQzioC4gDMxq9",
    "createdAt": {
      "$date": "1496305181205"
    },
    "profile": {
      "name": "Paul Gutierrez",
      "avatarUrl": "https://lh3.googleusercontent.com/-zoLHh8QcDvA/AAAAAAAAAAI/AAAAAAAAAMY/JF7a2zyY1xc/photo.jpg",
      "info": "Trying to create shaders to work with the K machine app."
    },
    "username": "PLU Collective"
  },
  "createdAt": {
    "$date": "1496319799046"
  },
  "modifiedAt": {
    "$date": "1496325529584"
  },
  "origId": "q9BoWL6vYgWMPi8CP",
  "name": "Lesson05",
  "notes": "Lesson Five tutorial code.",
  "rank": "1.9205309630546932",
  "private": false,
  "unlisted": true,
  "username": "PLU Collective",
  "avatarUrl": "https://lh3.googleusercontent.com/-zoLHh8QcDvA/AAAAAAAAAAI/AAAAAAAAAMY/JF7a2zyY1xc/photo.jpg",
  "settings": {
    "num": 12004,
    "mode": "TRIANGLES",
    "sound": "https://soundcloud.com/plu-collective/circuitry",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0.03137254901960784,
      0.043137254901960784,
      0.1450980392156863,
      1
    ],
    "shader": "//Lesson 05\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n#define PI radians(180.0)\n\n\nmat4 rotZ(float angleInRadians) {\n  float s = sin(angleInRadians);\n  float c = cos(angleInRadians);\n  \n  return mat4(\n    c,-s, 0, 0,\n    s, c, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1);\n}\n\nmat4 trans(vec3 trans) {\n  return mat4(\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    trans, 1);\n}\n\nmat4 ident() {\n  return mat4(\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1);\n}\n\n\nmat4 scale(vec3 s) {\n  return mat4(\n    s[0], 0, 0, 0,\n    0, s[1], 0, 0,\n    0, 0, s[2], 0,\n    0, 0, 0, 1);\n}\n\n\nmat4 uniformScale(float s) {\n  return mat4(\n    s, 0, 0, 0,\n    0, s, 0, 0,\n    0, 0, s, 0,\n    0, 0, 0, 1);\n}\n\n\nvec2 getCirclePoint(float id, float numCircleSegements) {\n \n float ux = floor(id / 6.) + mod(id, 2.);\n float vy = mod(floor(id / 2.) + floor(id / 3.), 2.);\n  \n float angle = ux / 20. * PI * 2.;\n float c = cos(angle);\n float s = sin(angle);\n  \n float radius = vy + 1.;\n  \n float x = c * radius;\n float y = s * radius;\n  \n   \n return vec2(x, y);\n\n}\n\n\nvoid main() {\n  float numCircleSegments = 6.;\n  vec2 circleXY = getCirclePoint(vertexId,\n                                 numCircleSegments);\n  \n  float numPointsPerCircle = numCircleSegments * 6.;\n  float CircleId = floor(vertexId / numPointsPerCircle);\n  float numCircles = floor(vertexCount / numPointsPerCircle);\n  \n  \n  float down = floor(sqrt(numCircles));\n  float across = floor(numCircles / down);\n  \n  float x = mod(CircleId, across);\n  float y = floor(CircleId / across);\n  \n  float u = x / (across - 1.);\n  float v = y / (across - 1.);\n  \n  float xoff = 0.;//sin(time + y * 0.2) * 0.1;\n  float yoff = 0.;//sin(time + x * 0.3) * 0.2;\n  \n  float ux = u * 2. - 1. + xoff;\n  float vy = v * 2. - 1. + yoff;\n  \n  float su = abs(u - 0.5) * 2.;\n  float sv = abs(v - 0.5) * 2.;\n  float au = abs(atan(su, sv)) / PI;\n  float av = length(vec2(su, sv));\n  float snd = texture2D(sound, vec2(au * .09, av * .25)).a;\n  \n  float aspect = resolution.x / resolution.y;\n  float sc = pow(snd + 0.2, 5.);\n  \n  vec4 pos = vec4(circleXY, 0, 1);\n  mat4 mat = ident();\n  mat *= scale(vec3(1, aspect, 1));\n  mat *= trans(vec3(ux, vy, 0));\n  mat *= uniformScale(0.1 * sc);\n  \n  gl_Position = mat * pos;\n  \n  float soff = 0.;//sin(time + x * y * 0.02) * 5.;\n  \n  float pump = step(0.8, snd);\n  \n  float hue = u * .1 + snd * 0.2 + time * .1;\n  float sat = mix(0., 1., pump);\n  float val = mix(.1, pow(snd + 0.2, 5.), pump);//sin(time + v * u * 20.) * .5 + .5;\n  \n  \n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\n  \n}\n"
  },
  "screenshotURL": "data/images/images-v475hvb2oujw62ogz-thumbnail.jpg",
  "hasSound": true,
  "views": "4",
  "likes": "0",
  "revisionId": "cDXHihnkgLMPkykb5"
}