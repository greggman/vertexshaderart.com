{
  "_id": "FEuQEawn8qHXvXTbY",
  "owner": {
    "_id": "wS35KaxKMDZx6vwgA",
    "createdAt": {
      "$date": "1589150576916"
    },
    "profile": {
      "first_name": "Mohammad",
      "last_name": "Skafi",
      "avatarUrl": "https://lh3.googleusercontent.com/a-/AOh14GgRLVJR1d3hBTBUtVP87xxHCfbTV8QZ--NyKDA1tw"
    },
    "username": "mohammad"
  },
  "createdAt": {
    "$date": "1589156850715"
  },
  "modifiedAt": {
    "$date": "1589157582623"
  },
  "origId": null,
  "name": "spirals",
  "notes": "",
  "rank": "1.0221149335383721",
  "private": false,
  "unlisted": true,
  "username": "mohammad",
  "avatarUrl": "https://lh3.googleusercontent.com/a-/AOh14GgRLVJR1d3hBTBUtVP87xxHCfbTV8QZ--NyKDA1tw",
  "settings": {
    "num": 38147,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/chibi-tech/lolitazia-season",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define NUM_SEGMENTS 128.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n#define PI radians(180.)\n\nconst float FARCLIPPED = 100000.  ;\nconst float NEARCLIPPED = 100.0\t  ; \nfloat g_cameraFar = 1000.0;\n\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nmat4 persp(float fov, float aspect, float zNear, float zFar) {\n  float f = tan(PI * 0.5 - 0.5 * fov);\n  float rangeInv = 1.0 / (zNear - zFar);\n\n  return mat4(\n    f / aspect, 0, 0, 0,\n    0, f, 0, 0,\n    0, 0, (zNear + zFar) * rangeInv, -1,\n    0, 0, zNear * zFar * rangeInv * 2., 0);\n}\n\nmat4 lookAt(vec3 eye, vec3 target, vec3 up) {\n  vec3 zAxis = normalize(eye - target);\n  vec3 xAxis = normalize(cross(up, zAxis));\n  vec3 yAxis = cross(zAxis, xAxis);\n\n  return mat4(\n    xAxis, 0,\n    yAxis, 0,\n    zAxis, 0,\n    eye, 1);\n}\n\nmat4 inverse(mat4 m) {\n  float\n      a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n      a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n      a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n      a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\n\n      b00 = a00 * a11 - a01 * a10,\n      b01 = a00 * a12 - a02 * a10,\n      b02 = a00 * a13 - a03 * a10,\n      b03 = a01 * a12 - a02 * a11,\n      b04 = a01 * a13 - a03 * a11,\n      b05 = a02 * a13 - a03 * a12,\n      b06 = a20 * a31 - a21 * a30,\n      b07 = a20 * a32 - a22 * a30,\n      b08 = a20 * a33 - a23 * a30,\n      b09 = a21 * a32 - a22 * a31,\n      b10 = a21 * a33 - a23 * a31,\n      b11 = a22 * a33 - a23 * a32,\n\n      det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  return mat4(\n      a11 * b11 - a12 * b10 + a13 * b09,\n      a02 * b10 - a01 * b11 - a03 * b09,\n      a31 * b05 - a32 * b04 + a33 * b03,\n      a22 * b04 - a21 * b05 - a23 * b03,\n      a12 * b08 - a10 * b11 - a13 * b07,\n      a00 * b11 - a02 * b08 + a03 * b07,\n      a32 * b02 - a30 * b05 - a33 * b01,\n      a20 * b05 - a22 * b02 + a23 * b01,\n      a10 * b10 - a11 * b08 + a13 * b06,\n      a01 * b08 - a00 * b10 - a03 * b06,\n      a30 * b04 - a31 * b02 + a33 * b00,\n      a21 * b02 - a20 * b04 - a23 * b00,\n      a11 * b07 - a10 * b09 - a12 * b06,\n      a00 * b09 - a01 * b07 + a02 * b06,\n      a31 * b01 - a30 * b03 - a32 * b00,\n      a20 * b03 - a21 * b01 + a22 * b00) / det;\n}\n\nmat4 cameraLookAt(vec3 eye, vec3 target, vec3 up) {\n    return inverse(lookAt(eye, target, up));\n}\n\nvec3 spiral(float vidx, float f, float b) {\n  float idx = mod(f + vidx * 0.4 + mod(time * 5.0, 20.0) / 20.0 * 100.0, 100.0);\n  float t = idx / 100.0;\n  float y = 50.0 - 100.0 * t;\n  float theta = t * 50.0;\n  float r = (50.0 - abs(y))/50.0 * 60.0;\n  return vec3(cos(theta) * r, y, sin(theta)*r);\n}\n\n\n\nvoid main() {\n       mat4 m  = persp(radians(60.),\n                     resolution.x/ resolution.y, \n                     NEARCLIPPED , \n                     FARCLIPPED);\n      vec3 target = vec3(-500.0, 0.0, -500.0  ) ;\n      vec3 up = vec3(0. ,1. , 0. ) ;\n      vec3 camTarget = target ; \n      vec3 camPos = vec3(250. ,500. ,800.);  \n      vec3 camForward = normalize(camTarget - camPos);\n      m *= cameraLookAt(camPos , camTarget, normalize(up));\n  \n  float spiralIdx = floor(vertexId / 100.0);\n  float vIdx = mod(vertexId, 100.0);\n  \n  float b = sin(time);\n  b = 100.0 / (1.0 + b * b * 20.0);\n  \n  vec3 spiralVertex = spiral(vIdx, 2.0, b);\n  spiralVertex += vec3(-mod(spiralIdx, 10.0) * 150.0, 0.0, -floor(spiralIdx / 10.0) * 150.0);\n\n\n  gl_Position = m * vec4(spiralVertex, 1);\n\n  //v_color = mix(vec4(hsv2rgb(vec3(hue, sat, val)), 1), background, v * v);\n  v_color = vec4(1, 1, 1, 1);\n  gl_PointSize = 2.0;\n}"
  },
  "screenshotURL": "data/images/images-dd1zkwbqiikmlvari-thumbnail.jpg",
  "hasSound": true,
  "views": "35",
  "likes": "0",
  "revisionId": "KNGXDXnev8ys6j266"
}