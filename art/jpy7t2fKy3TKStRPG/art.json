{
  "_id": "jpy7t2fKy3TKStRPG",
  "owner": {
    "_id": "exrQAEG45B5Exhhan",
    "createdAt": {
      "$date": {
        "$numberLong": "1684329330454"
      }
    },
    "profile": {
      "name": "Minsu Kim",
      "avatarUrl": "https://avatars.githubusercontent.com/minsu-kim-digipen?s=200"
    },
    "username": "minsu-kim-digipen"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1684759010542"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1684759886822"
    }
  },
  "origId": null,
  "name": "Audio Reactive Art Variation",
  "notes": "",
  "rank": {
    "$numberDouble": "1.3169878042808383"
  },
  "private": false,
  "unlisted": true,
  "username": "minsu-kim-digipen",
  "avatarUrl": "https://avatars.githubusercontent.com/minsu-kim-digipen?s=200",
  "settings": "{\"num\":100000,\"mode\":\"POINTS\",\"sound\":\"https://soundcloud.com/peter-jeong-284275317/last-minute-of-party?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0.0196078431372549,0.0196078431372549,0.0196078431372549,1],\"shader\":\"// Name : Minsu Kim\\n// Assignment : Exercise - Vertexshaderart : Audio Reactive\\n// Course : CS250\\n// Spring 2023\\n\\n// from: http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\\nvec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n#define PI radians(180.0)\\n\\nvoid main()\\n{\\n  float down = sqrt(vertexCount);\\n  float across = floor(vertexCount / down);\\n  \\n  float x = mod(vertexId, across);\\n  float y = floor(vertexId / across);\\n  \\n  \\n  float u = x / (across - 1.);\\n  float v = y / (across - 1.);\\n \\n  float xoff = 0.;//sin(time + y * 0.2) * 0.1;\\n  float yoff = 0.;//sin(time +  x * 0.3) * 0.2;\\n   \\n  \\n  \\n  float ux = u * 2. - 1. + xoff;\\n  float vy = v * 2. - 1. + yoff;\\n  \\n  \\n  vec2 xy = vec2(ux, vy) * 1.3;\\n  \\n\\n  float su = abs(u -.5) * 2.;\\n  float sv = abs(v - .5) * 2.;\\n  \\n  // Angular\\n  float au = abs(atan(su, sv)) / PI;\\n  float av = length(vec2(su, sv));\\n  \\n  // Sound\\n  float snd = texture2D(sound, vec2(au * .05, av * .25)).a;\\n  \\n  gl_Position = vec4(xy, 0, 1);\\n  \\n  float soff = 0.;//sin(time + x * y * 0.02) * 5.;\\n  \\n  gl_PointSize = pow(snd + .2, 5.) * 30.0 + soff;\\n  gl_PointSize *= 20. / across;\\n  gl_PointSize *= resolution.x / 600.;\\n  \\n  // [0, 1)\\n  float pump = pow(0.1, snd);\\n  float hue = v * .1 + snd * .2 + time * .1;//sin(time + v * 20.) * 0.05; \\n  float sat = mix(0.7, 1., pump);//mix(1., -10., 1. - av);\\n  float val = mix(0.1, 0.2 ,snd + .2 + 5.);//sin(time + v * u * 20.0) * .5 + .5;\\n  \\n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\\n}\"}",
  "screenshotURL": "data/images/images-kls32gpon54liu3f1-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "6"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "eaCJqGRpJCvEPPwdR"
}