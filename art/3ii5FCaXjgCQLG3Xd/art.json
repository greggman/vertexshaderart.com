{
  "_id": "3ii5FCaXjgCQLG3Xd",
  "owner": {
    "_id": "a8EF7kNs83hCEsJN6",
    "createdAt": {
      "$date": {
        "$numberLong": "1695812101151"
      }
    },
    "username": "jpaquim",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/374b09dacab582ca17818a391b59a214?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1695822299373"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1695822299373"
    }
  },
  "origId": null,
  "name": "lesson4",
  "notes": "",
  "rank": {
    "$numberDouble": "1.5063925966685583"
  },
  "private": true,
  "unlisted": false,
  "username": "jpaquim",
  "avatarUrl": "https://secure.gravatar.com/avatar/374b09dacab582ca17818a391b59a214?default=retro&size=200",
  "settings": {
    "num": 1000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/jpaquim/synth-jam-2",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "vec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0., 1.));\n  vec4 K = vec4(1., 2. / 3., 1. / 3., 3.);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6. - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0., 1.), c.y);\n}\n\n#define PI radians(180.)\n\nvoid main() {\n  float down = floor(sqrt(vertexCount));\n  float across = floor(vertexCount / down);\n  \n  float x = mod(vertexId, across);\n  float y = floor(vertexId / across);\n  \n  float u = x / (across - 1.);\n  float v = y / (across - 1.);\n  \n  float xoff = 0.;\n  // float xoff = sin(time + y * .2) * .1;\n  float yoff = 0.;\n  // float yoff = sin(time + x * .3) * .2;\n  \n  float ux = u * 2. - 1. + xoff;\n  float vy = v * 2. - 1. + yoff;\n  \n  vec2 xy = vec2(ux, vy) * 1.3;\n  \n  \n  float su = abs(u - .5) * 2.;\n  float sv = abs(v - .5) * 2.;\n  float au = abs(atan(su, sv)) / PI;\n  float av = length(vec2(su, sv));\n  float snd = texture2D(sound, vec2(au * .05, av * .25)).a;\n  \n  gl_Position = vec4(xy, 0, 1);\n  \n  float soff = 0.;\n  // float soff = sin(time + x * y * .02) * 5.;\n  \n  gl_PointSize = pow(snd + .2, 5.) * 30. + soff;\n  gl_PointSize *= 20. / across;\n  gl_PointSize *= resolution.x / 600.;\n  \n  float pump = step(.8, snd);\n  // float hue = 1.;\n  // float hue = u * .1 + sin(time + v * 20.) * .05;\n  float hue = u * .1 + snd * .2 + time * .1;\n  // float sat = 1.;\n  // float sat = 1. - av;\n  // float sat = mix(1., -10., av);\n  float sat = mix(0., 1., pump);\n  // float val = 1.;\n  // float val = sin(time + u * v * 20.) * .5 + .5;\n  // float val = pow(snd + .2, 5.);\n  float val = mix(.1, pow(snd + .2, 5.), pump);\n  \n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\n}"
  },
  "screenshotURL": "data/images/images-q2k1f5vmicqiplxev-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "1"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "ufPqM7GwMenRG5bgs"
}