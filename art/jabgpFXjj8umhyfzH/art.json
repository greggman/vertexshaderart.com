{
  "_id": "jabgpFXjj8umhyfzH",
  "owner": {
    "_id": "aQGBaB28tNPpoJahx",
    "createdAt": {
      "$date": 1523273254098
    },
    "profile": {
      "first_name": "Brendon",
      "last_name": "Conradie",
      "avatarUrl": "https://lh6.googleusercontent.com/-gsD8A6mNaf8/AAAAAAAAAAI/AAAAAAAAA8Q/XILS5Uddduw/photo.jpg",
      "info": "Wannabe graphics programmer working in the mobile gaming industry"
    },
    "username": "brendon"
  },
  "createdAt": {
    "$date": 1523371418615
  },
  "modifiedAt": {
    "$date": 1525449610938
  },
  "origId": null,
  "name": "First Naive Starfield",
  "notes": "First naive implementation of a starfield.",
  "rank": 1.542389191548812,
  "private": false,
  "unlisted": true,
  "username": "brendon",
  "avatarUrl": "https://lh6.googleusercontent.com/-gsD8A6mNaf8/AAAAAAAAAAI/AAAAAAAAA8Q/XILS5Uddduw/photo.jpg",
  "settings": {
    "num": 100000,
    "mode": "POINTS",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main() {\n  float n = vertexId / vertexCount;\n  float randX = rand(vec2(n, 10.0));\n  float randY = rand(vec2(10.0, n));\n\n  float x = randX * 10.0;\n  float y = randY * 10.0;\n  float vy = mod((n * n) * time * 0.1, 2.0) + n * 5.0;\n  \n  gl_Position = vec4(x - 5.0, y - vy, 0, n);\n  gl_PointSize = n * 2.0;\n  v_color = vec4(n, n, abs(cos(time * n)), n);\n}"
  },
  "screenshotURL": "data/images/images-oczwqt9u1p2hz6w3v-thumbnail.jpg",
  "hasSound": "",
  "views": 7,
  "likes": 0,
  "revisionId": "XWN244MhR6y4avvEb"
}