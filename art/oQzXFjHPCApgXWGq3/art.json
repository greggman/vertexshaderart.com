{
  "_id": "oQzXFjHPCApgXWGq3",
  "owner": {
    "_id": "PaTtiG9fc6wWxh69k",
    "createdAt": {
      "$date": 1501018355084
    },
    "username": "sylistine",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/3a93b17a430d08943deebdfb93d4cef3?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": 1501115274401
  },
  "modifiedAt": {
    "$date": 1501115274401
  },
  "origId": "PHANwhhRXk62fsaeC",
  "name": "Simple Spheres",
  "notes": "",
  "rank": 1.554248658925349,
  "private": false,
  "unlisted": false,
  "username": "sylistine",
  "avatarUrl": "https://secure.gravatar.com/avatar/3a93b17a430d08943deebdfb93d4cef3?default=retro&size=200",
  "settings": {
    "num": 6000,
    "mode": "POINTS",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      1,
      1,
      1,
      1
    ],
    "shader": "#define PI radians(180.)\n\nmat4 aspect = mat4(\n  1, 0, 0, 0,\n  0, resolution.x / resolution.y, 0, 0,\n  0, 0, 1, 1,\n  0, 0, 0, 1);\n\nmat4 scale(float s) {\n  return mat4(\n    s, 0, 0, 0,\n    0, s, 0, 0,\n    0, 0, s, 0,\n    0, 0, 0, 1);\n}\n\nmat4 rotY() {\n  float s = sin(time / 2.);\n  float c = cos(time / 2.);\n  return mat4(\n    c, 0, -s, 0,\n    0, 1, 0, 0,\n    s, 0, c, 0,\n    0, 0, 0, 1);\n}\n\nmat4 rotX() {\n  float deg = radians((-0.5 * (mouse.y + 1.)) * 360.);\n  float s = sin(deg);\n  float c = cos(deg);\n  return mat4(\n    1, 0, 0, 0,\n    0, c, -s, 0,\n    0, s, c, 0,\n    0, 0, 0, 1);\n}\n\nvoid main()\n{\n  float pointsPerSphere = 1000.;\n  float pointsPerLoop = 10.;\n  \n  float sphereId = floor(vertexId / pointsPerSphere);\n  float spherePointId = mod(vertexId, pointsPerSphere);\n  \n  vec4 center = vec4(sin(sphereId) * 5., cos(sphereId) * 5., 0, 1);\n  \n  float yPos = cos(spherePointId / pointsPerSphere * PI);\n  float xyLen = sin(spherePointId / pointsPerSphere * PI);\n  float xPos = sin(spherePointId / pointsPerLoop) * xyLen;\n  float zPos = cos(spherePointId / pointsPerLoop) * xyLen;\n  \n  vec4 pos = vec4(xPos, yPos, zPos, 1) + center;\n  pos =  aspect * scale(0.1) * rotX() * rotY() * pos;\n  gl_Position = pos;\n  gl_PointSize = (-pos.z + 1.) * 4.;\n  v_color = mix(vec4(1, 0, 0, 1), vec4(0, 0, 1, 1), spherePointId / pointsPerSphere);\n}"
  },
  "screenshotURL": "data/images/images-er8x7nsxo8aq0bsl7-thumbnail.jpg",
  "hasSound": "",
  "views": 119,
  "likes": 0,
  "revisionId": "nEHdeuZ9nwChhxDNe"
}