{
  "_id": "4LYwmawuudnFoyRng",
  "owner": {
    "_id": "PaTtiG9fc6wWxh69k",
    "createdAt": {
      "$date": 1501018355084
    },
    "username": "sylistine",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/3a93b17a430d08943deebdfb93d4cef3?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": 1501896512092
  },
  "modifiedAt": {
    "$date": 1501896512092
  },
  "origId": "tneny66CTjxFbesnu",
  "name": "fov test",
  "notes": "This demo is for experimenting with the FOV part of a perspective camera matrix.",
  "rank": 1.9939927677075129,
  "private": false,
  "unlisted": true,
  "username": "sylistine",
  "avatarUrl": "https://secure.gravatar.com/avatar/3a93b17a430d08943deebdfb93d4cef3?default=retro&size=200",
  "settings": {
    "num": 2678,
    "mode": "LINE_STRIP",
    "sound": "https://soundcloud.com/aivisura/love-like-you?in=aivisura/sets/steven-universe",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define PI radians(180.)\n#define TAU radians(360.)\n\nvoid main()\n{\n  float pointsPerLoop = 5.;\n  float deg = radians(vertexId / pointsPerLoop * 360. + vertexId * TAU + (time * 20.));\n  float z = vertexId * 0.25;\n  float sx = (deg - floor(deg - TAU) * TAU) / TAU;\n  float sy = z / (vertexCount * 0.5);\n  float radius = 1. + pow(texture2D(sound, vec2(sx * 0.5, sy * 0.5)).a, 5.);\n  vec3 pos = vec3(sin(deg) * radius, cos(deg) * radius, z);\n  \n  \n  // Applied a sin wave to the tex2d sample as a smoothing operation\n  //float fov = (sin(radians(texture2D(sound, vec2(sx * 0.5, 0)).a) * 90.) + 0.1) / 256.;\n  \n  mat4 camera = mat4(\n    resolution.y / resolution.x, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 0.1, 0.1,\n    0, 0, 0, 1);\n  \n  gl_Position = camera * vec4(pos.xyz, 1);\n  v_color = vec4(1, (vertexId / vertexCount) / 2. + 0.5, 1, 1);\n}"
  },
  "screenshotURL": "data/images/images-qx2h4le041k944oyb-thumbnail.jpg",
  "hasSound": true,
  "views": 44,
  "likes": 0,
  "revisionId": "ET32ykmenSLm3j6bW"
}