{
  "_id": "kHbJM2qswt6BscdP3",
  "owner": {
    "_id": "Pexi77zfde4iNKmrT",
    "createdAt": {
      "$date": {
        "$numberLong": "1493741221077"
      }
    },
    "profile": {
      "name": "Kolargon Generative",
      "avatarUrl": "https://lh3.googleusercontent.com/-tiKYx1U71-Q/AAAAAAAAAAI/AAAAAAAAAGg/b-eEUsFpspc/photo.jpg"
    },
    "username": "kolargon"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1515754919418"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1515754919418"
    }
  },
  "origId": "cMzGhMJLeg2FmmwWM",
  "name": "black and white",
  "notes": "",
  "rank": {
    "$numberDouble": "1.6811017606541476"
  },
  "private": true,
  "unlisted": false,
  "username": "kolargon",
  "avatarUrl": "https://lh3.googleusercontent.com/-tiKYx1U71-Q/AAAAAAAAAAI/AAAAAAAAAGg/b-eEUsFpspc/photo.jpg",
  "settings": {
    "num": 100000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/billx/tandava-billx-remix",
    "lineSize": "NATIVE",
    "backgroundColor": [
      1,
      1,
      1,
      1
    ],
    "shader": "#define ITERS 40\n#define M_PI 3.1415926535897932384626433832795\n\nvec3 getColor(int index)\n{\n\tif (index == 0)\n\t\treturn vec3(0.0, 0.0, 0.0);\n\tif (index == 1)\n\t\treturn vec3(1., 1., 1.);\n\tif (index == 2)\n\t\treturn vec3(0.0, 0.0, 0.0);\n\tif (index == 3)\n\t\treturn vec3(1., 1., 1.);\n\tif (index == 4)\n\t\treturn vec3(0.0, 0.0, 0.0);\n\tif (index == 5)\n\t\treturn vec3(1., 1., 1.);\n\tif (index == 6)\n\t\treturn vec3(0.0, 0.0, 0.);\n\tif (index == 7)\n\t\treturn vec3(1., 1., 1.);\n\t\n}\n\n\nvoid main ()\n{\n  //float snd = texture2D(sound, vec2(0.,  0.)).a;\n  float finalVertexCount =  vertexCount;//max((0.5*snd)*vertexCount,5000.);\n  float ratio = resolution.x/resolution.y;\n  float numAcrossDown = floor(sqrt(finalVertexCount));\n  \n  float maxVertexCount =   numAcrossDown* numAcrossDown;\n  \n  float finalVertexId = mod(vertexId, maxVertexCount);\n  \n  float x = mod(finalVertexId,  numAcrossDown);\n  float y = floor(finalVertexId /  numAcrossDown);\n  \n  float u = x / numAcrossDown;\n  float v = (y / numAcrossDown)*ratio;\n  \n  float ux = ( u  * 2.0 - 1.0) *1./ratio;\n  float vy = ( v/ratio * 2.0 - 1.0);\n  \n\n  \n  \n  //apply fragment logic\n\n\tconst float colorCount = 8.0;\n\n\tvec2 position = vec2(u,v);\n  \n\tposition.x = abs(position.x - 0.5);\n    if(position.y>1.)\n      position.y = 2.-position.y;\n\t\n\tfloat j = 1.0;\n\tj += position.y + position.x/position.y;\n\tj *= 1.;\n\tj = mod(j + time/2., 1.0);\n\t\n\tfloat i = mod(position.x  * colorCount + 10.*sin(time/12.0), sin(time/12.0) + 2.0);\n\ti = mod(position.y * colorCount * j, i / j);\n\ti *= 2.;\n\t\n\ti = mod(i - time/2.0 - j, colorCount);\n\t\n\t\n \n  gl_Position = vec4(ux, vy, 0, 1);\n  \n  gl_PointSize = (resolution.y/numAcrossDown) * 1.;//(resolution.y/numAcrossDown)*2.-1.;\n\n  v_color = vec4( getColor(int(i)), 1.0 );\n  \n\n}"
  },
  "screenshotURL": "data/images/images-3or9x7trr98pwaxtq-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "12"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "WyNgdjxDvkuCQ27Lw"
}