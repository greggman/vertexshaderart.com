{
  "_id": "6qhRHbFn8B6GeD5Ni",
  "owner": {
    "username": "anon"
  },
  "createdAt": {
    "$date": "1446060451952"
  },
  "origId": null,
  "name": "unnamed2",
  "username": "-anon-",
  "settings": {
    "num": 20000,
    "mode": "LINES",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      1,
      1,
      1,
      1
    ],
    "shader": "#define PI 3.14159\n#define NUM_SEGMENTS 2.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n#define STEP 1.0\n//#define FIT_VERTICAL\n\nvoid main() {\n  float localTime = time + 20.0;\n  float point = mod(floor(vertexId / 2.0) + mod(vertexId, 2.0) * STEP, NUM_SEGMENTS);\n  float count = floor(vertexId / NUM_POINTS);\n  float offset = count * sin(time * 0.01) + 5.0;\n  float angle = point * PI * 2.0 / NUM_SEGMENTS + offset;\n  float radius = pow(count * 0.00014, 1.0);\n  float c = cos(angle + localTime) * radius;\n  float s = sin(angle + localTime) * radius;\n  float orbitAngle =  pow(count * 0.025, 0.8);\n  float innerRadius = pow(count * 0.0005, 1.2);\n  float oC = cos(orbitAngle + count * 0.0001) * innerRadius;\n  float oS = sin(orbitAngle + count * 0.0001) * innerRadius;\n\n  #ifdef FIT_VERTICAL\n    vec2 aspect = vec2(resolution.y / resolution.x, 1);\n  #else\n    vec2 aspect = vec2(1, resolution.x / resolution.y);\n  #endif\n\n  vec2 xy = vec2(\n      oC + c,\n      oS + s);\n  gl_Position = vec4(xy * aspect + mouse * 0.1, 0, 1);\n\n  //float b = mix(0.0, 0.7, step(0.5, mod(count + localTime * 1.0, 6.0) / 2.0));\n  float b = 2.0 - pow(sin(count * 0.4) * 0.5 + 0.5, 10.0);\n  b = 0.0;mix(0.0, 0.7, b);\n  v_color = vec4(b, b, b, 1);\n}"
  },
  "screenshotURL": "data/images/images-6ne2eg69apigwgclz-thumbnail.jpg",
  "views": "169",
  "likes": "0",
  "revisionId": "NmRdMXB27qGy58oXX",
  "modifiedAt": {
    "$date": "1446060451958"
  },
  "rank": "1.8049750840978451"
}