{
  "_id": "SWCEzMNTmvcDAxs3n",
  "owner": {
    "_id": "T2kiqcyrWpNY4YuE7",
    "createdAt": {
      "$date": 1704921597360
    },
    "profile": {
      "name": "Simon Taeter",
      "avatarUrl": "https://avatars.githubusercontent.com/staeter?s=200"
    },
    "username": "staeter"
  },
  "createdAt": {
    "$date": 1704921618110
  },
  "modifiedAt": {
    "$date": 1704972683582
  },
  "origId": null,
  "name": "simple pixel screen",
  "notes": "",
  "rank": 1.5872631437608813,
  "private": false,
  "unlisted": true,
  "username": "staeter",
  "avatarUrl": "https://avatars.githubusercontent.com/staeter?s=200",
  "settings": {
    "num": 2527,
    "mode": "POINTS",
    "sound": "",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define NUM_SEGMENTS 128.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  float resX = resolution.x;\n  float resY = resolution.y;\n  float resArea = resX * resY;\n  float areaPerVertex = resArea/vertexCount;\n  float vertLen = sqrt(areaPerVertex);\n  float vertCountX = floor(resX/vertLen);\n  float vertCountY = floor(resY/vertLen);\n  \n  float x = (mod(vertexId, vertCountX)-0.5)/(vertCountX-1.);\n  float y = (floor(vertexId / vertCountX)-0.5)/(vertCountY-1.);\n  \n  \n    \n  gl_Position = vec4((x - 0.5)*2., (y - 0.5)*2., 0, 1);\n  gl_PointSize = vertLen*1.05;\n  v_color = vec4(hsv2rgb(vec3(x+y+time/10., 1, 1)), 1);\n}"
  },
  "screenshotURL": "data/images/images-43doihtyjc2ogjpvn-thumbnail.jpg",
  "hasSound": "",
  "views": 4,
  "likes": 0,
  "revisionId": "XHpqHETQE5od5NNyZ"
}