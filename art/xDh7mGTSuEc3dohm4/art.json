{
  "_id": "xDh7mGTSuEc3dohm4",
  "owner": {
    "_id": "39BPnoePCWss9YjYg",
    "createdAt": {
      "$date": {
        "$numberLong": "1634920729203"
      }
    },
    "profile": {
      "first_name": "Zach",
      "last_name": "Behrman",
      "avatarUrl": "https://lh3.googleusercontent.com/a-/AOh14GjSu-FKN5gL_Js9LaWAksIXTLt8FE8JhRtiWe8XJQ=s96-c"
    },
    "username": "zach"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1634920744666"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1635065602965"
    }
  },
  "origId": null,
  "name": "WIP",
  "notes": "GLSL Vertex Shader for first show",
  "rank": {
    "$numberDouble": "1.6824954290646779"
  },
  "private": false,
  "unlisted": true,
  "username": "zach",
  "avatarUrl": "https://lh3.googleusercontent.com/a-/AOh14GjSu-FKN5gL_Js9LaWAksIXTLt8FE8JhRtiWe8XJQ=s96-c",
  "settings": {
    "num": 100000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/user-234697785/sets/future-funk",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "void main() {\n  \n  \n  int numShapes = 3;\n  \n  // Shape 1\n  float a1 = 1.0;\n  float b1 = 2.0;\n  float c1 = 4.36;\n  float d1 = -3.0;\n  \n  // Shape 2\n  float a2 = 2.53;\n  float b2 = 1.67;\n  float c2 = 1.26;\n  float d2 = 2.24;\n  \n  // Shape 3\n  float a3 = -1.54;\n  float b3 = 4.21;\n  float c3 = 1.53;\n  float d3 = 1.04;\n  \n  float s = texture2D(sound, vec2(3./5., 1./ 5.)).a;\n  \n  // Spread between the bands. KEEP BETWEEN 0-1\n  float spread = mix(0., 1., mouse.y);\n  \n  \n  float cycleTime = 3.;\n  float stage = mod(time/20., cycleTime);\n  \n  float a, b, c, d;\n  \n  // Mix between first and second shape.\n  if(stage < (cycleTime / float(numShapes))) {\n    a = mix(a1, a2, stage);\n    b = mix(b1, b2, stage);\n    c = mix(c1, c2, stage);\n    d = mix(d1, d2, stage);  \n  } else if (stage < 2. * (cycleTime / float(numShapes))) {\n    a = mix(a2, a3, mod(stage, (cycleTime / float(numShapes))));\n    b = mix(b2, b3, mod(stage, (cycleTime / float(numShapes))));\n    c = mix(c2, c3, mod(stage, (cycleTime / float(numShapes))));\n    d = mix(d2, d3, mod(stage, (cycleTime / float(numShapes))));\n  } else {\n    a = mix(a3, a1, mod(stage, (cycleTime / float(numShapes))));\n    b = mix(b3, b1, mod(stage, (cycleTime / float(numShapes))));\n    c = mix(c3, c1, mod(stage, (cycleTime / float(numShapes))));\n    d = mix(d3, d1, mod(stage, (cycleTime / float(numShapes))));\n  }\n  \n  gl_PointSize = 0.5;  \n  \n  // Find pixel coordinates\n  float x = mod(vertexId, 25.);\n  float y = floor(vertexId/ 25.);\n  \n  // Used in calculating future point\n  float tmpX;\n  float tmpY;\n  \n  for (int i = 0; i < 5; i++) {\n    tmpX = x; tmpY = y;\n    x = (sin(a * tmpY) - cos(b * tmpX));\n    y = (sin(c * tmpX) - cos(d * tmpY));\n  }\n  \n  int band = int(mod(vertexId, 3.));\n  \n  \n  if(band == 0) {\n    v_color = vec4(1.0, 0.0, 0.0, 1.0);\n    gl_Position = vec4(x / 5., y / 5. - (0.1 * spread), 0., 0.7);\n  } else if(band == 1) {\n    v_color = vec4(0.0, 1.0, 0.0, 1.0);\n  \tgl_Position = vec4(x / 5., y / 5., 0., 0.7);\n  } else {\n    v_color = vec4(0.0, 0.0, 1.0, 1.0);\n  \tgl_Position = vec4(x / 5., y / 5. + (0.1 * spread), 0., 0.7);\n  }\n  \n  //gl_Position = vec4(x / 5., y / 5., 0., 0.7);\n}"
  },
  "screenshotURL": "data/images/images-patj5a013yz61fk1n-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "6"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "5EeTfy3ne8hHdiez3"
}