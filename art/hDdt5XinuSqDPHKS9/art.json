{
  "_id": "hDdt5XinuSqDPHKS9",
  "owner": {
    "_id": "Pexi77zfde4iNKmrT",
    "createdAt": {
      "$date": {
        "$numberLong": "1493741221077"
      }
    },
    "profile": {
      "name": "Kolargon Generative",
      "avatarUrl": "https://lh3.googleusercontent.com/-tiKYx1U71-Q/AAAAAAAAAAI/AAAAAAAAAGg/b-eEUsFpspc/photo.jpg"
    },
    "username": "kolargon"
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1523525879849"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1523525879849"
    }
  },
  "origId": "2oQkSRKgK2ZWmq6LM",
  "name": "face test",
  "notes": "http://glslsandbox.com/e#38484.0",
  "rank": {
    "$numberDouble": "1.8628719394296647"
  },
  "private": true,
  "unlisted": false,
  "username": "kolargon",
  "avatarUrl": "https://lh3.googleusercontent.com/-tiKYx1U71-Q/AAAAAAAAAAI/AAAAAAAAAGg/b-eEUsFpspc/photo.jpg",
  "settings": {
    "num": 50000,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/user-158087960/studiomix-douzirec-06-2007-flac",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "//Created by K Machine from http://glslsandbox.com/e#45825.0\nvec4 simFragCoord;\nvec2 vertexResolution = resolution;\n// by @301z\n// best viewed in 0.5\n\n#ifdef GL_ES\n//precision  mediump float;\n#endif\n\n//uniform  vec2 vertexResolution;\n\n#define rgb(r,g,b) vec3(float(r) / 255.0, float(g) / 255.0, float(b) / 255.0)\nfloat borderWidth = 1.0 / vertexResolution.y;\nvec3 borderColor = rgb(32, 32, 32);\nvec3 hairColor0 = rgb(151, 200, 234);\nvec3 hairColor1 = rgb(77, 135, 192);\nvec3 hairColor2 = rgb(58, 103, 151);\nvec3 faceColor0 = rgb(247, 223, 204);\nvec3 faceColor1 = rgb(209, 173, 159);\nvec3 faceColor2 = rgb(180, 148, 133);\nvec3 eyeColor0 = rgb(145, 164, 176);\nvec3 eyeColor1 = rgb(207, 216, 218);\n\nvec3 eyeColor2 = rgb(255, 255, 255);\nvec3 eyeColor3 = rgb(0, 0, 0);\nvec3 eyeColor4 = hairColor0;\nvec3 eyeColor5 = hairColor2;\nvec3 eyeColor6 = hairColor1;\nvec3 mouthColor0 = rgb(78, 53, 40);\nvec3 mouthColor1 = rgb(152, 78, 69);\nvec3 mouthColor2 = rgb(170, 92, 83);\nvec3 backgroundColor = rgb(51, 124, 221);\n#undef rgb\n\nvec2 position() {\n  return vec2((simFragCoord.x - vertexResolution.x), simFragCoord.y) / vertexResolution.y;\n}\n\nfloat cross2(vec2 v0, vec2 v1) {\n  return v0.x * v1.y - v0.y * v1.x;\n}\n\nfloat circle(vec2 centre, float radius) {\n  return distance(centre, position()) - radius;\n}\n\nfloat ellipse(vec2 focus0, vec2 focus1, float radius) {\n  vec2 p = position();\n  return distance(p, focus0) + distance(p, focus1) - distance(focus0, focus1) * radius;\n}\n\nbool inside(float f) {\n  return f < -borderWidth;\n}\n\nbool outside(float f) {\n  return f > borderWidth;\n}\n\nbool hair0(out vec3 color) {\n  float upper = circle(vec2(-1.06, 0.795), 0.64);\n  float lower = circle(vec2(-0.851, -0.011), 1.001);\n  float right = circle(vec2(-0.84, 0.74), 0.5);\n  if (outside(upper) || inside(lower) || inside(right))\n    return false;\n  if (!inside(upper) || !outside(lower))\n    color = borderColor;\n  else {\n    float upper = circle(vec2(-1.01, 0.74), 0.6);\n    float lower = circle(vec2(-1.07, 0.13), 0.77);\n    color = (inside(upper) && outside(lower)) ? hairColor1 : hairColor0;\n  }\n  return true;\n}\n\nbool hair1(out vec3 color) {\n  float upper = circle(vec2(-0.84, 0.74), 0.5);\n  float lower = circle(vec2(-1.8, 1.62), 0.9);\n  if (outside(upper) || outside(lower))\n    return false;\n  color = (inside(upper) && inside(lower)) ? hairColor1 : borderColor;\n  return true;\n}\n\nbool hair2(out vec3 color) {\n  float upper = circle(vec2(-0.695, 0.74), 0.5);\n  float lower = circle(vec2(-3.5, 8.46), 8.1);\n  if (outside(upper) || outside(lower))\n    return false;\n  if (!inside(upper) || !inside(lower))\n    color = borderColor;\n  else {\n    float left = circle(vec2(-0.675, 0.78), 0.502);\n    if (outside(left))\n      color = hairColor0;\n    else {\n      float right = circle(vec2(-1.77, 2.99), 2.4);\n      color = inside(right) ? hairColor1 : hairColor2;\n    }\n  }\n  return true;\n}\n\nbool hair3a(out vec3 color) {\n  float left = circle(vec2(-2.77, 1.86), 2.5);\n  float right = circle(vec2(-1.544, 1.777), 1.44);\n  if (inside(left) || outside(right))\n    return false;\n  color = hairColor1;\n  return true;\n}\n\nbool hair3b(out vec3 color) {\n  float upper = circle(vec2(-2.654, 1.92), 2.39);\n  float lower = circle(vec2(-1.44, 1.777), 1.388);\n  float right = circle(vec2(-0.5, 0.5), 0.515);\n  if (inside(upper) || outside(lower) || outside(right))\n    return false;\n  color = (outside(upper) && inside(lower)) ? hairColor2 : borderColor;\n  return true;\n}\n\nbool hair4a(out vec3 color) {\n  vec2 p0 = vec2(1.332, 0.8), p1 = vec2(-1.5, 0.36);\n  float r0 = 1.7, r1 = distance(p0, p1) - r0;\n  float left0 = circle(p0, r0), left1 = circle(p1, r1);\n  float right = circle(vec2(-0.5, 0.97), 0.78);\n  bool upper = cross2(position() - p1, p0 - p1) < 0.0;\n  if ((upper && outside(left0)) || (!upper && inside(left1)) || outside(right))\n    return false;\n  color = ((upper && inside(left0)) || (!upper && outside(left1))) && inside(right) ? hairColor2 : borderColor;\n  return true;\n}\n\nbool hair4b(out vec3 color) {\n  vec2 p0 = vec2(0.504, 0.91), p1 = vec2(-1.7, 0.25);\n  float r0 = 0.79, r1 = distance(p0, p1) - r0;\n  float left0 = circle(p0, r0), left1 = circle(p1, r1);\n  float right = circle(vec2(-0.62, 0.98), 0.78);\n  bool upper = cross2(position() - p1, p0 - p1) < 0.0;\n  if ((upper && outside(left0)) || (!upper && inside(left1)) || outside(right))\n    return false;\n  color = hairColor1;\n  return true;\n}\n\nbool hair5(out vec3 color) {\n  float left = circle(vec2(1.13, -1.07), 2.02);\n  float right = circle(vec2(-1.505, 1.15), 1.66);\n  if (outside(left) || outside(right))\n    return false;\n  if (!inside(left) || !inside(right))\n    color = borderColor;\n  else {\n    float upper = circle(vec2(1.205, 0.28), 1.58);\n    float lower = circle(vec2(-0.57, 0.78), 0.69);\n    float right = circle(vec2(-1.52, 1.10), 1.6);\n    color = ((inside(upper) && inside(lower)) || outside(right)) ? hairColor2 : hairColor1;\n  }\n  return true;\n}\n\nbool layer0(out vec3 color) {\n  if (hair3a(color))\n    return true;\n  if (hair2(color))\n    return true;\n  if (hair3b(color))\n    return true;\n  if (hair4b(color))\n    return true;\n  if (hair4a(color))\n    return true;\n  if (hair5(color))\n    return true;\n  if (hair1(color))\n    return true;\n  return hair0(color);\n}\n\nbool face0(out vec3 color) {\n  if (inside(circle(vec2(-0.7, 0.0), 0.2)))\n    color = faceColor1;\n  else {\n    vec2 p3 = vec2(-1.02, 0.25);\n    float r3 = 0.41, c3 = circle(p3, r3);\n    vec2 p2 = vec2(-1.12, 0.203);\n    float r2 = r3 - distance(p2, p3), c2 = circle(p2, r2);\n    vec2 p1 = vec2(-2.7, 0.87);\n    float r1 = distance(p1, p2) - r2, c1 = circle(p1, r1);\n    vec2 p0 = vec2(-0.5, 0.66);\n    float r0 = distance(p0, p1) - r1, c0 = circle(p0, r0);\n    if (cross2(position() - p0, p1 - p0) > 0.0) {\n      if (outside(c0))\n        return false;\n      color = inside(c0) ? (inside(circle(vec2(-1.8, 1.57), 0.9)) ? faceColor2 : faceColor1) : borderColor;\n   } else if (cross2(position() - p1, p2 - p1) < 0.0) {\n      if (inside(c1))\n        return false;\n      color = outside(c1) ? (((inside(circle(vec2(-0.95, 0.31), 0.49))) && (c1 < 0.035)) ? faceColor0 : faceColor1) : borderColor;\n    } else if (cross2(position() - p2, p3 - p2) < 0.0) {\n      if (outside(c2))\n        return false;\n      color = inside(c2) ? ((c2 > -0.035) ? faceColor0 : faceColor1) : borderColor;\n    } else {\n      if (outside(c3))\n        return false;\n      color = inside(c3) ? ((c3 > -0.035) ? faceColor0 : faceColor1) : borderColor;\n    }\n  }\n  return true;\n}\n\nbool face1(out vec3 color) {\n  float upper = circle(vec2(-0.6, 0.72), 0.5);\n  float lower = circle(vec2(-3.5, 8.004), 7.7);\n  if (outside(upper) || outside(lower))\n    return false;\n  color = faceColor2;\n  return true;\n}\n\nbool face2(out vec3 color) {\n  float upper = circle(vec2(-3.182, 1.75), 2.8);\n  float lower = circle(vec2(-1.44, 1.777), 1.388);\n  if (inside(upper) || outside(lower))\n    return false;\n  color = faceColor2;\n  return true;\n}\n\nbool face3(out vec3 color) {\n  vec2 p0 = vec2(1.332-0.044, 0.8), p1 = vec2(-1.5, 0.36);\n  float r0 = 1.7, r1 = distance(p0, p1) - r0;\n  float left0 = circle(p0, r0), left1 = circle(p1, r1);\n  bool upper = cross2(position() - p1, p0 - p1) < 0.0;\n  if ((upper && outside(left0)) || (!upper && inside(left1)))\n    return false;\n  color = faceColor2;\n  return true;\n}\n\nbool layer1(out vec3 color) {\n  if (outside(circle(vec2(-1.2, 0.7), 1.0)))\n    return false;\n  if (face3(color))\n    return true;\n  if (face2(color))\n    return true;\n  if (face1(color))\n    return true;\n  return face0(color);\n}\n\nbool layer2(out vec3 color) {\n  if (inside(circle(vec2(0.0, 0.0), 0.5))) {\n    color = hairColor1;\n    return true;\n  }\n  vec2 p2 = vec2(-0.42, -0.1);\n  float r2 = 1.14, c2 = circle(p2, r2);\n  vec2 p1 = vec2(-3.5, 1.56);\n  float r1 = distance(p1, p2) - r2, c1 = circle(p1, r1);\n  bool b1 = inside(circle(vec2(-0.847, 0.5), 0.55));\n  bool b2 = inside(circle(vec2(-0.94, -0.06), 0.56));\n  if (cross2(position() - p1, p2 - p1) < 0.0) {\n    if (inside(c1))\n      return false;\n    color = outside(c1) ? (b1 ? hairColor1 : hairColor0) : borderColor;\n  } else {\n    if (outside(c2))\n      return false;\n    color = inside(c2) ? ((b1 || b2) ? hairColor1 : hairColor0) : borderColor;\n  }\n  return true;\n}\n\nbool leftEye0(out vec3 color) {\n  float top = circle(vec2(-0.866, 0.4899), 0.428);\n  float left = circle(vec2(-0.986, 0.6), 0.3);\n  float bottom = circle(vec2(-1.14, 0.604), 0.2);\n  float right = circle(vec2(-1.54, 0.7), 0.51);\n  if (outside(top) || outside(left) || outside(bottom) || outside(right))\n    return false;\n  if (outside(circle(vec2(-0.919, 0.53), 0.344)))\n    color = borderColor;\n  else if (outside(circle(vec2(-0.918, 0.5), 0.338)))\n    color = eyeColor0;\n  else if (inside(circle(vec2(-1.05, 0.77), 0.1)) && outside(circle(vec2(-1.101, 0.67), 0.08)))\n    color = eyeColor0;\n  else\n    color = eyeColor1;\n  return true;\n}\n\nbool leftEye1(out vec3 color) {\n  if (outside(circle(vec2(-1.0, 0.7), 0.08))\n      || inside(circle(vec2(-1.092, 0.667), 0.1))\n        || inside(circle(vec2(-0.919, 0.8), 0.1)))\n    return false;\n  if (outside(circle(vec2(-1.101, 0.69), 0.1)) && outside(circle(vec2(-0.879, 0.9), 0.2)))\n    return false;\n  color = borderColor;\n  return true;\n}\n\nbool leftEye2(out vec3 color) {\n  if (outside(ellipse(vec2(-1.156, 0.435), vec2(-1.091, 0.75), 1.074)))\n    return false;\n  if (inside(ellipse(vec2(-1.156, 0.636), vec2(-1.122, 0.726), 1.16))) {\n    color = eyeColor2;\n    return true;\n  }\n  if (inside(ellipse(vec2(-1.121, 0.593), vec2(-1.116, 0.614), 1.168))\n     || inside(ellipse(vec2(-1.113, 0.488), vec2(-1.111, 0.505), 1.23))) {\n    color = eyeColor4;\n    return true;\n  }\n  if (inside(ellipse(vec2(-1.154, 0.45), vec2(-1.1, 0.75), 1.05))\n      && inside(ellipse(vec2(-1.163, 0.445), vec2(-1.121, 0.552), 1.3))\n        && outside(ellipse(vec2(-1.13, 0.501), vec2(-1.116, 0.614), 1.177))) {\n    color = eyeColor6;\n    return true;\n  }  if (inside(ellipse(vec2(-1.152, 0.445), vec2(-1.091, 0.75), 1.067))\n      && inside(ellipse(vec2(-1.163, 0.445), vec2(-1.121, 0.565), 1.3))\n        && outside(ellipse(vec2(-1.128, 0.52), vec2(-1.116, 0.614), 1.177))) {\n    color = eyeColor5;\n    return true;\n  }\n  color = eyeColor3;\n  return true;\n}\n\nbool leftEye(out vec3 color) {\n  if (leftEye2(color))\n    return true;\n  if (leftEye1(color))\n    return true;\n  return leftEye0(color);\n}\n\nbool rightEye0(out vec3 color) {\n  if (outside(circle(vec2(-0.609, 0.542), 0.129))\n    && inside(circle(vec2(-0.61, 0.584), 0.101))) {\n    color = borderColor;\n    return true;\n  }\n  if (inside(circle(vec2(-2.654, 1.92), 2.39))\n    || outside(circle(vec2(-0.685, 0.42), 0.285))\n      || inside(circle(vec2(-0.683, 0.432), 0.262))\n        || outside(circle(vec2(-0.638, 0.516), 0.3)))\n    return false;\n  color = borderColor;\n  return true;\n}\n\nbool rightEye1(out vec3 color) {\n  if (outside(circle(vec2(-2.654, 1.92), 2.39))\n    || outside(circle(vec2(-0.627, 0.583), 0.11))\n      || inside(circle(vec2(-0.65, 0.582), 0.11)))\n    return false;\n  color = borderColor;\n  return true;\n}\n\nbool rightEye2(out vec3 color) {\n  if (outside(circle(vec2(-0.57, 0.38), 0.3))\n    || outside(circle(vec2(-0.166, 0.34), 0.59))\n      || outside(circle(vec2(-0.34, 0.6), 0.505))\n        || outside(circle(vec2(-0.47, 0.763), 0.54))\n          || outside(circle(vec2(-0.638, 0.52), 0.3))\n            || outside(circle(vec2(-0.685, 0.42), 0.285)))\n    return false;\n  color = inside(ellipse(vec2(-0.625, 0.23), vec2(-0.59, 0.576), 1.38)) ? eyeColor1 : eyeColor0;\n  return true;\n}\n\nbool rightEye3(out vec3 color) {\n  if (outside(ellipse(vec2(-0.61, 0.29), vec2(-0.538, 0.5844), 1.23)))\n    return false;\n  if (outside(ellipse(vec2(-0.584, 0.355), vec2(-0.56, 0.518), 1.24))\n      && inside(ellipse(vec2(-0.611, 0.31), vec2(-0.574, 0.42), 1.575))\n        && inside(ellipse(vec2(-0.701, 0.09), vec2(-0.58, 0.38), 1.17))) {\n    color = eyeColor6;\n    return true;\n  }\n  if (outside(ellipse(vec2(-0.584, 0.367), vec2(-0.546, 0.518), 1.2))\n      && inside(ellipse(vec2(-0.611, 0.299), vec2(-0.56, 0.48), 1.37))\n        && inside(ellipse(vec2(-0.68, 0.09), vec2(-0.58, 0.42), 1.17))) {\n    color = eyeColor5;\n    return true;\n  }\n  color = eyeColor3;\n  return true;\n}\n\nbool rightEye4(out vec3 color) {\n  if (inside(ellipse(vec2(-0.627, 0.49), vec2(-0.589, 0.583), 1.35))) {\n    color = eyeColor2;\n    return true;\n  }\n  if (inside(circle(vec2(-0.576, 0.445), 0.01)) || inside(circle(vec2(-0.54, 0.32), 0.01))) {\n    color = eyeColor4;\n    return true;\n  }\n  return false;\n}\n\nbool rightEye(out vec3 color) {\n  if (rightEye0(color))\n    return true;\n  if (rightEye1(color))\n    return true;\n  if (rightEye4(color))\n    return true;\n  if (rightEye3(color))\n    return true;\n  return rightEye2(color);\n}\n\nbool layer3(out vec3 color) {\n  if (leftEye(color))\n    return true;\n  return rightEye(color);\n}\n\nbool mouth(out vec3 color) {\n  if (outside(ellipse(vec2(-1.01, -0.04), vec2(-1.095, 0.02), 1.44)))\n    return false;\n  if (inside(ellipse(vec2(-1.01, -0.04), vec2(-1.095, 0.02), 1.4))\n     && inside(circle(vec2(-1.04, -0.045), 0.102))) {\n    color = inside(ellipse(vec2(-1.0, -0.09), vec2(-1.092, 0.002), 1.34)) ? mouthColor2 : mouthColor1;\n    return true;\n  }\n  color = mouthColor0;\n  return true;\n}\n\nbool nose(out vec3 color) {\n  if (inside(circle(vec2(-1.061, 0.228), 0.1))\n    && inside(circle(vec2(-1.107, 0.304), 0.019))\n      && outside(circle(vec2(-1.058, 0.29), 0.045))) {\n    color = (inside(circle(vec2(-1.007, 0.31), 0.1)) && outside(circle(vec2(-1.176, 0.379), 0.1))) ? borderColor : faceColor2;\n    return true;\n  }\n  return false;\n}\n\nbool leftEyebrow(out vec3 color) {\n  float c = circle(vec2(-0.85, 0.586), 0.502);\n  if (outside(c) || inside(c) || !inside(circle(vec2(-1.1, 1.072), 0.202)))\n    return false;\n  color = borderColor;\n  return true;\n}\n\nbool rightEyebrow(out vec3 color) {\n  if (inside(circle(vec2(-0.77, 0.42), 0.56)))\n    return false;\n  vec2 p0 = vec2(-0.66, 0.601), p1 = vec2(-0.57, 0.742);\n  float r0 = 0.397, r1 = r0 - distance(p0, p1);\n  float c0 = circle(p0, r0), c1 = circle(p1, r1);\n  float f = cross2(position() - p0, p1 - p0);\n  if ((f < 0.0) ? (outside(c1) || inside(c1)) : (outside(c0) || inside(c0)))\n    return false;\n  color = borderColor;\n  return true;\n}\n\nbool layer4(out vec3 color) {\n  if (leftEyebrow(color))\n    return true;\n  if (rightEyebrow(color))\n    return true;\n  if (mouth(color))\n    return true;\n  return nose(color);\n}\n\nbool ear0(out vec3 color) {\n  vec2 p0 = vec2(-0.249, 0.192), p1 = vec2(-0.09, 0.25);\n  float r0 = 0.202, r1 = r0 - distance(p0, p1);\n  float c0 = circle(p0, r0), c1 = circle(p1, r1);\n  float c = (cross2(position() - p0, p1 - p0) < 0.0) ? c1 : c0;\n  if (outside(c))\n    return false;\n  color = inside(c) ? faceColor1 : borderColor;\n  return true;\n}\n\nbool ear1(out vec3 color) {\n  vec2 p1 = vec2(-0.155, 0.23), p2 = vec2(-0.11, 0.21);\n  float c1 = circle(vec2(-0.14, 0.397), 0.204);\n  float c2 = circle(p1, 0.06);\n  float e = ellipse(vec2(-0.144, 0.16), vec2(-0.099, 0.235), 1.18);\n  if (outside(c1) || outside(e))\n    return false;\n  if (!inside(e))\n    color = borderColor;\n  else {\n    if (outside(c2))\n      return false;\n    color = (inside(c1) && ((cross2(position() - p1, p2 - p1) < 0.0) || inside(c2))) ? faceColor2 : borderColor;\n  }\n  return true;\n}\n\nbool ear2(out vec3 color) {\n  vec2 p1 = vec2(-0.2, -0.155);\n  float r1 = 0.2, c1 = circle(p1, r1);\n  vec2 p2 = vec2(-0.2, 0.1);\n  float r2 = distance(p1, p2) - r1, c2 = circle(p2, r2);\n  if (cross2(position() - p1, p2 - p1) < 0.0) {\n    if (inside(c1))\n      return false;\n    color = outside(c1) ? faceColor2 : borderColor;\n  } else {\n    vec2 p = vec2(-0.144, 0.156);\n    bool e = inside(ellipse(p, vec2(-0.36, -0.1), 1.04)) || inside(ellipse(p, vec2(-0.36, 0.1), 1.04));\n    if ((cross2(position() - p2, vec2(-0.15, 0.075) - p2) < 0.0)) {\n      if (!e)\n        return false;\n      color = faceColor2;\n    } else if (inside(c2)) {\n      if (!e)\n        return false;\n      color = faceColor2;\n    } else {\n      if (outside(c2))\n        return false;\n      color = borderColor;\n    }\n  }\n  return true;\n}\n\nbool ear3(out vec3 color) {\n  if (inside(circle(vec2(-0.2, -0.155), 0.2)))\n    return false;\n  vec2 p1 = vec2(-0.64, 0.28);\n  float r1 = 0.5, c1 = circle(p1, r1);\n  vec2 p2 = vec2(-0.172, 0.144);\n  float r2 = r1 - distance(p1, p2), c2 = circle(p2, r2);\n  float c = (cross2(position() - p1, p2 - p1) < 0.0) ? c2 : c1;\n  if (inside(c) || outside(c))\n    return false;\n  color = borderColor;\n  return true;\n}\n\nbool layer5(out vec3 color) {\n  if (inside(circle(vec2(-1.505, 1.15), 1.66)))\n    return false;\n  if (ear3(color))\n    return true;\n  if (ear2(color))\n    return true;\n  if (ear1(color))\n    return true;\n  return ear0(color);\n}\n\nbool ikachan(out vec3 color) {\n  if (layer4(color))\n    return true;\n  if (layer0(color))\n    return true;\n  if (layer5(color))\n    return true;\n  if (layer3(color))\n    return true;\n  if (layer1(color))\n    return true;\n  return layer2(color);\n}\n\t\nvec3 filter(vec3 color) {\n  return color * 0.5 * (2.0 - simFragCoord.x / vertexResolution.x + simFragCoord.y / vertexResolution.y);\n}\n\nvoid main() {float finalDesiredPointSize = 3.;\nfloat maxFinalSquareSideSize = floor(sqrt(vertexCount));\nfloat finalMaxVertexCount = maxFinalSquareSideSize*maxFinalSquareSideSize;\nfloat maxVerticesPerLine = floor(maxFinalSquareSideSize  *resolution.x/resolution.y);\nvertexResolution = vec2(maxVerticesPerLine, floor(finalMaxVertexCount/maxVerticesPerLine));\nfloat finalVertexCount = vertexResolution.x*vertexResolution.y;\nfloat finalVertexId = mod(vertexId,finalVertexCount);\nfloat x = mod(finalVertexId, vertexResolution.x);\nfloat y = floor(finalVertexId / vertexResolution.x);\nsimFragCoord = vec4(x,y,1.,1.);//simfragCoord will replace the gl_FragCoord of fragment shader\nfloat u_i = (x /vertexResolution.x);\nfloat v_i = (y /vertexResolution.y);\nfloat sizeFactor = finalDesiredPointSize*vertexResolution.x/resolution.x;\nfloat ux = sizeFactor*(u_i - 0.5);\nfloat vy = sizeFactor*(v_i - 0.5);\ngl_PointSize = finalDesiredPointSize;\ngl_Position = vec4(ux, vy, 0., 1.);\nvec2 surfacePosition = vec2(ux,vy);\n\n  vec3 color;\n  v_color = vec4(filter(ikachan(color) ? color : backgroundColor), 1.0);\n}\n\n"
  },
  "screenshotURL": "data/images/images-5tuvnoje2dgz60iag-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "28"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "zBS6bb9HLEeXpwM3h"
}