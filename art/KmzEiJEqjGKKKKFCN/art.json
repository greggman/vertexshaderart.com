{
  "_id": "KmzEiJEqjGKKKKFCN",
  "owner": {
    "_id": "pgKWPgR9Cfeze4JZf",
    "createdAt": {
      "$date": 1684327971226
    },
    "profile": {
      "name": "seoseulbin",
      "avatarUrl": "https://avatars.githubusercontent.com/seoseulbin?s=200"
    },
    "username": "seoseulbin"
  },
  "createdAt": {
    "$date": 1684842203764
  },
  "modifiedAt": {
    "$date": 1684842203764
  },
  "origId": null,
  "name": "Audio Reactive Art 2",
  "notes": "",
  "rank": 1.4212212788747174,
  "private": false,
  "unlisted": true,
  "username": "seoseulbin",
  "avatarUrl": "https://avatars.githubusercontent.com/seoseulbin?s=200",
  "settings": {
    "num": 17711,
    "mode": "POINTS",
    "sound": "https://soundcloud.com/caseandpoint/case-point-upgrade-free-download",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0.054901960784313725,
      0.0392156862745098,
      0.06274509803921569,
      1
    ],
    "shader": "#define PI radians(180.)\n#define NUM_SEGMENTS 4.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n\n// Seulbin Seo\n// Exercise Audio Reactive Art 2\n// CS250 Spring 2023\n\nvec3 hav2rgb(vec3 c)\n{\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.x * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main ()\n{\n  float down = floor(sqrt(vertexCount));\n  float across = floor(vertexCount / down);\n  \n  float x = mod(vertexId, across);\n  float y = floor(vertexId / across);\n  \n  float u = x / (across - 1.);\n  float v = y / (across - 1.);\n  \n  float xoff = 0.; //sin(time + y * 0.2) * 0.1;\n  float yoff =  0.; //sin(time + x * 0.3) * 0.2;\n  \n  float count = floor(vertexId / NUM_POINTS);\n  \n  float ux = cos((count * 0.0) + time * 0.4 + count * 0.1) * (count * 0.001); //u * 2. - 1. + xoff;\n  float vy = sin((count * 0.0) + time + count * 0.1) * (count * 0.001); ///v * 2. - 1. + yoff;\n  \n  vec2 xy = vec2(ux, vy)* 1.3;\n \n  \n  float su = abs(u - 0.5) * 2.;\n  float sv = abs(v - 0.5) * 2.;\n  float au = abs(atan(su, sv)) / PI;\n  float av = length(vec2(sv, su));\n  float snd = texture2D(sound, vec2(fract(count / 128.), fract(count / 20000.))).a; //au * .05, av * .25)).a;\n  \n  gl_Position = vec4(xy, 0, 1);\n  \n  float soff = 0.; //sin(time * 1.2 + x * y * 0.02) * 5.;\n  \n  gl_PointSize = pow(snd + 0.2, 5.) * 30. + soff;\n  gl_PointSize *= 20. / across;\n  gl_PointSize *= resolution.x / 600.;\n  \n  float pump = step(0.8, snd);\n  float hue =count * 1.001 +  time * 0.01; // + sin(time * 1.3 + v * 20.) * 0.05;\n  float sat = mix(0., 1., pump);\n  float val =mix(.1, pow(snd + 0.2, 5.), pump); //sin(time * 1.4 + v * u * 20.0) * .5 + .5;\n \n  v_color = vec4 (hav2rgb(vec3(hue, 1, 1)), 1);\n}"
  },
  "screenshotURL": "data/images/images-0ewettubie35s3flt-thumbnail.jpg",
  "hasSound": true,
  "views": 3,
  "likes": 0,
  "revisionId": "7PC8HzezEazi6njiN"
}