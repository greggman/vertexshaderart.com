{
  "_id": "DtkxEHAy7rFi4TCjx",
  "owner": {
    "_id": "33GYvgRj3LP6Xt7T6",
    "createdAt": {
      "$date": {
        "$numberLong": "1652800663941"
      }
    },
    "username": "hyosang_jung",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/012973e43b86800472c970853da48caf?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1654001046358"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1654001046358"
    }
  },
  "origId": null,
  "name": "Circles from Triangles",
  "notes": "",
  "rank": {
    "$numberDouble": "1.6880759911959866"
  },
  "private": false,
  "unlisted": true,
  "username": "hyosang_jung",
  "avatarUrl": "https://secure.gravatar.com/avatar/012973e43b86800472c970853da48caf?default=retro&size=200",
  "settings": "{\"num\":100000,\"mode\":\"TRIANGLES\",\"sound\":\"https://soundcloud.com/user6017377/6n5vosmj8t2h?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"//Name: Hyosang Jung\\n//Assignment Name: Exercise - Vertexshaderart : Circles from Triangles\\n//Course Name: CS250\\n//Term&Year: 2022&Spring\\nvec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n#define PI radians(180.0)\\nmat4 rotZ(float angleInRadians){\\n  float s = sin(angleInRadians);\\n  float c = cos(angleInRadians);\\n  return mat4(\\n    c,-s,0,0,\\n    s,c,0,0,\\n    0,0,1,0,\\n    0,0,0,1);\\n}\\n\\nmat4 trans(vec3 trans){\\n  return mat4(\\n  \\t1,0,0,0,\\n    0,1,0,0,\\n    0,0,1,0,\\n    trans,1);\\n}\\nmat4 ident(){\\n    return mat4(\\n  \\t1,0,0,0,\\n    0,1,0,0,\\n    0,0,1,0,\\n    0,0,0,1);\\n}\\nmat4 scale(vec3 s)\\n{\\n    return mat4(\\n  \\ts[0],0,0,0,\\n    0,s[1],0,0,\\n    0,0,s[2],0,\\n    0,0,0,1);\\n}\\nmat4 uniformScale(float s){\\n    return mat4(\\n  \\ts,0,0,0,\\n    0,s,0,0,\\n    0,0,s,0,\\n    0,0,0,1);\\n}\\n\\nvec2 getCirclePoint(float id, float numCircleSegments)\\n{\\n\\n  float ux = floor(id / 6.) + mod(id,2.);\\n  float vy = mod(floor(id/2.) + floor(id / 3.),2.);\\n\\n  \\n  float angle = ux / numCircleSegments * PI * 2.;\\n  float c = cos(angle);\\n  float s = sin(angle);\\n  \\n  float radius = vy +1.;\\n  \\n  float x = c * radius;\\n  float y = s * radius;\\n\\n  return vec2(x,y);\\n}\\n\\nvoid main() {\\n  float numCircleSegments = 12.;\\n  vec2 circleXY = getCirclePoint(vertexId,numCircleSegments);\\n  \\n  float numPointsPerCircle = numCircleSegments * 6.;\\n  float circleId = floor(vertexId/ numPointsPerCircle);\\n  float numCircles = floor(vertexCount / numPointsPerCircle);\\n  \\n  float sliceId = floor(vertexId/ 6.0);\\n  float oddSlice = mod(sliceId,2.);\\n  \\n  \\n  float down = floor(sqrt(numCircles));\\n  float across = floor(numCircles / down);\\n  float x = mod(circleId, across);\\n  float y = floor(circleId / across);\\n  \\n  float u = x / (across - 1.);\\n  float v = y / (across - 1.);\\n  \\n  float xoff = 0.;//sin(time + y * 0.2) * 0.1;\\n  float yoff = 0.;//sin(time + x * 0.3) * 0.2;\\n  \\n  \\n  float ux = u * 2. - 1. + xoff;\\n  float vy = v * 2. - 1. + yoff;\\n  \\n  float su = abs(u - 0.5) * 2.;\\n  float sv = abs(v - 0.5) * 2.;\\n  \\n  float au = abs(atan(su, sv)) / PI;\\n  float av = length(vec2(su, sv));\\n  \\n  float snd = texture2D(sound, vec2(au* .05, av * .25)).a;\\n\\n  \\n  float sc = pow(snd+0.2,5.) * mix(1., 1.1, oddSlice);\\n  float aspect = resolution.x / resolution.y;\\n  \\n  sc *= 20. / across;\\n  \\n  \\n  vec4 pos = vec4(circleXY , 0 ,1);\\n  mat4 mat = ident();\\n  \\n  mat *= scale(vec3(1,aspect,1));\\n  mat *= rotZ(time * 0.1);\\n  mat *= trans(vec3(ux,vy,0) * 1.3);\\n  mat *= rotZ(snd * 20. * sign(ux));\\n  mat *= uniformScale(0.05 * sc );\\n  \\n \\n  gl_Position = mat * pos;\\n  \\n  \\n  float soff = 0.;//sin(time + x * y * .02) * 5.;  \\n\\n  float pump = step(0.8, snd);\\n  \\n  float hue = u * .1 + snd * 0.2 + time * .1; //sin(time + v * 20.) * .05;\\n  float sat = 1.;//mix(0.5, 1., pump);\\n  float val = mix(.4, pow(snd + 0.2, 5.0), pump);\\n  \\n  hue = hue + pump * oddSlice *0.5 + pump * 0.33;\\n  val += oddSlice * pump;\\n  \\n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), 1);\\n}\"}",
  "screenshotURL": "data/images/images-ntq3pca9pmoetxeer-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "3"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "eweF8AL9gtGprzBC7"
}