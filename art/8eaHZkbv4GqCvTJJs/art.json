{
  "_id": "8eaHZkbv4GqCvTJJs",
  "owner": {
    "_id": "B7Kfai5f9h3MxwJcP",
    "createdAt": {
      "$date": "1445777397953"
    },
    "username": "gman",
    "profile": {
      "info": "&nbsp;&nbsp;contact: [@greggman](http://twitter.com/greggman), [github](http://github.com/greggman), [blog](http://greggman.com)\nnew stuff: [webgl](http://webglfundamentals.com), [twgl](http://twgljs.org), [threejsfundamentals](https://threejsfundamentals.org)\nold stuff: [chrome](http://chromium.org), [locoroco](https://www.youtube.com/watch?v=pFKpyScxv0k), [CTR](https://www.youtube.com/watch?v=3O8FK5d67cM), [Zombie Revenge](https://www.youtube.com/watch?v=Xw8yNik8Q-A), [and others...](http://games.greggman.com/game/games_o_the_greggman/)\n\nSome stuff you might want to look at\n\n*   [A uniform grid based on `vertexCount` and the window dimensions](https://www.vertexshaderart.com/art/NPohkmBgKdTBhML8P)\n*   [Tons of matrix functions](https://www.vertexshaderart.com/art/nr3EiyXWLMpwoouHt)\n\nNote: All the shaders I've posted are licensed [CC0](https://creativecommons.org/publicdomain/zero/1.0/)",
      "avatarUrl": "https://secure.gravatar.com/avatar/dcc0309895c3d6db087631813efaa9d1?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": "1446193337149"
  },
  "origId": "hhsdvkiJ32bCTcezv",
  "name": "eswng",
  "username": "gman",
  "settings": {
    "num": 5000,
    "mode": "LINE_LOOP",
    "sound": "https://soundcloud.com/fnkypanda/electroswing-11-acorn-lane-spend-my-time-with-you-electro-swing-remix",
    "lineSize": "CSS",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define PI 3.14159\n#define NUM_SEGMENTS 21.0\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n#define STEP 5.0\n#define ACROSS 100.0\n#define TOTAL 5000.0\n#define DOWN (TOTAL / ACROSS)\n//#define FIT_VERTICAL\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  \n  float count = mod(vertexId, TOTAL) + time * 0.0;\n  float xId  = mod(vertexId, ACROSS);\n  float yId  = floor(vertexId / ACROSS);\n  float xr   = xId / ACROSS;\n  float yr   = yId / DOWN;\n  float invX = 1.0 - xr;\n  float invY = 1.0 - yr;\n  float x    = xr * 2.0 - 1.0;\n  float y    = yr * 2.0 - 1.0;\n  \n\n  vec2 aspect = vec2(1, resolution.x / resolution.y);\n\n  vec2 xy = vec2(x, y);\n\n  float dd = length(xy);\n  float x2 = xr;\n  float y2 = yr;\n  float snd = pow(texture2D(sound, vec2(abs(dd) * 0.2, dd * 0.05)).a, 5.0);\n  gl_PointSize = pow(snd, 1.0) * 20.0;\n \n//  xy = xy + xy * snd ;\n  gl_Position = vec4(xy * aspect * pow(snd + 0.4, 2.0), 0, 1);\n  \n  float hue = (snd * 0.2) + time;\n  v_color = vec4(mix(hsv2rgb(vec3(hue, 1, 1)), vec3(1,1,1), pow(snd, 0.5)), 1.0);\n  v_color = vec4(v_color.rgb * v_color.a, v_color.a);\n}"
  },
  "screenshotURL": "data/images/images-kuoxs8iblkjgbtu6l-thumbnail.jpg",
  "views": "3779",
  "likes": "7",
  "revisionId": "scmxu6kWcN3vkYKkg",
  "modifiedAt": {
    "$date": "1446193337153"
  },
  "hasSound": true,
  "rank": "10.926830245222119",
  "avatarUrl": "https://secure.gravatar.com/avatar/dcc0309895c3d6db087631813efaa9d1?default=retro&size=200"
}