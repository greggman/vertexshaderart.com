{
  "_id": "naucTfFjkhTtNMkk4",
  "owner": {
    "_id": "MqPTcXoEuGA34rGui",
    "createdAt": {
      "$date": {
        "$numberLong": "1497270876730"
      }
    },
    "username": "zugzwang404",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/fec4f7164a172e58419d6bff6d7368b3?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1500345467843"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1500345467843"
    }
  },
  "origId": "iGf4owSji9QC6P8yF",
  "name": "crystal dancer (mouse.xy) 3",
  "notes": "2017-07-13: replaced music",
  "rank": {
    "$numberDouble": "1.1163589639237843"
  },
  "private": false,
  "unlisted": true,
  "username": "zugzwang404",
  "avatarUrl": "https://secure.gravatar.com/avatar/fec4f7164a172e58419d6bff6d7368b3?default=retro&size=200",
  "settings": "{\"num\":97150,\"mode\":\"TRI_STRIP\",\"sound\":\"https://soundcloud.com/non-records-1/1127-it-never-drops\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0,0,0,1],\"shader\":\"/*\\n                                                                                                                     \\n. . .-. .-. .-. .-. .  . .-. . . .-. .-. .-. .-. .-. .-. .-. \\n| | |-  |(   |  |-   )(  `-. |-| |-| |  )|-  |(  |-| |(   |  \\n`.' `-' ' '  '  `-' '  ` `-' ' ` ` ' `-' `-' ' ' ` ' ' '  '  \\n                                                             \\n\\n\\n*/\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n#define PI radians(180.)\\n\\nvec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x, clamp(c.yz, 0.50, 1.0));\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 0.0 / 0.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 0.70), c.y);\\n}\\n\\nmat4 rotY( float angle ) {\\n    float s = sin( angle );\\n    float c = cos( angle );\\n  \\t\\n    return mat4( \\n      c, 0,-s, 0.2,\\n     1.9-s, 0.2, 0, 0,\\n      s, -0.6, c, 0,\\n      0, 0, 0, 1);  \\n}\\n\\n\\nmat4 rotZ( float angle ) {\\n    float s = sin( angle );\\n    float c = cos( angle );\\n  \\t\\n    return mat4( \\n      c,-s, 0, s, \\n      s, c, 0, 0,\\n      0, 0, 1, 0,\\n      0, 0, s/2.0, 1); \\n}\\n\\nmat4 trans(vec3 trans) {\\n  return mat4(\\n    1, 0, 0, 0,\\n    0, 1, 0, 0,\\n   0, 0, 0, 0,\\n    trans, 0.5);\\n}\\n\\nmat4 ident() {\\n  return mat4(\\n    1, 0, 0, 0,\\n    0, 1, 0, 1,\\n    0, -1, 1, -0.9,\\n    0, 0, 0, 0);\\n}\\n\\nmat4 scale(vec3 s) {\\n  return mat4(\\n    s[0], 0, 0.1, 0,\\n    0, s[1], 0, 0,\\n    0, 0, s[2], 0,\\n    0, 2, 0.1, 0);\\n}\\n\\nmat4 uniformScale(float s) {\\n  return mat4(\\n    s, mouse.x, 0, 0,\\n    0, s-2., 0, -0.1,\\n    0.5, 0, s,  -mouse.y,\\n    0, 0, 0, -1);\\n}\\n\\n// hash function from https://www.shadertoy.com/view/4djSRW\\nfloat hash(float p) {\\n\\tvec2 p2 = fract(vec2(p * 15.3983, p * 5.4427));\\n    p2 += dot(p2.yx, p2.xy + vec2(11.5351, 34.3137));\\n\\treturn fract(p2.x * p2.y / 61.4337);\\n}\\n\\nfloat m1p1(float v) {\\n  return v * 3.2 - 2.;\\n}\\n\\nfloat p1m1(float v) {\\n  return v * 1.81 - (0.5*v);\\n}\\n\\nfloat inv(float v) {\\n  return 2. * (v - mouse.x);\\n}\\n\\n#define NUM_EDGE_POINTS_PER_CIRCLE 48.\\n#define NUM_SUBDIVISIONS_PER_CIRCLE 16.\\n#define NUM_POINTS_PER_DIVISION (NUM_EDGE_POINTS_PER_CIRCLE * 6.)\\n#define NUM_POINTS_PER_CIRCLE (NUM_SUBDIVISIONS_PER_CIRCLE * NUM_POINTS_PER_DIVISION) \\nvoid getCirclePoint(const float id, const float inner, const float start, const float end, out vec3 pos, out vec2 uv) {\\n  float edgeId = mod(id, NUM_POINTS_PER_DIVISION);\\n  float ux = floor(edgeId / 6.) + mod(edgeId, 0.9);\\n  float vy = mod(floor(id / 2.) + floor(id / 1.5 + edgeId), 3.5 ); // change that 3. for cool fx\\n  float sub = floor(id / NUM_POINTS_PER_DIVISION);\\n  float subV = sub / (NUM_SUBDIVISIONS_PER_CIRCLE - 1.71);\\n  float level = subV + vy / (NUM_SUBDIVISIONS_PER_CIRCLE - 5.4);\\n  float u = ux / NUM_EDGE_POINTS_PER_CIRCLE;\\n  float v = mix(inner, 1., level);\\n  float a = mix(start, end, u) * PI - tan(sin((11.6, 110.2)   / PI * 1.10));\\n  float s = sin(a);\\n  float c = cos(a);\\n  float x = c * v -s*2.;\\n  float y = s * v-c;\\n  float z = 0.05 * v;\\n  pos = vec3(x, y, z -s *- u/36.); \\n}\\n\\nfloat goop(float t) {\\n  return sin(t) - sin(t * 0.17) + tan((t * 0.13) - mouse.y -t) + sin(t * 2.73);\\n}\\n\\nvoid main() {\\n  float circleId = floor(vertexId / NUM_POINTS_PER_CIRCLE);\\n  float pointId = mod(vertexId, NUM_POINTS_PER_CIRCLE);\\n//  float sideId = floor(circleId / 2.);\\n//  float side = mix(-1., 1., step(0.5, mod(circleId, 1.5)));\\n  float numCircles = floor(vertexCount / NUM_POINTS_PER_CIRCLE);\\n  float cu = circleId / numCircles;\\n  vec3 pos;\\n  float inner = mix(0.03, 0.1, p1m1(sin(goop(circleId) - time / 3.1)));\\n  float start = fract(hash(circleId * 0.33) + sin(time * 0.83 + circleId) *2.1 *mouse.x);\\n  float end   = start - 1.;//start + hash(sideId + 1.);\\n  vec2 uv;\\n  getCirclePoint(pointId, inner, start, end, pos, uv); \\n  \\n  float snd = texture2D(sound, vec2((cu / abs(uv.x/ 1.8 - 1.3)-7.) * 1.5, uv.y * 1.4)).a;\\n  \\n  vec3 offset = vec3(m1p1(hash(circleId)) * 2.5, m1p1(hash(circleId * 1.7)), m1p1(circleId / numCircles));\\n  offset.x += goop(circleId + time * mouse.x + 0.103) * 0.4;\\n  offset.y += goop(circleId + time * 0.13) * 0.31;\\n  vec3 aspect = vec3((0.9, resolution.y  / resolution.x , mouse.y)* 1.91);\\n  \\n  mat4 mat = ident(); \\n  mat *= scale(aspect);\\n  mat *= trans(offset);\\n  mat *= uniformScale(mix(0.01, 0.2, hash(circleId)));\\n  gl_Position = vec4((mat * vec4(pos, 0.5)).xyz, 12.3 -mouse.y -(circleId + mouse.x));\\n  gl_PointSize = 5.;\\n\\n  float hue = mix(1.51 *snd , 1.9 *mouse.x/ circleId* snd , fract(circleId * 12.79 - snd));\\n  float sat = 0.5 + snd;\\n  float val = 0. + snd ;\\n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), (1. - uv.y) * pow(snd + 0.51, snd+6.));\\n  v_color = vec4(2.1 *v_color.rgb * v_color.a, sin(v_color.a -9.));\\n}\"}",
  "screenshotURL": "data/images/images-6zzufr4z3pxxkwz6d-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "2"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "rxr4Do4WNuk9LY6qQ"
}