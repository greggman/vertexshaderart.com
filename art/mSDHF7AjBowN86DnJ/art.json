{
  "_id": "mSDHF7AjBowN86DnJ",
  "owner": {
    "_id": "duxi6M5TiGWZ5CeBh",
    "createdAt": {
      "$date": 1445820506349
    },
    "profile": {
      "name": "Visa-Valtteri Pimi√§",
      "avatarUrl": "https://avatars.githubusercontent.com/visy?s=200",
      "info": "```sh\nDemo maker and coder from Helsinki, Finland.\nWorking on any interesting platforms.\nThis is where we make vertex shader stuff.\n```"
    },
    "username": "visy"
  },
  "createdAt": {
    "$date": 1445995841297
  },
  "origId": null,
  "name": "synapsicorporation",
  "username": "visy",
  "settings": {
    "num": 20785,
    "mode": "LINE_STRIP",
    "sound": "https://soundcloud.com/chiptune/05-boss-v2-3",
    "lineSize": "NATIVE",
    "backgroundColor": [
      0,
      0,
      0,
      1
    ],
    "shader": "#define PI 3.14159\n#define NUM_POINTS (NUM_SEGMENTS * 2.0)\n#define STEP 1.0\n//#define FIT_VERTICAL\n\n// music by rez! here we goooooooo-oo-oo-oooooooo.....\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n\n  float localTime = time + 20.0;\n  \n  float NUM_SEGMENTS =  localTime*cos(texture2D(floatSound,vec2(localTime*0.0000001,cos(localTime*0.0000001))).a*0.00001);\n  float point = mod(floor(vertexId / 2.0) + mod(vertexId, 2.0) * STEP, NUM_SEGMENTS);\n  float count = floor(vertexId / NUM_POINTS);\n  float offset = count * 0.02;\n  float angle = point * PI * 2.0 / NUM_SEGMENTS + offset;\n  float radius = 0.2+cos(texture2D(floatSound,vec2(count*0.01,angle*0.01)).a*0.0001*localTime);\n  float c = cos(angle + localTime) * radius;\n  float s = sin(angle + localTime) * radius;\n  float orbitAngle = count * 0.01*texture2D(floatSound,vec2(localTime,s+vertexId*0.01)).a*0.01;\n  float oC = cos(orbitAngle + localTime * count * 0.01) * sin(orbitAngle);\n  \n  float aa = (localTime*0.001)*cos(localTime*0.0001*vertexId);\n  float oS = sin(orbitAngle + localTime * count * 0.01) * sin(orbitAngle-aa);\n\n  #ifdef FIT_VERTICAL\n    vec2 aspect = vec2(resolution.y / resolution.x, 1);\n  #else\n    vec2 aspect = vec2(1, resolution.x / resolution.y);\n  #endif\n\n  vec2 xy = vec2(\n      oC + c,\n      oS + s);\n  gl_Position = vec4(xy * aspect + mouse * 0.1, 0, 1);\n\n  float hue = (localTime * 0.01 + count * 1.001);\n  v_color = vec4(hsv2rgb(vec3(hue, 1, 1)), 1);\n}"
  },
  "screenshotDataId": "iZngnCo9QYyKxdt9w",
  "views": 1058,
  "likes": 1,
  "revisionId": "dBNzKmaq6qcCMkiBK",
  "screenshotURL": "data/images/images-iZngnCo9QYyKxdt9w-thumbnail.png",
  "modifiedAt": {
    "$date": 1445995893319
  },
  "hasSound": true,
  "rank": 1.659510212648834,
  "avatarUrl": "https://avatars.githubusercontent.com/visy?s=200"
}