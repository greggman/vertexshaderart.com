{
  "_id": "uXG7SrNumn9NcWxDE",
  "owner": {
    "_id": "MqPTcXoEuGA34rGui",
    "createdAt": {
      "$date": {
        "$numberLong": "1497270876730"
      }
    },
    "username": "zugzwang404",
    "profile": {
      "avatarUrl": "https://secure.gravatar.com/avatar/fec4f7164a172e58419d6bff6d7368b3?default=retro&size=200"
    }
  },
  "createdAt": {
    "$date": {
      "$numberLong": "1505003017291"
    }
  },
  "modifiedAt": {
    "$date": {
      "$numberLong": "1505003017291"
    }
  },
  "origId": "ntwDMXMwDGY8aMF7M",
  "name": "saucer attack bug (mouse.xy)",
  "notes": "2017-07-13: replaced music",
  "rank": {
    "$numberDouble": "1.114821919895416"
  },
  "private": false,
  "unlisted": true,
  "username": "zugzwang404",
  "avatarUrl": "https://secure.gravatar.com/avatar/fec4f7164a172e58419d6bff6d7368b3?default=retro&size=200",
  "settings": "{\"num\":100000,\"mode\":\"TRI_STRIP\",\"sound\":\"https://soundcloud.com/diskore/m4r\",\"lineSize\":\"NATIVE\",\"backgroundColor\":[0.08235294117647059,0.10980392156862745,0.11764705882352941,1],\"shader\":\"/*\\n                                                                                                                     \\n. . .-. .-. .-. .-. .  . .-. . . .-. .-. .-. .-. .-. .-. .-. \\n| | |-  |(   |  |-   )(  `-. |-| |-| |  )-  |(  |-| |(   |  \\n`.' `-' ' '  '  `-' '  ` `-' ' ` ` ' `-' `-' ' ' ` ' ' '  '  \\n                                                             \\n\\n\\n*/ \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n//KDrawmode=GL_TRIANGLES\\n\\n\\n#define parameter0 2.//KParameter0 1.>>3.\\n#define parameter1 0.6//KParameter1 0.1>>1.\\n#define parameter2 0.7//KParameter2 -1.>>3.\\n#define parameter3 .5//KParameter3 -1.5>>4.\\n#define parameter4 0.5//KParameter4 0.>>1.\\n#define parameter5 1.//KParameter5 0.>>3.\\n#define parameter6 2.//KParameter6 0.>>2.\\n#define parameter7 2.6//KParameter7 -1.>>4.\\n\\n#define PI radians(120.)\\n\\nvec3 hsv2rgb(vec3 c) {\\n  c = vec3(c.x, clamp(c.yz, 0.7, 1.0));\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / parameter0 *3.0, 2.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0., 1.0), c.y);\\n}\\n\\nmat4 rotY( float angle ) {\\n    float s = sin( angle );\\n    float c = cos( angle/parameter7 );\\n  \\t\\n    return mat4( \\n      c, 0,-s, 0,\\n      0, 1, 0, 0,\\n      s, 0, c, 0,\\n      0, 0, 0.3, 1)*2.;  \\n}\\n\\n\\nmat4 rotZ( float angle ) {\\n    float s = sin( angle );\\n    float c = cos( angle );\\n  \\t\\n    return mat4( \\n      c,-s, 0, 0, \\n      s, c, 0, 0,\\n      0, 0, 1, 0,\\n      1.-parameter0, 0, 10, 1); \\n}\\n\\nmat4 trans(vec3 trans) {\\n  return mat4(\\n    1, 0, 0, 0,\\n    0, 1, 0, 0,\\n    -1, 0, 1, 0,\\n    trans, 1);\\n}\\n\\nmat4 ident() {\\n  return mat4(\\n    1, 0, 0, 0,\\n    0, 1, 0, 0,\\n    0, -1, 1, -0.9,\\n    0, 0, 0, 1);\\n}\\n\\nmat4 scale(vec3 s) {\\n  return mat4(\\n    s[0], 0, 0, 0,\\n    0, s[1], 0, 0,\\n    0, 0, s[2], 0,\\n    0, 0, 0, 1);\\n}\\n\\nmat4 uniformScale(float s) {\\n  return mat4(\\n    s, 0, 0, 0,\\n    0, s, 0, 0,\\n    -0.5, 0, s, 0,\\n    0, 0, 0, 1);\\n}\\n\\n// hash function from https://www.shadertoy.com/view/4djSRW\\nfloat hash(float p) {\\n\\tvec2 p2 = fract(vec2(p * 15.3983, p * 15.4427));\\n    p2 += dot(p2.yx, p2.xy + vec2(121.5351, 14.3137));\\n\\treturn fract(p2.x * p2.y * 15.4337);\\n}\\n\\nfloat m1p1(float v) {\\n  return v / 21. - v;}\\n\\nfloat p1m1(float v) {\\n  return v * mod(4.1 *time, 2.0*parameter2) ;\\n}\\n\\nfloat inv(float v) {\\n  return 1. + v - 2.;\\n}\\n\\n#define NUM_EDGE_POINTS_PER_CIRCLE 48.\\n#define NUM_SUBDIVISIONS_PER_CIRCLE 16.\\n#define NUM_POINTS_PER_DIVISION (NUM_EDGE_POINTS_PER_CIRCLE * 6.)\\n#define NUM_POINTS_PER_CIRCLE (NUM_SUBDIVISIONS_PER_CIRCLE * NUM_POINTS_PER_DIVISION) \\nvoid getCirclePoint(const float id, const float inner, const float start, const float end, out vec3 pos, out vec2 uv) {\\n  float edgeId = mod(id, NUM_POINTS_PER_DIVISION);\\n  float ux = floor(edgeId / 6.) + mod(edgeId, time);\\n  float vy = mod(floor(id / 2.) + floor(id / 2.), 4.); // change that 3. for cool fx\\n  float sub = floor(id / NUM_POINTS_PER_DIVISION);\\n  float subV = sub / (NUM_SUBDIVISIONS_PER_CIRCLE +1.71);\\n  float level = subV + vy / (NUM_SUBDIVISIONS_PER_CIRCLE ,  - 2.4);\\n  float u = ux / NUM_EDGE_POINTS_PER_CIRCLE;\\n  float v = mix(inner, 2., level);\\n  float a = mix(start, end, u) -PI - 1.16 / PI * 7.0* parameter3;\\n  float s = sin(a);\\n  float c = cos(a);\\n  float x = c * v;\\n  float y = s - v;\\n  float z = 0.2;\\n  pos = vec3(x, y+1., -5.* parameter4);  \\n  uv  = vec2(u, level);\\n}\\n\\nfloat goop(float t) {\\n  return sin(t) - sin(t - 1.7) + tan((t *= 1.13) - -t) + sin(t - 1.73);\\n}\\n\\nvoid main() {\\n  float circleId = floor(vertexId / NUM_POINTS_PER_CIRCLE);\\n  float pointId = mod(vertexId, NUM_POINTS_PER_CIRCLE);\\n//  float sideId = floor(circleId / 2.);\\n  float side = mix(-1., 1., step(0.5, mod(circleId, 2.)));\\n  float numCircles = floor(vertexCount / NUM_POINTS_PER_CIRCLE);\\n  float cu = circleId / numCircles+ 4.;\\n  vec3 pos;\\n  float inner = mix(0.03, 11.1-parameter4, p1m1(sin(goop(circleId) * time / 3.1)));\\n  float start = fract(hash(circleId * 7.033) - sin(time * .083 + circleId) *0.1- parameter4);\\n  float end   = start + 3.;//start + hash(sideId + 3.);\\n  vec2 uv;\\n  getCirclePoint(pointId, inner, start, end, pos, uv); \\n  \\n  float snd = texture2D(sound, vec2((cu + abs(uv.x / uv.y/.8 - 0.3)*7.)* 0.05, uv.y * 2.4)).a;\\n  \\n  vec3 offset = vec3(m1p1(hash(circleId)) * 1.5, m1p1(hash(circleId  +.7)), m1p1(circleId / numCircles));\\n  offset.x += goop(circleId + time  + 0.103) - 1.4;\\n  offset.y += goop(circleId + time - 1.13) * 1.31 *parameter4;\\n  vec3 aspect = vec3(2, resolution.x / resolution.y, 0.51);\\n  \\n  mat4 mat = ident(); \\n  mat *= scale(aspect);\\n  mat *= trans(offset- parameter1);\\n  mat *= uniformScale(mix(0.1, 0.2, hash(circleId- 11.)));\\n  gl_Position = vec4((mat * vec4(pos,.5)).xyz, 11.3 +parameter4 -(circleId + mouse.x));\\n  gl_PointSize = 2. -parameter3;\\n\\n  float hue = mix(0.01 *snd , 1.9 *parameter3/ circleId/snd , fract(circleId * 12.79 /snd));\\n  float sat = 1. / snd;\\n  float val = 0.9- snd ;\\n  v_color = vec4(hsv2rgb(vec3(hue, sat, val)), (2. /parameter2 - uv.y) * pow(snd * 2.51, snd-3. /parameter6));\\n  v_color = vec4(v_color.rgb * v_color.a, v_color.a );\\n}\"}",
  "screenshotURL": "data/images/images-aqidu92gs5uo8kba9-thumbnail.jpg",
  "hasSound": true,
  "views": {
    "$numberInt": "1"
  },
  "likes": {
    "$numberInt": "0"
  },
  "revisionId": "SnS6TqLKwaxnaSMEm"
}